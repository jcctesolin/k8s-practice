{
    "kind": "NodeList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "42138"
    },
    "items": [
        {
            "metadata": {
                "name": "minikube",
                "uid": "2303f334-d287-4949-981f-a70c2fc35815",
                "resourceVersion": "41709",
                "creationTimestamp": "2025-05-13T00:36:49Z",
                "labels": {
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/os": "linux",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "minikube",
                    "kubernetes.io/os": "linux",
                    "minikube.k8s.io/commit": "dd5d320e41b5451cdf3c01891bc4e13d189586ed-dirty",
                    "minikube.k8s.io/name": "minikube",
                    "minikube.k8s.io/primary": "true",
                    "minikube.k8s.io/updated_at": "2025_05_12T21_36_54_0700",
                    "minikube.k8s.io/version": "v1.35.0",
                    "node-role.kubernetes.io/control-plane": "",
                    "node.kubernetes.io/exclude-from-external-load-balancers": ""
                },
                "annotations": {
                    "kubeadm.alpha.kubernetes.io/cri-socket": "unix:///var/run/cri-dockerd.sock",
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "podCIDR": "10.244.0.0/24",
                "podCIDRs": [
                    "10.244.0.0/24"
                ]
            },
            "status": {
                "capacity": {
                    "cpu": "2",
                    "ephemeral-storage": "1055762868Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "4015404Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "2",
                    "ephemeral-storage": "1055762868Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "4015404Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2025-05-21T23:40:38Z",
                        "lastTransitionTime": "2025-05-13T00:36:42Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2025-05-21T23:40:38Z",
                        "lastTransitionTime": "2025-05-13T00:36:42Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2025-05-21T23:40:38Z",
                        "lastTransitionTime": "2025-05-13T00:36:42Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2025-05-21T23:40:38Z",
                        "lastTransitionTime": "2025-05-13T00:36:49Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "192.168.49.2"
                    },
                    {
                        "type": "Hostname",
                        "address": "minikube"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "3256ee840abd4154b90f6b133ea92add",
                    "systemUUID": "3256ee840abd4154b90f6b133ea92add",
                    "bootID": "a85f85bf-5e09-44fe-b93b-39e94dc3333d",
                    "kernelVersion": "5.15.167.4-microsoft-standard-WSL2",
                    "osImage": "Ubuntu 22.04.5 LTS",
                    "containerRuntimeVersion": "docker://27.4.1",
                    "kubeletVersion": "v1.32.0",
                    "kubeProxyVersion": "v1.32.0",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "registry.k8s.io/ingress-nginx/controller@sha256:d56f135b6462cfc476447cfe564b83a45e8bb7da2774963b00d12161112270b7"
                        ],
                        "sizeBytes": 292667180
                    },
                    {
                        "names": [
                            "kubernetesui/dashboard@sha256:2e500d29e9d5f4a086b908eb8dfe7ecac57d2ab09d65b24f588b1d449841ef93"
                        ],
                        "sizeBytes": 245710051
                    },
                    {
                        "names": [
                            "nginx@sha256:c15da6c91de8d2f436196f3a768483ad32c258ed4e1beb3d367a27ed67253e66",
                            "nginx:latest"
                        ],
                        "sizeBytes": 192484959
                    },
                    {
                        "names": [
                            "gcr.io/k8s-minikube/minikube-ingress-dns@sha256:4211a1de532376c881851542238121b26792225faa36a7b02dccad88fd05797c"
                        ],
                        "sizeBytes": 190556102
                    },
                    {
                        "names": [
                            "registry.k8s.io/etcd@sha256:c6a9d11cc5c04b114ccdef39a9265eeef818e3d02f5359be035ae784097fdec5",
                            "registry.k8s.io/etcd:3.5.16-0"
                        ],
                        "sizeBytes": 149955875
                    },
                    {
                        "names": [
                            "registry.k8s.io/kube-apiserver@sha256:ebc0ce2d7e647dd97980ec338ad81496c111741ab4ad05e7c5d37539aaf7dc3b",
                            "registry.k8s.io/kube-apiserver:v1.32.0"
                        ],
                        "sizeBytes": 96993964
                    },
                    {
                        "names": [
                            "registry.k8s.io/kube-proxy@sha256:6aee00d0c7f4869144d1bdbbed7572cd55fd1a4d58fef5a21f53836054cb39b4",
                            "registry.k8s.io/kube-proxy:v1.32.0"
                        ],
                        "sizeBytes": 94014897
                    },
                    {
                        "names": [
                            "registry.k8s.io/kube-controller-manager@sha256:c8faedf1a5f3981ffade770c696b676d30613681a95be3287c1f7eec50e49b6d",
                            "registry.k8s.io/kube-controller-manager:v1.32.0"
                        ],
                        "sizeBytes": 89732135
                    },
                    {
                        "names": [
                            "registry.k8s.io/kube-scheduler@sha256:84c998f7610b356a5eed24f801c01b273cf3e83f081f25c9b16aa8136c2cafb1",
                            "registry.k8s.io/kube-scheduler:v1.32.0"
                        ],
                        "sizeBytes": 69592103
                    },
                    {
                        "names": [
                            "registry.k8s.io/metrics-server/metrics-server@sha256:ffcb2bf004d6aa0a17d90e0247cf94f2865c8901dcab4427034c341951c239f9"
                        ],
                        "sizeBytes": 67074530
                    },
                    {
                        "names": [
                            "registry.k8s.io/ingress-nginx/kube-webhook-certgen@sha256:a9f03b34a3cbfbb26d103a14046ab2c5130a80c3d69d526ff8063d2b37b9fd3f"
                        ],
                        "sizeBytes": 63782524
                    },
                    {
                        "names": [
                            "registry.k8s.io/coredns/coredns@sha256:9caabbf6238b189a65d0d6e6ac138de60d6a1c419e5a341fbbb7c78382559c6e",
                            "registry.k8s.io/coredns/coredns:v1.11.3"
                        ],
                        "sizeBytes": 61818567
                    },
                    {
                        "names": [
                            "gcr.io/k8s-minikube/kube-registry-proxy@sha256:60ab3508367ad093b4b891231572577371a29f838d61e64d7f7d093d961c862c"
                        ],
                        "sizeBytes": 51273174
                    },
                    {
                        "names": [
                            "kubernetesui/metrics-scraper@sha256:76049887f07a0476dc93efc2d3569b9529bf982b22d29f356092ce206e98765c"
                        ],
                        "sizeBytes": 43815949
                    },
                    {
                        "names": [
                            "gcr.io/k8s-minikube/storage-provisioner@sha256:18eb69d1418e854ad5a19e399310e52808a8321e4c441c1dddad8977a0d7a944",
                            "gcr.io/k8s-minikube/storage-provisioner:v5"
                        ],
                        "sizeBytes": 31465472
                    },
                    {
                        "names": [
                            "registry@sha256:543dade69668e02e5768d7ea2b0aa4fae6aa7384c9a5a8dbecc2be5136079ddb"
                        ],
                        "sizeBytes": 25429395
                    },
                    {
                        "names": [
                            "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
                            "registry.k8s.io/pause:3.10"
                        ],
                        "sizeBytes": 735760
                    }
                ]
            }
        }
    ]
}
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "42138"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-668d6bf9bc-fjbsf.1841af4497e78b15",
                "namespace": "kube-system",
                "uid": "32c5f34e-754e-4102-93b2-db70f6b38a5c",
                "resourceVersion": "41771",
                "creationTimestamp": "2025-05-21T23:40:47Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-668d6bf9bc-fjbsf",
                "uid": "736d668d-3ad2-4430-902c-c91c233240bd",
                "apiVersion": "v1",
                "resourceVersion": "28974"
            },
            "reason": "FailedMount",
            "message": "MountVolume.SetUp failed for volume \"config-volume\" : failed to sync configmap cache: timed out waiting for the condition",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:39Z",
            "lastTimestamp": "2025-05-21T23:40:39Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "coredns-668d6bf9bc-fjbsf.1841af44be29f7ba",
                "namespace": "kube-system",
                "uid": "908bc0ee-603f-4eab-a4ca-7689e0d8d248",
                "resourceVersion": "41778",
                "creationTimestamp": "2025-05-21T23:40:47Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-668d6bf9bc-fjbsf",
                "uid": "736d668d-3ad2-4430-902c-c91c233240bd",
                "apiVersion": "v1",
                "resourceVersion": "28974"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:40Z",
            "lastTimestamp": "2025-05-21T23:40:40Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "coredns-668d6bf9bc-fjbsf.1841af4804661bf0",
                "namespace": "kube-system",
                "uid": "035e8598-7484-40fa-9b27-6a356a060fd0",
                "resourceVersion": "41828",
                "creationTimestamp": "2025-05-21T23:40:54Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-668d6bf9bc-fjbsf",
                "uid": "736d668d-3ad2-4430-902c-c91c233240bd",
                "apiVersion": "v1",
                "resourceVersion": "28974",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/coredns/coredns:v1.11.3\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:54Z",
            "lastTimestamp": "2025-05-21T23:40:54Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "coredns-668d6bf9bc-fjbsf.1841af480edf6022",
                "namespace": "kube-system",
                "uid": "baf4c128-427c-47c8-9520-52b5a07d3e7d",
                "resourceVersion": "41831",
                "creationTimestamp": "2025-05-21T23:40:54Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-668d6bf9bc-fjbsf",
                "uid": "736d668d-3ad2-4430-902c-c91c233240bd",
                "apiVersion": "v1",
                "resourceVersion": "28974",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Created",
            "message": "Created container: coredns",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:54Z",
            "lastTimestamp": "2025-05-21T23:40:54Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "coredns-668d6bf9bc-fjbsf.1841af4887532f10",
                "namespace": "kube-system",
                "uid": "8830305d-5c19-4d23-afd4-08c16a78a236",
                "resourceVersion": "41843",
                "creationTimestamp": "2025-05-21T23:40:56Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-668d6bf9bc-fjbsf",
                "uid": "736d668d-3ad2-4430-902c-c91c233240bd",
                "apiVersion": "v1",
                "resourceVersion": "28974",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Started",
            "message": "Started container coredns",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:56Z",
            "lastTimestamp": "2025-05-21T23:40:56Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "coredns-668d6bf9bc-fjbsf.1841af49c80fd559",
                "namespace": "kube-system",
                "uid": "e4576a29-201e-42f0-b65e-6296c6b25a0b",
                "resourceVersion": "41907",
                "creationTimestamp": "2025-05-21T23:41:01Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-668d6bf9bc-fjbsf",
                "uid": "736d668d-3ad2-4430-902c-c91c233240bd",
                "apiVersion": "v1",
                "resourceVersion": "28974",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Unhealthy",
            "message": "Readiness probe failed: HTTP probe failed with statuscode: 503",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:41:01Z",
            "lastTimestamp": "2025-05-21T23:41:24Z",
            "count": 5,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "etcd-minikube.1841af412900c4c3",
                "namespace": "kube-system",
                "uid": "69d7b71a-38b6-489f-8848-d90674188e9d",
                "resourceVersion": "41750",
                "creationTimestamp": "2025-05-21T23:40:46Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "etcd-minikube",
                "uid": "2b4b75c2a289008e0b381891e9683040",
                "apiVersion": "v1"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:24Z",
            "lastTimestamp": "2025-05-21T23:40:24Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "etcd-minikube.1841af41f08a397e",
                "namespace": "kube-system",
                "uid": "5fd6da07-77ce-47ca-a170-38c6f1a2987e",
                "resourceVersion": "41754",
                "creationTimestamp": "2025-05-21T23:40:46Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "etcd-minikube",
                "uid": "2b4b75c2a289008e0b381891e9683040",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{etcd}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/etcd:3.5.16-0\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:28Z",
            "lastTimestamp": "2025-05-21T23:40:28Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "etcd-minikube.1841af41fd6ba9a0",
                "namespace": "kube-system",
                "uid": "a0aafc2b-99d2-40b3-bcde-4bd9a155d182",
                "resourceVersion": "41756",
                "creationTimestamp": "2025-05-21T23:40:46Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "etcd-minikube",
                "uid": "2b4b75c2a289008e0b381891e9683040",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{etcd}"
            },
            "reason": "Created",
            "message": "Created container: etcd",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:28Z",
            "lastTimestamp": "2025-05-21T23:40:28Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "etcd-minikube.1841af422180a025",
                "namespace": "kube-system",
                "uid": "3ac05110-31ac-4436-8e48-47fecf16f5db",
                "resourceVersion": "41760",
                "creationTimestamp": "2025-05-21T23:40:46Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "etcd-minikube",
                "uid": "2b4b75c2a289008e0b381891e9683040",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{etcd}"
            },
            "reason": "Started",
            "message": "Started container etcd",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:28Z",
            "lastTimestamp": "2025-05-21T23:40:28Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "k8s.io-minikube-hostpath.1841af566d67a491",
                "namespace": "kube-system",
                "uid": "67eaf101-1fee-4dba-af75-488a1b0f4b29",
                "resourceVersion": "41976",
                "creationTimestamp": "2025-05-21T23:41:56Z"
            },
            "involvedObject": {
                "kind": "Endpoints",
                "namespace": "kube-system",
                "name": "k8s.io-minikube-hostpath",
                "uid": "cdc895f7-fd15-471d-a95a-e9d716349567",
                "apiVersion": "v1",
                "resourceVersion": "41975"
            },
            "reason": "LeaderElection",
            "message": "minikube_2b4be814-5ab0-45d6-915f-efd3d63f6baa became leader",
            "source": {
                "component": "k8s.io/minikube-hostpath_minikube_2b4be814-5ab0-45d6-915f-efd3d63f6baa"
            },
            "firstTimestamp": "2025-05-21T23:41:56Z",
            "lastTimestamp": "2025-05-21T23:41:56Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-apiserver-minikube.1841af4123e9814f",
                "namespace": "kube-system",
                "uid": "4e179544-f530-446f-aa58-efb711d4514c",
                "resourceVersion": "41748",
                "creationTimestamp": "2025-05-21T23:40:46Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-apiserver-minikube",
                "uid": "d72d0a4cf4be077c9919d46b7358a5e8",
                "apiVersion": "v1"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:24Z",
            "lastTimestamp": "2025-05-21T23:40:24Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-apiserver-minikube.1841af41f42f3feb",
                "namespace": "kube-system",
                "uid": "77290fcf-3076-4f03-b8fb-bb2eb5144339",
                "resourceVersion": "41755",
                "creationTimestamp": "2025-05-21T23:40:46Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-apiserver-minikube",
                "uid": "d72d0a4cf4be077c9919d46b7358a5e8",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-apiserver}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/kube-apiserver:v1.32.0\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:28Z",
            "lastTimestamp": "2025-05-21T23:40:28Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-apiserver-minikube.1841af41ffba18f4",
                "namespace": "kube-system",
                "uid": "3100b0fb-994f-4ea7-92cc-e9c1f5753c84",
                "resourceVersion": "41757",
                "creationTimestamp": "2025-05-21T23:40:46Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-apiserver-minikube",
                "uid": "d72d0a4cf4be077c9919d46b7358a5e8",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-apiserver}"
            },
            "reason": "Created",
            "message": "Created container: kube-apiserver",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:28Z",
            "lastTimestamp": "2025-05-21T23:40:28Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-apiserver-minikube.1841af423e9e705b",
                "namespace": "kube-system",
                "uid": "a2974601-5759-418a-82c8-11a9052a106a",
                "resourceVersion": "41763",
                "creationTimestamp": "2025-05-21T23:40:47Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-apiserver-minikube",
                "uid": "d72d0a4cf4be077c9919d46b7358a5e8",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-apiserver}"
            },
            "reason": "Started",
            "message": "Started container kube-apiserver",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:29Z",
            "lastTimestamp": "2025-05-21T23:40:29Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-apiserver-minikube.1841af446ae8460b",
                "namespace": "kube-system",
                "uid": "fed7510e-a71b-4e1f-9b34-a6e207e7220c",
                "resourceVersion": "41766",
                "creationTimestamp": "2025-05-21T23:40:47Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-apiserver-minikube",
                "uid": "d72d0a4cf4be077c9919d46b7358a5e8",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-apiserver}"
            },
            "reason": "Unhealthy",
            "message": "Startup probe failed: HTTP probe failed with statuscode: 500",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:38Z",
            "lastTimestamp": "2025-05-21T23:40:38Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-controller-manager-minikube.1841af415b7d77d2",
                "namespace": "kube-system",
                "uid": "44b2d5bb-d200-4a8c-a0b4-239531c228d1",
                "resourceVersion": "41753",
                "creationTimestamp": "2025-05-21T23:40:46Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-controller-manager-minikube",
                "uid": "843c74f7b3bc7d7040a05c31708a6a30",
                "apiVersion": "v1"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:25Z",
            "lastTimestamp": "2025-05-21T23:40:25Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-controller-manager-minikube.1841af421161ff63",
                "namespace": "kube-system",
                "uid": "28ddb638-b84f-43f1-af6d-d2ad89b504c2",
                "resourceVersion": "41759",
                "creationTimestamp": "2025-05-21T23:40:46Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-controller-manager-minikube",
                "uid": "843c74f7b3bc7d7040a05c31708a6a30",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-controller-manager}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/kube-controller-manager:v1.32.0\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:28Z",
            "lastTimestamp": "2025-05-21T23:40:28Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-controller-manager-minikube.1841af422a812ad7",
                "namespace": "kube-system",
                "uid": "63c2c6b4-15b1-4f53-b866-aaa200174dd1",
                "resourceVersion": "41762",
                "creationTimestamp": "2025-05-21T23:40:47Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-controller-manager-minikube",
                "uid": "843c74f7b3bc7d7040a05c31708a6a30",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-controller-manager}"
            },
            "reason": "Created",
            "message": "Created container: kube-controller-manager",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:29Z",
            "lastTimestamp": "2025-05-21T23:40:29Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-controller-manager-minikube.1841af4277469128",
                "namespace": "kube-system",
                "uid": "26d6e289-aad3-402f-b561-2e15be60f8ce",
                "resourceVersion": "41765",
                "creationTimestamp": "2025-05-21T23:40:47Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-controller-manager-minikube",
                "uid": "843c74f7b3bc7d7040a05c31708a6a30",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-controller-manager}"
            },
            "reason": "Started",
            "message": "Started container kube-controller-manager",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:30Z",
            "lastTimestamp": "2025-05-21T23:40:30Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-ingress-dns-minikube.1841af449145b00f",
                "namespace": "kube-system",
                "uid": "5bb79b86-f5eb-4eae-ba07-73436f2d0df0",
                "resourceVersion": "41769",
                "creationTimestamp": "2025-05-21T23:40:47Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-ingress-dns-minikube",
                "uid": "b6d219d7-96c3-48ef-b3f8-4101ad2ab85e",
                "apiVersion": "v1",
                "resourceVersion": "28831"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:39Z",
            "lastTimestamp": "2025-05-21T23:40:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-ingress-dns-minikube.1841af47ad131ef6",
                "namespace": "kube-system",
                "uid": "fc4b24f8-f58e-48bf-9be0-29deb3acd062",
                "resourceVersion": "41822",
                "creationTimestamp": "2025-05-21T23:40:52Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-ingress-dns-minikube",
                "uid": "b6d219d7-96c3-48ef-b3f8-4101ad2ab85e",
                "apiVersion": "v1",
                "resourceVersion": "28831",
                "fieldPath": "spec.containers{minikube-ingress-dns}"
            },
            "reason": "Pulled",
            "message": "Container image \"gcr.io/k8s-minikube/minikube-ingress-dns:0.0.3@sha256:4211a1de532376c881851542238121b26792225faa36a7b02dccad88fd05797c\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:52Z",
            "lastTimestamp": "2025-05-21T23:40:52Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-ingress-dns-minikube.1841af47e59658e5",
                "namespace": "kube-system",
                "uid": "5e3597f5-0fb5-411e-9a5c-7974418d1fba",
                "resourceVersion": "41825",
                "creationTimestamp": "2025-05-21T23:40:53Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-ingress-dns-minikube",
                "uid": "b6d219d7-96c3-48ef-b3f8-4101ad2ab85e",
                "apiVersion": "v1",
                "resourceVersion": "28831",
                "fieldPath": "spec.containers{minikube-ingress-dns}"
            },
            "reason": "Created",
            "message": "Created container: minikube-ingress-dns",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:53Z",
            "lastTimestamp": "2025-05-21T23:40:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-ingress-dns-minikube.1841af4895c99470",
                "namespace": "kube-system",
                "uid": "72b7e18d-3f82-4f34-bb26-ffa39bb56708",
                "resourceVersion": "41844",
                "creationTimestamp": "2025-05-21T23:40:56Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-ingress-dns-minikube",
                "uid": "b6d219d7-96c3-48ef-b3f8-4101ad2ab85e",
                "apiVersion": "v1",
                "resourceVersion": "28831",
                "fieldPath": "spec.containers{minikube-ingress-dns}"
            },
            "reason": "Started",
            "message": "Started container minikube-ingress-dns",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:56Z",
            "lastTimestamp": "2025-05-21T23:40:56Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-proxy-sx592.1841af44997190b2",
                "namespace": "kube-system",
                "uid": "b516aa76-6079-4067-b4a5-462532d2deb1",
                "resourceVersion": "41772",
                "creationTimestamp": "2025-05-21T23:40:47Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-sx592",
                "uid": "dcf4827f-d794-4452-a4ca-f14f9739d92a",
                "apiVersion": "v1",
                "resourceVersion": "28830"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:39Z",
            "lastTimestamp": "2025-05-21T23:40:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-proxy-sx592.1841af47a8404207",
                "namespace": "kube-system",
                "uid": "cc0f0106-c12a-45aa-8d3d-e9a16d8ba0b0",
                "resourceVersion": "41821",
                "creationTimestamp": "2025-05-21T23:40:52Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-sx592",
                "uid": "dcf4827f-d794-4452-a4ca-f14f9739d92a",
                "apiVersion": "v1",
                "resourceVersion": "28830",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/kube-proxy:v1.32.0\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:52Z",
            "lastTimestamp": "2025-05-21T23:40:52Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-proxy-sx592.1841af47dd1cc60f",
                "namespace": "kube-system",
                "uid": "758e3836-ea7f-4fbf-aa04-2e554b572955",
                "resourceVersion": "41823",
                "creationTimestamp": "2025-05-21T23:40:53Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-sx592",
                "uid": "dcf4827f-d794-4452-a4ca-f14f9739d92a",
                "apiVersion": "v1",
                "resourceVersion": "28830",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Created",
            "message": "Created container: kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:53Z",
            "lastTimestamp": "2025-05-21T23:40:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-proxy-sx592.1841af491b3ce321",
                "namespace": "kube-system",
                "uid": "58368033-d13a-4886-be31-8ac2834aca93",
                "resourceVersion": "41850",
                "creationTimestamp": "2025-05-21T23:40:58Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-sx592",
                "uid": "dcf4827f-d794-4452-a4ca-f14f9739d92a",
                "apiVersion": "v1",
                "resourceVersion": "28830",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Started",
            "message": "Started container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:58Z",
            "lastTimestamp": "2025-05-21T23:40:58Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-scheduler-minikube.1841af414991a192",
                "namespace": "kube-system",
                "uid": "5470dcdd-9ba0-4523-91c1-9d6a3957cf0a",
                "resourceVersion": "41751",
                "creationTimestamp": "2025-05-21T23:40:46Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-scheduler-minikube",
                "uid": "d14ce008bee3a1f3bd7cf547688f9dfe",
                "apiVersion": "v1"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:25Z",
            "lastTimestamp": "2025-05-21T23:40:25Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-scheduler-minikube.1841af420907cec6",
                "namespace": "kube-system",
                "uid": "162f3f4b-a988-4610-a020-07a705070444",
                "resourceVersion": "41758",
                "creationTimestamp": "2025-05-21T23:40:46Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-scheduler-minikube",
                "uid": "d14ce008bee3a1f3bd7cf547688f9dfe",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-scheduler}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/kube-scheduler:v1.32.0\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:28Z",
            "lastTimestamp": "2025-05-21T23:40:28Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-scheduler-minikube.1841af422a7f3994",
                "namespace": "kube-system",
                "uid": "38ac5318-ead9-4cac-a986-fc322fc83a0b",
                "resourceVersion": "41761",
                "creationTimestamp": "2025-05-21T23:40:46Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-scheduler-minikube",
                "uid": "d14ce008bee3a1f3bd7cf547688f9dfe",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-scheduler}"
            },
            "reason": "Created",
            "message": "Created container: kube-scheduler",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:29Z",
            "lastTimestamp": "2025-05-21T23:40:29Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-scheduler-minikube.1841af4251aedd21",
                "namespace": "kube-system",
                "uid": "851756d0-bb4f-4519-a75b-1113fb49a291",
                "resourceVersion": "41764",
                "creationTimestamp": "2025-05-21T23:40:47Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-scheduler-minikube",
                "uid": "d14ce008bee3a1f3bd7cf547688f9dfe",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-scheduler}"
            },
            "reason": "Started",
            "message": "Started container kube-scheduler",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:29Z",
            "lastTimestamp": "2025-05-21T23:40:29Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "metrics-server-7fbb699795-6h8fd.1841af4489419290",
                "namespace": "kube-system",
                "uid": "81d60692-caf3-4280-b871-6ae74e8c04d0",
                "resourceVersion": "41767",
                "creationTimestamp": "2025-05-21T23:40:47Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7fbb699795-6h8fd",
                "uid": "5ccf5803-9680-47b9-94c4-a92db9f0a36d",
                "apiVersion": "v1",
                "resourceVersion": "28923"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:39Z",
            "lastTimestamp": "2025-05-21T23:40:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "metrics-server-7fbb699795-6h8fd.1841af478bd9d15c",
                "namespace": "kube-system",
                "uid": "602c4c42-9229-449b-a9ea-a644256bd04a",
                "resourceVersion": "41911",
                "creationTimestamp": "2025-05-21T23:40:52Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7fbb699795-6h8fd",
                "uid": "5ccf5803-9680-47b9-94c4-a92db9f0a36d",
                "apiVersion": "v1",
                "resourceVersion": "28923",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/metrics-server/metrics-server:v0.7.2@sha256:ffcb2bf004d6aa0a17d90e0247cf94f2865c8901dcab4427034c341951c239f9\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:52Z",
            "lastTimestamp": "2025-05-21T23:41:30Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "metrics-server-7fbb699795-6h8fd.1841af47a6144b20",
                "namespace": "kube-system",
                "uid": "8d9b36fb-4405-4d24-843d-d57b5dd43738",
                "resourceVersion": "41912",
                "creationTimestamp": "2025-05-21T23:40:52Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7fbb699795-6h8fd",
                "uid": "5ccf5803-9680-47b9-94c4-a92db9f0a36d",
                "apiVersion": "v1",
                "resourceVersion": "28923",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Created",
            "message": "Created container: metrics-server",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:52Z",
            "lastTimestamp": "2025-05-21T23:41:30Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "metrics-server-7fbb699795-6h8fd.1841af481582dad0",
                "namespace": "kube-system",
                "uid": "1bd15548-0bd6-41eb-a592-3fe1c43332c8",
                "resourceVersion": "41915",
                "creationTimestamp": "2025-05-21T23:40:54Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7fbb699795-6h8fd",
                "uid": "5ccf5803-9680-47b9-94c4-a92db9f0a36d",
                "apiVersion": "v1",
                "resourceVersion": "28923",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Started",
            "message": "Started container metrics-server",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:54Z",
            "lastTimestamp": "2025-05-21T23:41:31Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "metrics-server-7fbb699795-6h8fd.1841af486f705d64",
                "namespace": "kube-system",
                "uid": "cc6a1134-572f-4202-966c-f396859be304",
                "resourceVersion": "41905",
                "creationTimestamp": "2025-05-21T23:40:56Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7fbb699795-6h8fd",
                "uid": "5ccf5803-9680-47b9-94c4-a92db9f0a36d",
                "apiVersion": "v1",
                "resourceVersion": "28923",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Unhealthy",
            "message": "Readiness probe failed: Get \"https://10.244.0.107:4443/readyz\": net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:56Z",
            "lastTimestamp": "2025-05-21T23:41:22Z",
            "count": 4,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "metrics-server-7fbb699795-6h8fd.1841af496d448fdf",
                "namespace": "kube-system",
                "uid": "516ff639-76ae-4f55-9423-8259a1420cdc",
                "resourceVersion": "41894",
                "creationTimestamp": "2025-05-21T23:41:00Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7fbb699795-6h8fd",
                "uid": "5ccf5803-9680-47b9-94c4-a92db9f0a36d",
                "apiVersion": "v1",
                "resourceVersion": "28923",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Unhealthy",
            "message": "Liveness probe failed: Get \"https://10.244.0.107:4443/livez\": context deadline exceeded",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:41:00Z",
            "lastTimestamp": "2025-05-21T23:41:11Z",
            "count": 2,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "metrics-server-7fbb699795-6h8fd.1841af4aa43c1f8d",
                "namespace": "kube-system",
                "uid": "8f1d9b94-1ca0-4eed-9974-e5f2768381f6",
                "resourceVersion": "41890",
                "creationTimestamp": "2025-05-21T23:41:05Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7fbb699795-6h8fd",
                "uid": "5ccf5803-9680-47b9-94c4-a92db9f0a36d",
                "apiVersion": "v1",
                "resourceVersion": "28923",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Unhealthy",
            "message": "Readiness probe failed: Get \"https://10.244.0.107:4443/readyz\": context deadline exceeded",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:41:05Z",
            "lastTimestamp": "2025-05-21T23:41:05Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "metrics-server-7fbb699795-6h8fd.1841af4e6661167d",
                "namespace": "kube-system",
                "uid": "ebac86ff-a37f-46ca-8f25-045a875fda38",
                "resourceVersion": "41902",
                "creationTimestamp": "2025-05-21T23:41:21Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7fbb699795-6h8fd",
                "uid": "5ccf5803-9680-47b9-94c4-a92db9f0a36d",
                "apiVersion": "v1",
                "resourceVersion": "28923",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Unhealthy",
            "message": "Liveness probe failed: Get \"https://10.244.0.107:4443/livez\": net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:41:21Z",
            "lastTimestamp": "2025-05-21T23:41:21Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "metrics-server-7fbb699795-6h8fd.1841af4e667722b6",
                "namespace": "kube-system",
                "uid": "396dfe07-1dce-4281-a8f3-3a1372692488",
                "resourceVersion": "41903",
                "creationTimestamp": "2025-05-21T23:41:21Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7fbb699795-6h8fd",
                "uid": "5ccf5803-9680-47b9-94c4-a92db9f0a36d",
                "apiVersion": "v1",
                "resourceVersion": "28923",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Killing",
            "message": "Container metrics-server failed liveness probe, will be restarted",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:41:21Z",
            "lastTimestamp": "2025-05-21T23:41:21Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "metrics-server-7fbb699795-6h8fd.1841af50f6757b91",
                "namespace": "kube-system",
                "uid": "d268d977-1459-4188-9e74-b05d7fe5504b",
                "resourceVersion": "41922",
                "creationTimestamp": "2025-05-21T23:41:32Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7fbb699795-6h8fd",
                "uid": "5ccf5803-9680-47b9-94c4-a92db9f0a36d",
                "apiVersion": "v1",
                "resourceVersion": "28923",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Unhealthy",
            "message": "Readiness probe failed: Get \"https://10.244.0.107:4443/readyz\": context deadline exceeded (Client.Timeout exceeded while awaiting headers)",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:41:32Z",
            "lastTimestamp": "2025-05-21T23:41:32Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "metrics-server-7fbb699795-6h8fd.1841af50f9b8cbaf",
                "namespace": "kube-system",
                "uid": "dda21a9b-ab5c-4fbe-a16b-4c7b69add6ce",
                "resourceVersion": "41923",
                "creationTimestamp": "2025-05-21T23:41:32Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7fbb699795-6h8fd",
                "uid": "5ccf5803-9680-47b9-94c4-a92db9f0a36d",
                "apiVersion": "v1",
                "resourceVersion": "28923",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Unhealthy",
            "message": "Readiness probe failed: HTTP probe failed with statuscode: 500",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:41:32Z",
            "lastTimestamp": "2025-05-21T23:41:32Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "registry-6c86875c6f-776j6.1841af449e55b4a9",
                "namespace": "kube-system",
                "uid": "a24d3821-dfca-419d-85ec-8aab72eb84ab",
                "resourceVersion": "41774",
                "creationTimestamp": "2025-05-21T23:40:47Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "registry-6c86875c6f-776j6",
                "uid": "46995aca-a1e8-46ac-b42a-155ecb08540c",
                "apiVersion": "v1",
                "resourceVersion": "28901"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:39Z",
            "lastTimestamp": "2025-05-21T23:40:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "registry-6c86875c6f-776j6.1841af47dd91ac0f",
                "namespace": "kube-system",
                "uid": "cb803717-02cc-42cf-947b-cea14c40bf3c",
                "resourceVersion": "41824",
                "creationTimestamp": "2025-05-21T23:40:53Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "registry-6c86875c6f-776j6",
                "uid": "46995aca-a1e8-46ac-b42a-155ecb08540c",
                "apiVersion": "v1",
                "resourceVersion": "28901",
                "fieldPath": "spec.containers{registry}"
            },
            "reason": "Pulled",
            "message": "Container image \"docker.io/registry:2.8.3@sha256:543dade69668e02e5768d7ea2b0aa4fae6aa7384c9a5a8dbecc2be5136079ddb\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:53Z",
            "lastTimestamp": "2025-05-21T23:40:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "registry-6c86875c6f-776j6.1841af47ede52a3f",
                "namespace": "kube-system",
                "uid": "e3500c35-89f2-4b58-b2fb-93a53773a616",
                "resourceVersion": "41827",
                "creationTimestamp": "2025-05-21T23:40:53Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "registry-6c86875c6f-776j6",
                "uid": "46995aca-a1e8-46ac-b42a-155ecb08540c",
                "apiVersion": "v1",
                "resourceVersion": "28901",
                "fieldPath": "spec.containers{registry}"
            },
            "reason": "Created",
            "message": "Created container: registry",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:53Z",
            "lastTimestamp": "2025-05-21T23:40:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "registry-6c86875c6f-776j6.1841af4872d6bbd8",
                "namespace": "kube-system",
                "uid": "d1a4e626-b4dd-4334-a3a0-fa8f7dbe25ee",
                "resourceVersion": "41841",
                "creationTimestamp": "2025-05-21T23:40:56Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "registry-6c86875c6f-776j6",
                "uid": "46995aca-a1e8-46ac-b42a-155ecb08540c",
                "apiVersion": "v1",
                "resourceVersion": "28901",
                "fieldPath": "spec.containers{registry}"
            },
            "reason": "Started",
            "message": "Started container registry",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:56Z",
            "lastTimestamp": "2025-05-21T23:40:56Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "registry-proxy-jxnpg.1841af44953f6b9d",
                "namespace": "kube-system",
                "uid": "b57b4337-31a9-49ce-97d5-eb2fa498298b",
                "resourceVersion": "41770",
                "creationTimestamp": "2025-05-21T23:40:47Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "registry-proxy-jxnpg",
                "uid": "58cf857b-4e58-4b51-bc3b-3d51849335d1",
                "apiVersion": "v1",
                "resourceVersion": "28890"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:39Z",
            "lastTimestamp": "2025-05-21T23:40:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "registry-proxy-jxnpg.1841af48cdb0ff8b",
                "namespace": "kube-system",
                "uid": "cb0cc42d-00da-4d21-b9a7-fb64d31b4199",
                "resourceVersion": "41847",
                "creationTimestamp": "2025-05-21T23:40:57Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "registry-proxy-jxnpg",
                "uid": "58cf857b-4e58-4b51-bc3b-3d51849335d1",
                "apiVersion": "v1",
                "resourceVersion": "28890",
                "fieldPath": "spec.containers{registry-proxy}"
            },
            "reason": "Pulled",
            "message": "Container image \"gcr.io/k8s-minikube/kube-registry-proxy:0.0.8@sha256:60ab3508367ad093b4b891231572577371a29f838d61e64d7f7d093d961c862c\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:57Z",
            "lastTimestamp": "2025-05-21T23:40:57Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "registry-proxy-jxnpg.1841af48f1bc6a89",
                "namespace": "kube-system",
                "uid": "caa84ca1-8b34-4c8d-ba42-a09bcc976c1d",
                "resourceVersion": "41849",
                "creationTimestamp": "2025-05-21T23:40:58Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "registry-proxy-jxnpg",
                "uid": "58cf857b-4e58-4b51-bc3b-3d51849335d1",
                "apiVersion": "v1",
                "resourceVersion": "28890",
                "fieldPath": "spec.containers{registry-proxy}"
            },
            "reason": "Created",
            "message": "Created container: registry-proxy",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:58Z",
            "lastTimestamp": "2025-05-21T23:40:58Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "registry-proxy-jxnpg.1841af4955402f28",
                "namespace": "kube-system",
                "uid": "5479a004-52c0-4c1a-becf-9deabc8cb6ba",
                "resourceVersion": "41854",
                "creationTimestamp": "2025-05-21T23:40:59Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "registry-proxy-jxnpg",
                "uid": "58cf857b-4e58-4b51-bc3b-3d51849335d1",
                "apiVersion": "v1",
                "resourceVersion": "28890",
                "fieldPath": "spec.containers{registry-proxy}"
            },
            "reason": "Started",
            "message": "Started container registry-proxy",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:59Z",
            "lastTimestamp": "2025-05-21T23:40:59Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "storage-provisioner.1841af44898ee4e7",
                "namespace": "kube-system",
                "uid": "0c7c964f-af15-44f9-8418-f8a78a48bc60",
                "resourceVersion": "41768",
                "creationTimestamp": "2025-05-21T23:40:47Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "storage-provisioner",
                "uid": "6b5e4be2-97fa-4052-b724-5208722c0fb4",
                "apiVersion": "v1",
                "resourceVersion": "28994"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:39Z",
            "lastTimestamp": "2025-05-21T23:40:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "storage-provisioner.1841af4627d2caaa",
                "namespace": "kube-system",
                "uid": "fd9b976f-864d-46be-939c-1542064deaa5",
                "resourceVersion": "41951",
                "creationTimestamp": "2025-05-21T23:40:48Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "storage-provisioner",
                "uid": "6b5e4be2-97fa-4052-b724-5208722c0fb4",
                "apiVersion": "v1",
                "resourceVersion": "28994",
                "fieldPath": "spec.containers{storage-provisioner}"
            },
            "reason": "Pulled",
            "message": "Container image \"gcr.io/k8s-minikube/storage-provisioner:v5\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:46Z",
            "lastTimestamp": "2025-05-21T23:41:38Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "storage-provisioner.1841af466d54e12a",
                "namespace": "kube-system",
                "uid": "858639ee-5e74-4ef3-a1c7-9138e1d76ea9",
                "resourceVersion": "41953",
                "creationTimestamp": "2025-05-21T23:40:48Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "storage-provisioner",
                "uid": "6b5e4be2-97fa-4052-b724-5208722c0fb4",
                "apiVersion": "v1",
                "resourceVersion": "28994",
                "fieldPath": "spec.containers{storage-provisioner}"
            },
            "reason": "Created",
            "message": "Created container: storage-provisioner",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:47Z",
            "lastTimestamp": "2025-05-21T23:41:38Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "storage-provisioner.1841af479ca48202",
                "namespace": "kube-system",
                "uid": "a343c046-2247-4d38-b0c7-55c284b24cef",
                "resourceVersion": "41954",
                "creationTimestamp": "2025-05-21T23:40:52Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "storage-provisioner",
                "uid": "6b5e4be2-97fa-4052-b724-5208722c0fb4",
                "apiVersion": "v1",
                "resourceVersion": "28994",
                "fieldPath": "spec.containers{storage-provisioner}"
            },
            "reason": "Started",
            "message": "Started container storage-provisioner",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:52Z",
            "lastTimestamp": "2025-05-21T23:41:38Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "storage-provisioner.1841af4f356c32e9",
                "namespace": "kube-system",
                "uid": "50b88888-7a06-4aba-90c6-117ab51bc4c6",
                "resourceVersion": "41908",
                "creationTimestamp": "2025-05-21T23:41:25Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "storage-provisioner",
                "uid": "6b5e4be2-97fa-4052-b724-5208722c0fb4",
                "apiVersion": "v1",
                "resourceVersion": "28994",
                "fieldPath": "spec.containers{storage-provisioner}"
            },
            "reason": "BackOff",
            "message": "Back-off restarting failed container storage-provisioner in pod storage-provisioner_kube-system(6b5e4be2-97fa-4052-b724-5208722c0fb4)",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:41:25Z",
            "lastTimestamp": "2025-05-21T23:41:25Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "42138"
    },
    "items": null
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "42138"
    },
    "items": [
        {
            "metadata": {
                "name": "kube-dns",
                "namespace": "kube-system",
                "uid": "97651258-3a04-45c9-afd0-c90db3330276",
                "resourceVersion": "278",
                "creationTimestamp": "2025-05-13T00:36:53Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS"
                },
                "annotations": {
                    "prometheus.io/port": "9153",
                    "prometheus.io/scrape": "true"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "dns",
                        "protocol": "UDP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "dns-tcp",
                        "protocol": "TCP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "metrics",
                        "protocol": "TCP",
                        "port": 9153,
                        "targetPort": 9153
                    }
                ],
                "selector": {
                    "k8s-app": "kube-dns"
                },
                "clusterIP": "10.96.0.10",
                "clusterIPs": [
                    "10.96.0.10"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "metrics-server",
                "namespace": "kube-system",
                "uid": "0f94a995-252f-411b-8a7c-0b34c43162f1",
                "resourceVersion": "485",
                "creationTimestamp": "2025-05-13T00:37:07Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "metrics-server",
                    "kubernetes.io/minikube-addons": "metrics-server",
                    "kubernetes.io/minikube-addons-endpoint": "metrics-server",
                    "kubernetes.io/name": "Metrics-server"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"metrics-server\",\"kubernetes.io/minikube-addons\":\"metrics-server\",\"kubernetes.io/minikube-addons-endpoint\":\"metrics-server\",\"kubernetes.io/name\":\"Metrics-server\"},\"name\":\"metrics-server\",\"namespace\":\"kube-system\"},\"spec\":{\"ports\":[{\"name\":\"https\",\"port\":443,\"protocol\":\"TCP\",\"targetPort\":\"https\"}],\"selector\":{\"k8s-app\":\"metrics-server\"}}}\n"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": "https"
                    }
                ],
                "selector": {
                    "k8s-app": "metrics-server"
                },
                "clusterIP": "10.102.117.190",
                "clusterIPs": [
                    "10.102.117.190"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "registry",
                "namespace": "kube-system",
                "uid": "d54156d5-4c2f-4fc8-a429-2fa1b3e6cbe5",
                "resourceVersion": "441",
                "creationTimestamp": "2025-05-13T00:37:05Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "kubernetes.io/minikube-addons": "registry"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"kubernetes.io/minikube-addons\":\"registry\"},\"name\":\"registry\",\"namespace\":\"kube-system\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":80,\"targetPort\":5000},{\"name\":\"https\",\"port\":443,\"targetPort\":443}],\"selector\":{\"actual-registry\":\"true\",\"kubernetes.io/minikube-addons\":\"registry\"},\"type\":\"ClusterIP\"}}\n"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "http",
                        "protocol": "TCP",
                        "port": 80,
                        "targetPort": 5000
                    },
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 443
                    }
                ],
                "selector": {
                    "actual-registry": "true",
                    "kubernetes.io/minikube-addons": "registry"
                },
                "clusterIP": "10.98.230.144",
                "clusterIPs": [
                    "10.98.230.144"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "42138"
    },
    "items": [
        {
            "metadata": {
                "name": "kube-proxy",
                "namespace": "kube-system",
                "uid": "06b1b0eb-2e82-461f-ad70-0dafe8ee0e50",
                "resourceVersion": "41857",
                "generation": 1,
                "creationTimestamp": "2025-05-13T00:36:53Z",
                "labels": {
                    "k8s-app": "kube-proxy"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-proxy"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-proxy"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "kube-proxy",
                                "configMap": {
                                    "name": "kube-proxy",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "lib-modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kube-proxy",
                                "image": "registry.k8s.io/kube-proxy:v1.32.0",
                                "command": [
                                    "/usr/local/bin/kube-proxy",
                                    "--config=/var/lib/kube-proxy/config.conf",
                                    "--hostname-override=$(NODE_NAME)"
                                ],
                                "env": [
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "kube-proxy",
                                        "mountPath": "/var/lib/kube-proxy"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "lib-modules",
                                        "readOnly": true,
                                        "mountPath": "/lib/modules"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "kube-proxy",
                        "serviceAccount": "kube-proxy",
                        "hostNetwork": true,
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 1,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 1,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1,
                "numberAvailable": 1
            }
        },
        {
            "metadata": {
                "name": "registry-proxy",
                "namespace": "kube-system",
                "uid": "9615ebc8-5f6e-49ae-b2a8-9b7de19a510e",
                "resourceVersion": "41870",
                "generation": 1,
                "creationTimestamp": "2025-05-13T00:37:05Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "kubernetes.io/minikube-addons": "registry"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"kubernetes.io/minikube-addons\":\"registry\"},\"name\":\"registry-proxy\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"kubernetes.io/minikube-addons\":\"registry\",\"registry-proxy\":\"true\"}},\"template\":{\"metadata\":{\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"kubernetes.io/minikube-addons\":\"registry\",\"registry-proxy\":\"true\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"REGISTRY_HOST\",\"value\":\"registry.kube-system.svc.cluster.local\"},{\"name\":\"REGISTRY_PORT\",\"value\":\"80\"}],\"image\":\"gcr.io/k8s-minikube/kube-registry-proxy:0.0.8@sha256:60ab3508367ad093b4b891231572577371a29f838d61e64d7f7d093d961c862c\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"registry-proxy\",\"ports\":[{\"containerPort\":80,\"hostPort\":5000,\"name\":\"registry\"}]}]}}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "kubernetes.io/minikube-addons": "registry",
                        "registry-proxy": "true"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "addonmanager.kubernetes.io/mode": "Reconcile",
                            "kubernetes.io/minikube-addons": "registry",
                            "registry-proxy": "true"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "registry-proxy",
                                "image": "gcr.io/k8s-minikube/kube-registry-proxy:0.0.8@sha256:60ab3508367ad093b4b891231572577371a29f838d61e64d7f7d093d961c862c",
                                "ports": [
                                    {
                                        "name": "registry",
                                        "hostPort": 5000,
                                        "containerPort": 80,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "REGISTRY_HOST",
                                        "value": "registry.kube-system.svc.cluster.local"
                                    },
                                    {
                                        "name": "REGISTRY_PORT",
                                        "value": "80"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 1,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 1,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1,
                "numberAvailable": 1
            }
        }
    ]
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "42138"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns",
                "namespace": "kube-system",
                "uid": "baaab3ea-52d3-480a-8eff-adc5d82c003b",
                "resourceVersion": "41944",
                "generation": 2,
                "creationTimestamp": "2025-05-13T00:36:53Z",
                "labels": {
                    "k8s-app": "kube-dns"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "registry.k8s.io/coredns/coredns:v1.11.3",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/control-plane",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 2,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2025-05-13T00:37:05Z",
                        "lastTransitionTime": "2025-05-13T00:37:05Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2025-05-13T00:37:05Z",
                        "lastTransitionTime": "2025-05-13T00:36:58Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"coredns-668d6bf9bc\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "metrics-server",
                "namespace": "kube-system",
                "uid": "f4ae70aa-e5e3-4c46-a506-1927e0bfd6d0",
                "resourceVersion": "41929",
                "generation": 1,
                "creationTimestamp": "2025-05-13T00:37:06Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "metrics-server",
                    "kubernetes.io/minikube-addons": "metrics-server"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"metrics-server\",\"kubernetes.io/minikube-addons\":\"metrics-server\"},\"name\":\"metrics-server\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"metrics-server\"}},\"strategy\":{\"rollingUpdate\":{\"maxUnavailable\":0}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"metrics-server\"},\"name\":\"metrics-server\"},\"spec\":{\"containers\":[{\"args\":[\"--cert-dir=/tmp\",\"--secure-port=4443\",\"--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname\",\"--kubelet-use-node-status-port\",\"--metric-resolution=60s\",\"--kubelet-insecure-tls\"],\"image\":\"registry.k8s.io/metrics-server/metrics-server:v0.7.2@sha256:ffcb2bf004d6aa0a17d90e0247cf94f2865c8901dcab4427034c341951c239f9\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/livez\",\"port\":\"https\",\"scheme\":\"HTTPS\"},\"periodSeconds\":10},\"name\":\"metrics-server\",\"ports\":[{\"containerPort\":4443,\"name\":\"https\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/readyz\",\"port\":\"https\",\"scheme\":\"HTTPS\"},\"periodSeconds\":10},\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"200Mi\"}},\"securityContext\":{\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"runAsUser\":1000},\"volumeMounts\":[{\"mountPath\":\"/tmp\",\"name\":\"tmp-dir\"}]}],\"priorityClassName\":\"system-cluster-critical\",\"serviceAccountName\":\"metrics-server\",\"volumes\":[{\"emptyDir\":{},\"name\":\"tmp-dir\"}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "metrics-server"
                    }
                },
                "template": {
                    "metadata": {
                        "name": "metrics-server",
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "metrics-server"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "tmp-dir",
                                "emptyDir": {}
                            }
                        ],
                        "containers": [
                            {
                                "name": "metrics-server",
                                "image": "registry.k8s.io/metrics-server/metrics-server:v0.7.2@sha256:ffcb2bf004d6aa0a17d90e0247cf94f2865c8901dcab4427034c341951c239f9",
                                "args": [
                                    "--cert-dir=/tmp",
                                    "--secure-port=4443",
                                    "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                                    "--kubelet-use-node-status-port",
                                    "--metric-resolution=60s",
                                    "--kubelet-insecure-tls"
                                ],
                                "ports": [
                                    {
                                        "name": "https",
                                        "containerPort": 4443,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "200Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "tmp-dir",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/livez",
                                        "port": "https",
                                        "scheme": "HTTPS"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": "https",
                                        "scheme": "HTTPS"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "runAsUser": 1000,
                                    "runAsNonRoot": true,
                                    "readOnlyRootFilesystem": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "metrics-server",
                        "serviceAccount": "metrics-server",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "priorityClassName": "system-cluster-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 0,
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2025-05-13T00:42:20Z",
                        "lastTransitionTime": "2025-05-13T00:37:06Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"metrics-server-7fbb699795\" has successfully progressed."
                    },
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2025-05-21T23:41:32Z",
                        "lastTransitionTime": "2025-05-21T23:41:32Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "registry",
                "namespace": "kube-system",
                "uid": "ddd389f0-2b17-4373-ad1c-eeac8223a771",
                "resourceVersion": "41863",
                "generation": 1,
                "creationTimestamp": "2025-05-13T00:37:05Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "kubernetes.io/minikube-addons": "registry"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"kubernetes.io/minikube-addons\":\"registry\"},\"name\":\"registry\",\"namespace\":\"kube-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"kubernetes.io/minikube-addons\":\"registry\"}},\"template\":{\"metadata\":{\"labels\":{\"actual-registry\":\"true\",\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"kubernetes.io/minikube-addons\":\"registry\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"REGISTRY_STORAGE_DELETE_ENABLED\",\"value\":\"true\"}],\"image\":\"docker.io/registry:2.8.3@sha256:543dade69668e02e5768d7ea2b0aa4fae6aa7384c9a5a8dbecc2be5136079ddb\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"registry\",\"ports\":[{\"containerPort\":5000,\"protocol\":\"TCP\"}]}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "kubernetes.io/minikube-addons": "registry"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "actual-registry": "true",
                            "addonmanager.kubernetes.io/mode": "Reconcile",
                            "kubernetes.io/minikube-addons": "registry"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "registry",
                                "image": "docker.io/registry:2.8.3@sha256:543dade69668e02e5768d7ea2b0aa4fae6aa7384c9a5a8dbecc2be5136079ddb",
                                "ports": [
                                    {
                                        "containerPort": 5000,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "REGISTRY_STORAGE_DELETE_ENABLED",
                                        "value": "true"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2025-05-13T00:39:39Z",
                        "lastTransitionTime": "2025-05-13T00:37:05Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"registry-6c86875c6f\" has successfully progressed."
                    },
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2025-05-21T23:41:01Z",
                        "lastTransitionTime": "2025-05-21T23:41:01Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "42138"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-668d6bf9bc",
                "namespace": "kube-system",
                "uid": "de74c583-e092-4ad9-b848-edbbe120f10d",
                "resourceVersion": "41940",
                "generation": 2,
                "creationTimestamp": "2025-05-13T00:36:58Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "668d6bf9bc"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "coredns",
                        "uid": "baaab3ea-52d3-480a-8eff-adc5d82c003b",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "668d6bf9bc"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns",
                            "pod-template-hash": "668d6bf9bc"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "registry.k8s.io/coredns/coredns:v1.11.3",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/control-plane",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 2
            }
        },
        {
            "metadata": {
                "name": "metrics-server-7fbb699795",
                "namespace": "kube-system",
                "uid": "f808772b-c3da-4384-a7b2-8ee7e1814c16",
                "resourceVersion": "41925",
                "generation": 1,
                "creationTimestamp": "2025-05-13T00:37:06Z",
                "labels": {
                    "k8s-app": "metrics-server",
                    "pod-template-hash": "7fbb699795"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "metrics-server",
                        "uid": "f4ae70aa-e5e3-4c46-a506-1927e0bfd6d0",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "metrics-server",
                        "pod-template-hash": "7fbb699795"
                    }
                },
                "template": {
                    "metadata": {
                        "name": "metrics-server",
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "metrics-server",
                            "pod-template-hash": "7fbb699795"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "tmp-dir",
                                "emptyDir": {}
                            }
                        ],
                        "containers": [
                            {
                                "name": "metrics-server",
                                "image": "registry.k8s.io/metrics-server/metrics-server:v0.7.2@sha256:ffcb2bf004d6aa0a17d90e0247cf94f2865c8901dcab4427034c341951c239f9",
                                "args": [
                                    "--cert-dir=/tmp",
                                    "--secure-port=4443",
                                    "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                                    "--kubelet-use-node-status-port",
                                    "--metric-resolution=60s",
                                    "--kubelet-insecure-tls"
                                ],
                                "ports": [
                                    {
                                        "name": "https",
                                        "containerPort": 4443,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "200Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "tmp-dir",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/livez",
                                        "port": "https",
                                        "scheme": "HTTPS"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": "https",
                                        "scheme": "HTTPS"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "runAsUser": 1000,
                                    "runAsNonRoot": true,
                                    "readOnlyRootFilesystem": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "metrics-server",
                        "serviceAccount": "metrics-server",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "priorityClassName": "system-cluster-critical"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "registry-6c86875c6f",
                "namespace": "kube-system",
                "uid": "a388c1f9-1566-480f-93a5-dfd74f41e8ce",
                "resourceVersion": "41861",
                "generation": 1,
                "creationTimestamp": "2025-05-13T00:37:05Z",
                "labels": {
                    "actual-registry": "true",
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "kubernetes.io/minikube-addons": "registry",
                    "pod-template-hash": "6c86875c6f"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "registry",
                        "uid": "ddd389f0-2b17-4373-ad1c-eeac8223a771",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "kubernetes.io/minikube-addons": "registry",
                        "pod-template-hash": "6c86875c6f"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "actual-registry": "true",
                            "addonmanager.kubernetes.io/mode": "Reconcile",
                            "kubernetes.io/minikube-addons": "registry",
                            "pod-template-hash": "6c86875c6f"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "registry",
                                "image": "docker.io/registry:2.8.3@sha256:543dade69668e02e5768d7ea2b0aa4fae6aa7384c9a5a8dbecc2be5136079ddb",
                                "ports": [
                                    {
                                        "containerPort": 5000,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "REGISTRY_STORAGE_DELETE_ENABLED",
                                        "value": "true"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "42138"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-668d6bf9bc-fjbsf",
                "generateName": "coredns-668d6bf9bc-",
                "namespace": "kube-system",
                "uid": "736d668d-3ad2-4430-902c-c91c233240bd",
                "resourceVersion": "41939",
                "creationTimestamp": "2025-05-13T00:36:59Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "668d6bf9bc"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-668d6bf9bc",
                        "uid": "de74c583-e092-4ad9-b848-edbbe120f10d",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-m4xbr",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "registry.k8s.io/coredns/coredns:v1.11.3",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "kube-api-access-m4xbr",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "minikube",
                "securityContext": {},
                "affinity": {
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/control-plane",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:41:01Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-13T00:37:01Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:41:35Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:41:35Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-13T00:37:01Z"
                    }
                ],
                "hostIP": "192.168.49.2",
                "hostIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "podIP": "10.244.0.110",
                "podIPs": [
                    {
                        "ip": "10.244.0.110"
                    }
                ],
                "startTime": "2025-05-13T00:37:01Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2025-05-21T23:40:54Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 0,
                                "reason": "Completed",
                                "startedAt": "2025-05-21T18:21:16Z",
                                "finishedAt": "2025-05-21T22:05:58Z",
                                "containerID": "docker://22cca1dc213dd7edc9c68ea2f44ee4ab7b7c68e036aa0349428c87885a61f8ad"
                            }
                        },
                        "ready": true,
                        "restartCount": 4,
                        "image": "registry.k8s.io/coredns/coredns:v1.11.3",
                        "imageID": "docker-pullable://registry.k8s.io/coredns/coredns@sha256:9caabbf6238b189a65d0d6e6ac138de60d6a1c419e5a341fbbb7c78382559c6e",
                        "containerID": "docker://a4f836e480922abffadaa710e3b1358d928c55e759cdb8e74acef04fa78a847c",
                        "started": true,
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "mountPath": "/etc/coredns",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "name": "kube-api-access-m4xbr",
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "etcd-minikube",
                "namespace": "kube-system",
                "uid": "786ce4c6-88c1-425a-9ad5-792170d2a9ac",
                "resourceVersion": "41746",
                "creationTimestamp": "2025-05-13T00:36:54Z",
                "labels": {
                    "component": "etcd",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubeadm.kubernetes.io/etcd.advertise-client-urls": "https://192.168.49.2:2379",
                    "kubernetes.io/config.hash": "2b4b75c2a289008e0b381891e9683040",
                    "kubernetes.io/config.mirror": "2b4b75c2a289008e0b381891e9683040",
                    "kubernetes.io/config.seen": "2025-05-13T00:36:53.884687054Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "minikube",
                        "uid": "2303f334-d287-4949-981f-a70c2fc35815",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "etcd-certs",
                        "hostPath": {
                            "path": "/var/lib/minikube/certs/etcd",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etcd-data",
                        "hostPath": {
                            "path": "/var/lib/minikube/etcd",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "etcd",
                        "image": "registry.k8s.io/etcd:3.5.16-0",
                        "command": [
                            "etcd",
                            "--advertise-client-urls=https://192.168.49.2:2379",
                            "--cert-file=/var/lib/minikube/certs/etcd/server.crt",
                            "--client-cert-auth=true",
                            "--data-dir=/var/lib/minikube/etcd",
                            "--experimental-initial-corrupt-check=true",
                            "--experimental-watch-progress-notify-interval=5s",
                            "--initial-advertise-peer-urls=https://192.168.49.2:2380",
                            "--initial-cluster=minikube=https://192.168.49.2:2380",
                            "--key-file=/var/lib/minikube/certs/etcd/server.key",
                            "--listen-client-urls=https://127.0.0.1:2379,https://192.168.49.2:2379",
                            "--listen-metrics-urls=http://127.0.0.1:2381",
                            "--listen-peer-urls=https://192.168.49.2:2380",
                            "--name=minikube",
                            "--peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt",
                            "--peer-client-cert-auth=true",
                            "--peer-key-file=/var/lib/minikube/certs/etcd/peer.key",
                            "--peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt",
                            "--proxy-refresh-interval=70000",
                            "--snapshot-count=10000",
                            "--trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m",
                                "memory": "100Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "etcd-data",
                                "mountPath": "/var/lib/minikube/etcd"
                            },
                            {
                                "name": "etcd-certs",
                                "mountPath": "/var/lib/minikube/certs/etcd"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": 2381,
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/readyz",
                                "port": 2381,
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 15,
                            "periodSeconds": 1,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/readyz",
                                "port": 2381,
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "minikube",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:40:29Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:40:24Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:40:39Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:40:39Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:40:24Z"
                    }
                ],
                "hostIP": "192.168.49.2",
                "hostIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "podIP": "192.168.49.2",
                "podIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "startTime": "2025-05-21T23:40:24Z",
                "containerStatuses": [
                    {
                        "name": "etcd",
                        "state": {
                            "running": {
                                "startedAt": "2025-05-21T23:40:28Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 0,
                                "reason": "Completed",
                                "startedAt": "2025-05-21T18:21:04Z",
                                "finishedAt": "2025-05-21T22:05:53Z",
                                "containerID": "docker://7e659cf7875cd9a051d34c448fb62fe00ef46cd43fe5bf21bcf2b651586049e6"
                            }
                        },
                        "ready": true,
                        "restartCount": 4,
                        "image": "registry.k8s.io/etcd:3.5.16-0",
                        "imageID": "docker-pullable://registry.k8s.io/etcd@sha256:c6a9d11cc5c04b114ccdef39a9265eeef818e3d02f5359be035ae784097fdec5",
                        "containerID": "docker://6c31fce19b4abdb801b082cc1cb2652f05aaf5cbe1943c808610e9666de4c316",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-apiserver-minikube",
                "namespace": "kube-system",
                "uid": "ea1666ac-33cf-4a32-90f5-3ac556f4c993",
                "resourceVersion": "41785",
                "creationTimestamp": "2025-05-13T00:36:54Z",
                "labels": {
                    "component": "kube-apiserver",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint": "192.168.49.2:8443",
                    "kubernetes.io/config.hash": "d72d0a4cf4be077c9919d46b7358a5e8",
                    "kubernetes.io/config.mirror": "d72d0a4cf4be077c9919d46b7358a5e8",
                    "kubernetes.io/config.seen": "2025-05-13T00:36:53.884677654Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "minikube",
                        "uid": "2303f334-d287-4949-981f-a70c2fc35815",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "ca-certs",
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etc-ca-certificates",
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "k8s-certs",
                        "hostPath": {
                            "path": "/var/lib/minikube/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-local-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/local/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-apiserver",
                        "image": "registry.k8s.io/kube-apiserver:v1.32.0",
                        "command": [
                            "kube-apiserver",
                            "--advertise-address=192.168.49.2",
                            "--allow-privileged=true",
                            "--authorization-mode=Node,RBAC",
                            "--client-ca-file=/var/lib/minikube/certs/ca.crt",
                            "--enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota",
                            "--enable-bootstrap-token-auth=true",
                            "--etcd-cafile=/var/lib/minikube/certs/etcd/ca.crt",
                            "--etcd-certfile=/var/lib/minikube/certs/apiserver-etcd-client.crt",
                            "--etcd-keyfile=/var/lib/minikube/certs/apiserver-etcd-client.key",
                            "--etcd-servers=https://127.0.0.1:2379",
                            "--kubelet-client-certificate=/var/lib/minikube/certs/apiserver-kubelet-client.crt",
                            "--kubelet-client-key=/var/lib/minikube/certs/apiserver-kubelet-client.key",
                            "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                            "--proxy-client-cert-file=/var/lib/minikube/certs/front-proxy-client.crt",
                            "--proxy-client-key-file=/var/lib/minikube/certs/front-proxy-client.key",
                            "--requestheader-allowed-names=front-proxy-client",
                            "--requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt",
                            "--requestheader-extra-headers-prefix=X-Remote-Extra-",
                            "--requestheader-group-headers=X-Remote-Group",
                            "--requestheader-username-headers=X-Remote-User",
                            "--secure-port=8443",
                            "--service-account-issuer=https://kubernetes.default.svc.cluster.local",
                            "--service-account-key-file=/var/lib/minikube/certs/sa.pub",
                            "--service-account-signing-key-file=/var/lib/minikube/certs/sa.key",
                            "--service-cluster-ip-range=10.96.0.0/12",
                            "--tls-cert-file=/var/lib/minikube/certs/apiserver.crt",
                            "--tls-private-key-file=/var/lib/minikube/certs/apiserver.key"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "250m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "ca-certs",
                                "readOnly": true,
                                "mountPath": "/etc/ssl/certs"
                            },
                            {
                                "name": "etc-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/etc/ca-certificates"
                            },
                            {
                                "name": "k8s-certs",
                                "readOnly": true,
                                "mountPath": "/var/lib/minikube/certs"
                            },
                            {
                                "name": "usr-local-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/local/share/ca-certificates"
                            },
                            {
                                "name": "usr-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/ca-certificates"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": 8443,
                                "host": "192.168.49.2",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/readyz",
                                "port": 8443,
                                "host": "192.168.49.2",
                                "scheme": "HTTPS"
                            },
                            "timeoutSeconds": 15,
                            "periodSeconds": 1,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": 8443,
                                "host": "192.168.49.2",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "minikube",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:40:31Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:40:24Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:40:48Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:40:48Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:40:24Z"
                    }
                ],
                "hostIP": "192.168.49.2",
                "hostIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "podIP": "192.168.49.2",
                "podIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "startTime": "2025-05-21T23:40:24Z",
                "containerStatuses": [
                    {
                        "name": "kube-apiserver",
                        "state": {
                            "running": {
                                "startedAt": "2025-05-21T23:40:28Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 137,
                                "reason": "Error",
                                "startedAt": "2025-05-21T18:21:03Z",
                                "finishedAt": "2025-05-21T22:06:03Z",
                                "containerID": "docker://4678f7c99ceb48fdbcaf9a31876bd16dbc3dc3986518efe53fa13651f2199d58"
                            }
                        },
                        "ready": true,
                        "restartCount": 4,
                        "image": "registry.k8s.io/kube-apiserver:v1.32.0",
                        "imageID": "docker-pullable://registry.k8s.io/kube-apiserver@sha256:ebc0ce2d7e647dd97980ec338ad81496c111741ab4ad05e7c5d37539aaf7dc3b",
                        "containerID": "docker://62ae24e221940611ec5985006e04fae36cec89ccfd8e3e33c8fea6e9b716b5ab",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-controller-manager-minikube",
                "namespace": "kube-system",
                "uid": "0663728d-ffc6-4bd2-88be-915c0ccd1e7a",
                "resourceVersion": "41752",
                "creationTimestamp": "2025-05-13T00:36:54Z",
                "labels": {
                    "component": "kube-controller-manager",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubernetes.io/config.hash": "843c74f7b3bc7d7040a05c31708a6a30",
                    "kubernetes.io/config.mirror": "843c74f7b3bc7d7040a05c31708a6a30",
                    "kubernetes.io/config.seen": "2025-05-13T00:36:53.884683954Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "minikube",
                        "uid": "2303f334-d287-4949-981f-a70c2fc35815",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "ca-certs",
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etc-ca-certificates",
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "flexvolume-dir",
                        "hostPath": {
                            "path": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "k8s-certs",
                        "hostPath": {
                            "path": "/var/lib/minikube/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "kubeconfig",
                        "hostPath": {
                            "path": "/etc/kubernetes/controller-manager.conf",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "usr-local-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/local/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-controller-manager",
                        "image": "registry.k8s.io/kube-controller-manager:v1.32.0",
                        "command": [
                            "kube-controller-manager",
                            "--allocate-node-cidrs=true",
                            "--authentication-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--bind-address=127.0.0.1",
                            "--client-ca-file=/var/lib/minikube/certs/ca.crt",
                            "--cluster-cidr=10.244.0.0/16",
                            "--cluster-name=mk",
                            "--cluster-signing-cert-file=/var/lib/minikube/certs/ca.crt",
                            "--cluster-signing-key-file=/var/lib/minikube/certs/ca.key",
                            "--controllers=*,bootstrapsigner,tokencleaner",
                            "--kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--leader-elect=false",
                            "--requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt",
                            "--root-ca-file=/var/lib/minikube/certs/ca.crt",
                            "--service-account-private-key-file=/var/lib/minikube/certs/sa.key",
                            "--service-cluster-ip-range=10.96.0.0/12",
                            "--use-service-account-credentials=true"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "200m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "ca-certs",
                                "readOnly": true,
                                "mountPath": "/etc/ssl/certs"
                            },
                            {
                                "name": "etc-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/etc/ca-certificates"
                            },
                            {
                                "name": "flexvolume-dir",
                                "mountPath": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec"
                            },
                            {
                                "name": "k8s-certs",
                                "readOnly": true,
                                "mountPath": "/var/lib/minikube/certs"
                            },
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/controller-manager.conf"
                            },
                            {
                                "name": "usr-local-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/local/share/ca-certificates"
                            },
                            {
                                "name": "usr-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/ca-certificates"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10257,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10257,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "minikube",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:40:31Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:40:25Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:40:45Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:40:45Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:40:25Z"
                    }
                ],
                "hostIP": "192.168.49.2",
                "hostIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "podIP": "192.168.49.2",
                "podIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "startTime": "2025-05-21T23:40:25Z",
                "containerStatuses": [
                    {
                        "name": "kube-controller-manager",
                        "state": {
                            "running": {
                                "startedAt": "2025-05-21T23:40:29Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 2,
                                "reason": "Error",
                                "startedAt": "2025-05-21T18:21:04Z",
                                "finishedAt": "2025-05-21T22:05:53Z",
                                "containerID": "docker://a694c30533df3e239ea9ed3b248c9a342e2131ca681637a3d19e90bd2f60670f"
                            }
                        },
                        "ready": true,
                        "restartCount": 4,
                        "image": "registry.k8s.io/kube-controller-manager:v1.32.0",
                        "imageID": "docker-pullable://registry.k8s.io/kube-controller-manager@sha256:c8faedf1a5f3981ffade770c696b676d30613681a95be3287c1f7eec50e49b6d",
                        "containerID": "docker://70681c589804c88264be137d8de9b5951916e9452c3f57208183522ba3fbe4ef",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-ingress-dns-minikube",
                "namespace": "kube-system",
                "uid": "b6d219d7-96c3-48ef-b3f8-4101ad2ab85e",
                "resourceVersion": "41881",
                "creationTimestamp": "2025-05-13T00:37:04Z",
                "labels": {
                    "app": "minikube-ingress-dns",
                    "app.kubernetes.io/part-of": "kube-system"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"minikube-ingress-dns\",\"app.kubernetes.io/part-of\":\"kube-system\"},\"name\":\"kube-ingress-dns-minikube\",\"namespace\":\"kube-system\"},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"DNS_PORT\",\"value\":\"53\"},{\"name\":\"POD_IP\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"status.podIP\"}}}],\"image\":\"gcr.io/k8s-minikube/minikube-ingress-dns:0.0.3@sha256:4211a1de532376c881851542238121b26792225faa36a7b02dccad88fd05797c\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"minikube-ingress-dns\",\"ports\":[{\"containerPort\":53,\"protocol\":\"UDP\"}]}],\"hostNetwork\":true,\"serviceAccountName\":\"minikube-ingress-dns\"}}\n"
                }
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-api-access-4v9mc",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "minikube-ingress-dns",
                        "image": "gcr.io/k8s-minikube/minikube-ingress-dns:0.0.3@sha256:4211a1de532376c881851542238121b26792225faa36a7b02dccad88fd05797c",
                        "ports": [
                            {
                                "hostPort": 53,
                                "containerPort": 53,
                                "protocol": "UDP"
                            }
                        ],
                        "env": [
                            {
                                "name": "DNS_PORT",
                                "value": "53"
                            },
                            {
                                "name": "POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-api-access-4v9mc",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "minikube-ingress-dns",
                "serviceAccount": "minikube-ingress-dns",
                "nodeName": "minikube",
                "hostNetwork": true,
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:41:03Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-13T00:37:04Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:41:03Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:41:03Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-13T00:37:04Z"
                    }
                ],
                "hostIP": "192.168.49.2",
                "hostIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "podIP": "192.168.49.2",
                "podIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "startTime": "2025-05-13T00:37:04Z",
                "containerStatuses": [
                    {
                        "name": "minikube-ingress-dns",
                        "state": {
                            "running": {
                                "startedAt": "2025-05-21T23:40:53Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 1,
                                "reason": "Error",
                                "startedAt": "2025-05-21T18:21:14Z",
                                "finishedAt": "2025-05-21T22:05:53Z",
                                "containerID": "docker://3fba0826deed3a7e4628edac8b8c62c571d14c300d395f7e64a92e8a2a53034a"
                            }
                        },
                        "ready": true,
                        "restartCount": 4,
                        "image": "sha256:30dd67412fdea30479de8d5d9bf760870308d24d911c59ea1f1757f04c33cc29",
                        "imageID": "docker-pullable://gcr.io/k8s-minikube/minikube-ingress-dns@sha256:4211a1de532376c881851542238121b26792225faa36a7b02dccad88fd05797c",
                        "containerID": "docker://5e62273a09446cc7ce00833c93d1411bf7e04c5c755b1f99dea0aa310da71c4a",
                        "started": true,
                        "volumeMounts": [
                            {
                                "name": "kube-api-access-4v9mc",
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-sx592",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "dcf4827f-d794-4452-a4ca-f14f9739d92a",
                "resourceVersion": "41856",
                "creationTimestamp": "2025-05-13T00:36:58Z",
                "labels": {
                    "controller-revision-hash": "64b9dbc74b",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "06b1b0eb-2e82-461f-ad70-0dafe8ee0e50",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-proxy",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-rnqpc",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "registry.k8s.io/kube-proxy:v1.32.0",
                        "command": [
                            "/usr/local/bin/kube-proxy",
                            "--config=/var/lib/kube-proxy/config.conf",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-proxy",
                                "mountPath": "/var/lib/kube-proxy"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-rnqpc",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "minikube",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "minikube"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:41:00Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-13T00:36:59Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:41:00Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:41:00Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-13T00:36:59Z"
                    }
                ],
                "hostIP": "192.168.49.2",
                "hostIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "podIP": "192.168.49.2",
                "podIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "startTime": "2025-05-13T00:36:59Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2025-05-21T23:40:53Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 2,
                                "reason": "Error",
                                "startedAt": "2025-05-21T18:21:14Z",
                                "finishedAt": "2025-05-21T22:05:53Z",
                                "containerID": "docker://8aab003ff74b1d9810e5805098b67a76e67fe4c810a818d97301e7796f0e373c"
                            }
                        },
                        "ready": true,
                        "restartCount": 4,
                        "image": "registry.k8s.io/kube-proxy:v1.32.0",
                        "imageID": "docker-pullable://registry.k8s.io/kube-proxy@sha256:6aee00d0c7f4869144d1bdbbed7572cd55fd1a4d58fef5a21f53836054cb39b4",
                        "containerID": "docker://90ec02c4ffb81779c178a0bc79bd16b31f9550ceed5858218ef0db506219f101",
                        "started": true,
                        "volumeMounts": [
                            {
                                "name": "kube-proxy",
                                "mountPath": "/var/lib/kube-proxy"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "mountPath": "/lib/modules",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "name": "kube-api-access-rnqpc",
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "kube-scheduler-minikube",
                "namespace": "kube-system",
                "uid": "406b70b5-318e-40af-9344-8b0c56e2772d",
                "resourceVersion": "41749",
                "creationTimestamp": "2025-05-13T00:36:51Z",
                "labels": {
                    "component": "kube-scheduler",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubernetes.io/config.hash": "d14ce008bee3a1f3bd7cf547688f9dfe",
                    "kubernetes.io/config.mirror": "d14ce008bee3a1f3bd7cf547688f9dfe",
                    "kubernetes.io/config.seen": "2025-05-13T00:36:39.071603535Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "minikube",
                        "uid": "2303f334-d287-4949-981f-a70c2fc35815",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kubeconfig",
                        "hostPath": {
                            "path": "/etc/kubernetes/scheduler.conf",
                            "type": "FileOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-scheduler",
                        "image": "registry.k8s.io/kube-scheduler:v1.32.0",
                        "command": [
                            "kube-scheduler",
                            "--authentication-kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--bind-address=127.0.0.1",
                            "--kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--leader-elect=false"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/scheduler.conf"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": 10259,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/readyz",
                                "port": 10259,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "timeoutSeconds": 15,
                            "periodSeconds": 1,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": 10259,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "minikube",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:40:30Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:40:25Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:40:40Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:40:40Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:40:25Z"
                    }
                ],
                "hostIP": "192.168.49.2",
                "hostIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "podIP": "192.168.49.2",
                "podIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "startTime": "2025-05-21T23:40:25Z",
                "containerStatuses": [
                    {
                        "name": "kube-scheduler",
                        "state": {
                            "running": {
                                "startedAt": "2025-05-21T23:40:29Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 1,
                                "reason": "Error",
                                "startedAt": "2025-05-21T18:21:03Z",
                                "finishedAt": "2025-05-21T22:05:53Z",
                                "containerID": "docker://324ea18d1efe4238e4eab4b05a50be928583e07874d07c8cbbde68c2938996b6"
                            }
                        },
                        "ready": true,
                        "restartCount": 4,
                        "image": "registry.k8s.io/kube-scheduler:v1.32.0",
                        "imageID": "docker-pullable://registry.k8s.io/kube-scheduler@sha256:84c998f7610b356a5eed24f801c01b273cf3e83f081f25c9b16aa8136c2cafb1",
                        "containerID": "docker://9bdf79d39ab473345462c1d2941a1270d105afcc2fe5ef4f32670b768e402eee",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "metrics-server-7fbb699795-6h8fd",
                "generateName": "metrics-server-7fbb699795-",
                "namespace": "kube-system",
                "uid": "5ccf5803-9680-47b9-94c4-a92db9f0a36d",
                "resourceVersion": "41924",
                "creationTimestamp": "2025-05-13T00:37:06Z",
                "labels": {
                    "k8s-app": "metrics-server",
                    "pod-template-hash": "7fbb699795"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "metrics-server-7fbb699795",
                        "uid": "f808772b-c3da-4384-a7b2-8ee7e1814c16",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "tmp-dir",
                        "emptyDir": {}
                    },
                    {
                        "name": "kube-api-access-dj5cv",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "metrics-server",
                        "image": "registry.k8s.io/metrics-server/metrics-server:v0.7.2@sha256:ffcb2bf004d6aa0a17d90e0247cf94f2865c8901dcab4427034c341951c239f9",
                        "args": [
                            "--cert-dir=/tmp",
                            "--secure-port=4443",
                            "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                            "--kubelet-use-node-status-port",
                            "--metric-resolution=60s",
                            "--kubelet-insecure-tls"
                        ],
                        "ports": [
                            {
                                "name": "https",
                                "containerPort": 4443,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m",
                                "memory": "200Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "tmp-dir",
                                "mountPath": "/tmp"
                            },
                            {
                                "name": "kube-api-access-dj5cv",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": "https",
                                "scheme": "HTTPS"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/readyz",
                                "port": "https",
                                "scheme": "HTTPS"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "runAsUser": 1000,
                            "runAsNonRoot": true,
                            "readOnlyRootFilesystem": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "metrics-server",
                "serviceAccount": "metrics-server",
                "nodeName": "minikube",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:40:55Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-13T00:37:06Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:41:32Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:41:32Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-13T00:37:06Z"
                    }
                ],
                "hostIP": "192.168.49.2",
                "hostIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "podIP": "10.244.0.107",
                "podIPs": [
                    {
                        "ip": "10.244.0.107"
                    }
                ],
                "startTime": "2025-05-13T00:37:06Z",
                "containerStatuses": [
                    {
                        "name": "metrics-server",
                        "state": {
                            "running": {
                                "startedAt": "2025-05-21T23:41:30Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 2,
                                "reason": "Error",
                                "startedAt": "2025-05-21T23:40:53Z",
                                "finishedAt": "2025-05-21T23:41:30Z",
                                "containerID": "docker://5c6117cdceeb5c9876765030d75b1539baaf1ec2747014bdf2c514daf0f1d12b"
                            }
                        },
                        "ready": true,
                        "restartCount": 5,
                        "image": "sha256:48d9cfaaf3904a3821b1e71e50d7cbcf52fb19d5286c59e0f86b1389d189b19c",
                        "imageID": "docker-pullable://registry.k8s.io/metrics-server/metrics-server@sha256:ffcb2bf004d6aa0a17d90e0247cf94f2865c8901dcab4427034c341951c239f9",
                        "containerID": "docker://efec48ec205dfcb3bf0f81183e420501b1431a39a7db05f0fc6ca11342a288de",
                        "started": true,
                        "volumeMounts": [
                            {
                                "name": "tmp-dir",
                                "mountPath": "/tmp"
                            },
                            {
                                "name": "kube-api-access-dj5cv",
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "registry-6c86875c6f-776j6",
                "generateName": "registry-6c86875c6f-",
                "namespace": "kube-system",
                "uid": "46995aca-a1e8-46ac-b42a-155ecb08540c",
                "resourceVersion": "41859",
                "creationTimestamp": "2025-05-13T00:37:05Z",
                "labels": {
                    "actual-registry": "true",
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "kubernetes.io/minikube-addons": "registry",
                    "pod-template-hash": "6c86875c6f"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "registry-6c86875c6f",
                        "uid": "a388c1f9-1566-480f-93a5-dfd74f41e8ce",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-api-access-v8g6m",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "registry",
                        "image": "docker.io/registry:2.8.3@sha256:543dade69668e02e5768d7ea2b0aa4fae6aa7384c9a5a8dbecc2be5136079ddb",
                        "ports": [
                            {
                                "containerPort": 5000,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "REGISTRY_STORAGE_DELETE_ENABLED",
                                "value": "true"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-api-access-v8g6m",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "nodeName": "minikube",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:41:01Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-13T00:37:05Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:41:01Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:41:01Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-13T00:37:05Z"
                    }
                ],
                "hostIP": "192.168.49.2",
                "hostIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "podIP": "10.244.0.108",
                "podIPs": [
                    {
                        "ip": "10.244.0.108"
                    }
                ],
                "startTime": "2025-05-13T00:37:05Z",
                "containerStatuses": [
                    {
                        "name": "registry",
                        "state": {
                            "running": {
                                "startedAt": "2025-05-21T23:40:54Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 2,
                                "reason": "Error",
                                "startedAt": "2025-05-21T18:21:18Z",
                                "finishedAt": "2025-05-21T22:05:53Z",
                                "containerID": "docker://8391c1d19a58cd51264f3ef44eb5838cf24e4b5c634ae6723e700b2966fa71e5"
                            }
                        },
                        "ready": true,
                        "restartCount": 4,
                        "image": "sha256:c18a86d35e983225b84aae3bb15c84bd9e47506dd0102975c0ed97958703bb73",
                        "imageID": "docker-pullable://registry@sha256:543dade69668e02e5768d7ea2b0aa4fae6aa7384c9a5a8dbecc2be5136079ddb",
                        "containerID": "docker://bd028e83361c7a8b09782b9ab4141dd051160f9767c9dc69090e82a10e2d7efe",
                        "started": true,
                        "volumeMounts": [
                            {
                                "name": "kube-api-access-v8g6m",
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "registry-proxy-jxnpg",
                "generateName": "registry-proxy-",
                "namespace": "kube-system",
                "uid": "58cf857b-4e58-4b51-bc3b-3d51849335d1",
                "resourceVersion": "41869",
                "creationTimestamp": "2025-05-13T00:37:05Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "controller-revision-hash": "687d9f8cd6",
                    "kubernetes.io/minikube-addons": "registry",
                    "pod-template-generation": "1",
                    "registry-proxy": "true"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "registry-proxy",
                        "uid": "9615ebc8-5f6e-49ae-b2a8-9b7de19a510e",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-api-access-k666m",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "registry-proxy",
                        "image": "gcr.io/k8s-minikube/kube-registry-proxy:0.0.8@sha256:60ab3508367ad093b4b891231572577371a29f838d61e64d7f7d093d961c862c",
                        "ports": [
                            {
                                "name": "registry",
                                "hostPort": 5000,
                                "containerPort": 80,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "REGISTRY_HOST",
                                "value": "registry.kube-system.svc.cluster.local"
                            },
                            {
                                "name": "REGISTRY_PORT",
                                "value": "80"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-api-access-k666m",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "nodeName": "minikube",
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "minikube"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:41:02Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-13T00:37:05Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:41:02Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:41:02Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-13T00:37:05Z"
                    }
                ],
                "hostIP": "192.168.49.2",
                "hostIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "podIP": "10.244.0.113",
                "podIPs": [
                    {
                        "ip": "10.244.0.113"
                    }
                ],
                "startTime": "2025-05-13T00:37:05Z",
                "containerStatuses": [
                    {
                        "name": "registry-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2025-05-21T23:40:58Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 0,
                                "reason": "Completed",
                                "startedAt": "2025-05-21T18:21:20Z",
                                "finishedAt": "2025-05-21T22:05:53Z",
                                "containerID": "docker://a674c5734f1cb4c102900f04321ac319d5d3d2faa961ef22d0de9728f2567e2d"
                            }
                        },
                        "ready": true,
                        "restartCount": 4,
                        "image": "sha256:9df718d81010e0a116dcbff8af8c0875fad690e24d0a94e3a0d5e0a43603b02a",
                        "imageID": "docker-pullable://gcr.io/k8s-minikube/kube-registry-proxy@sha256:60ab3508367ad093b4b891231572577371a29f838d61e64d7f7d093d961c862c",
                        "containerID": "docker://9cfc76ca8465ae39127b755135cab29338e075d08ba7ab21ed353bef982f191d",
                        "started": true,
                        "volumeMounts": [
                            {
                                "name": "kube-api-access-k666m",
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "storage-provisioner",
                "namespace": "kube-system",
                "uid": "6b5e4be2-97fa-4052-b724-5208722c0fb4",
                "resourceVersion": "41957",
                "creationTimestamp": "2025-05-13T00:37:05Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "integration-test": "storage-provisioner"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"integration-test\":\"storage-provisioner\"},\"name\":\"storage-provisioner\",\"namespace\":\"kube-system\"},\"spec\":{\"containers\":[{\"command\":[\"/storage-provisioner\"],\"image\":\"gcr.io/k8s-minikube/storage-provisioner:v5\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"storage-provisioner\",\"volumeMounts\":[{\"mountPath\":\"/tmp\",\"name\":\"tmp\"}]}],\"hostNetwork\":true,\"serviceAccountName\":\"storage-provisioner\",\"volumes\":[{\"hostPath\":{\"path\":\"/tmp\",\"type\":\"Directory\"},\"name\":\"tmp\"}]}}\n"
                }
            },
            "spec": {
                "volumes": [
                    {
                        "name": "tmp",
                        "hostPath": {
                            "path": "/tmp",
                            "type": "Directory"
                        }
                    },
                    {
                        "name": "kube-api-access-6x8lt",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "storage-provisioner",
                        "image": "gcr.io/k8s-minikube/storage-provisioner:v5",
                        "command": [
                            "/storage-provisioner"
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "tmp",
                                "mountPath": "/tmp"
                            },
                            {
                                "name": "kube-api-access-6x8lt",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "storage-provisioner",
                "serviceAccount": "storage-provisioner",
                "nodeName": "minikube",
                "hostNetwork": true,
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:40:53Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-13T00:37:05Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:41:39Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-21T23:41:39Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-13T00:37:05Z"
                    }
                ],
                "hostIP": "192.168.49.2",
                "hostIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "podIP": "192.168.49.2",
                "podIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "startTime": "2025-05-13T00:37:05Z",
                "containerStatuses": [
                    {
                        "name": "storage-provisioner",
                        "state": {
                            "running": {
                                "startedAt": "2025-05-21T23:41:38Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 1,
                                "reason": "Error",
                                "startedAt": "2025-05-21T23:40:48Z",
                                "finishedAt": "2025-05-21T23:41:24Z",
                                "containerID": "docker://7113e4f9de5c33a09ee880cd807691be888d963cebc2344b176faa43ebf2f2c5"
                            }
                        },
                        "ready": true,
                        "restartCount": 8,
                        "image": "gcr.io/k8s-minikube/storage-provisioner:v5",
                        "imageID": "docker-pullable://gcr.io/k8s-minikube/storage-provisioner@sha256:18eb69d1418e854ad5a19e399310e52808a8321e4c441c1dddad8977a0d7a944",
                        "containerID": "docker://3e6e0071587ab9b43b107cf005609a2aafc52d2cbff7c6dabb5e2553f5793aa4",
                        "started": true,
                        "volumeMounts": [
                            {
                                "name": "tmp",
                                "mountPath": "/tmp"
                            },
                            {
                                "name": "kube-api-access-6x8lt",
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "qosClass": "BestEffort"
            }
        }
    ]
}
==== START logs for container coredns of pod kube-system/coredns-668d6bf9bc-fjbsf ====
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/ready: Still waiting on: "kubernetes"
[WARNING] plugin/kubernetes: starting server with unsynced Kubernetes API
.:53
[INFO] plugin/reload: Running configuration SHA512 = 9e2996f8cb67ac53e0259ab1f8d615d07d1beb0bd07e6a1e39769c3bf486a905bb991cc47f8d2f14d0d3a90a87dfc625a0b4c524fed169d8158c40657c0694b1
CoreDNS-1.11.3
linux/amd64, go1.21.11, a6338e9
[INFO] 127.0.0.1:42135 - 41950 "HINFO IN 5518190371737101233.6737802603583845150. udp 57 false 512" NXDOMAIN qr,rd,ra 132 0.048235591s
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229: failed to list *v1.Namespace: Get "https://10.96.0.1:443/api/v1/namespaces?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[INFO] plugin/kubernetes: Trace[1363906567]: "Reflector ListAndWatch" name:pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229 (21-May-2025 23:40:57.314) (total time: 30001ms):
Trace[1363906567]: ---"Objects listed" error:Get "https://10.96.0.1:443/api/v1/namespaces?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout 30001ms (23:41:28.679)
Trace[1363906567]: [30.00150241s] [30.00150241s] END
[ERROR] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229: Failed to watch *v1.Namespace: failed to list *v1.Namespace: Get "https://10.96.0.1:443/api/v1/namespaces?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[INFO] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229: failed to list *v1.Service: Get "https://10.96.0.1:443/api/v1/services?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[INFO] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229: failed to list *v1.EndpointSlice: Get "https://10.96.0.1:443/apis/discovery.k8s.io/v1/endpointslices?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[INFO] plugin/kubernetes: Trace[648061958]: "Reflector ListAndWatch" name:pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229 (21-May-2025 23:40:57.315) (total time: 30000ms):
Trace[648061958]: ---"Objects listed" error:Get "https://10.96.0.1:443/api/v1/services?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout 30000ms (23:41:28.679)
Trace[648061958]: [30.000570485s] [30.000570485s] END
[ERROR] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229: Failed to watch *v1.Service: failed to list *v1.Service: Get "https://10.96.0.1:443/api/v1/services?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[INFO] plugin/kubernetes: Trace[296413416]: "Reflector ListAndWatch" name:pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229 (21-May-2025 23:40:57.315) (total time: 30000ms):
Trace[296413416]: ---"Objects listed" error:Get "https://10.96.0.1:443/apis/discovery.k8s.io/v1/endpointslices?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout 30000ms (23:41:28.679)
Trace[296413416]: [30.000485143s] [30.000485143s] END
[ERROR] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229: Failed to watch *v1.EndpointSlice: failed to list *v1.EndpointSlice: Get "https://10.96.0.1:443/apis/discovery.k8s.io/v1/endpointslices?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[INFO] 10.244.0.113:55151 - 15236 "AAAA IN registry.kube-system.svc.cluster.local.kube-system.svc.cluster.local. udp 109 false 1232" NXDOMAIN qr,aa,rd 179 0.000341137s
[INFO] 10.244.0.113:55151 - 10536 "A IN registry.kube-system.svc.cluster.local.kube-system.svc.cluster.local. udp 109 false 1232" NXDOMAIN qr,aa,rd 179 0.000438851s
[INFO] 10.244.0.113:55151 - 33171 "A IN registry.kube-system.svc.cluster.local.svc.cluster.local. udp 85 false 1232" NXDOMAIN qr,aa,rd 167 0.000114512s
[INFO] 10.244.0.113:55151 - 2638 "AAAA IN registry.kube-system.svc.cluster.local.svc.cluster.local. udp 85 false 1232" NXDOMAIN qr,aa,rd 167 0.000405448s
[INFO] 10.244.0.113:55151 - 34878 "AAAA IN registry.kube-system.svc.cluster.local.cluster.local. udp 81 false 1232" NXDOMAIN qr,aa,rd 163 0.000142349s
[INFO] 10.244.0.113:55151 - 31778 "A IN registry.kube-system.svc.cluster.local.cluster.local. udp 81 false 1232" NXDOMAIN qr,aa,rd 163 0.000264155s
[INFO] 10.244.0.113:55151 - 10827 "AAAA IN registry.kube-system.svc.cluster.local. udp 67 false 1232" NOERROR qr,aa,rd 149 0.000391146s
[INFO] 10.244.0.113:55151 - 26524 "A IN registry.kube-system.svc.cluster.local. udp 67 false 1232" NOERROR qr,aa,rd 110 0.001890362s
[INFO] 10.244.0.113:49314 - 37169 "AAAA IN registry.kube-system.svc.cluster.local.kube-system.svc.cluster.local. udp 86 false 512" NXDOMAIN qr,aa,rd 179 0.000298615s
[INFO] 10.244.0.113:49314 - 36497 "A IN registry.kube-system.svc.cluster.local.kube-system.svc.cluster.local. udp 86 false 512" NXDOMAIN qr,aa,rd 179 0.000412839s
[INFO] 10.244.0.113:34328 - 24352 "AAAA IN registry.kube-system.svc.cluster.local.svc.cluster.local. udp 74 false 512" NXDOMAIN qr,aa,rd 167 0.000383083s
[INFO] 10.244.0.113:34328 - 23872 "A IN registry.kube-system.svc.cluster.local.svc.cluster.local. udp 74 false 512" NXDOMAIN qr,aa,rd 167 0.000379627s
[INFO] 10.244.0.113:53092 - 6401 "A IN registry.kube-system.svc.cluster.local.cluster.local. udp 70 false 512" NXDOMAIN qr,aa,rd 163 0.000406407s
[INFO] 10.244.0.113:53092 - 6880 "AAAA IN registry.kube-system.svc.cluster.local.cluster.local. udp 70 false 512" NXDOMAIN qr,aa,rd 163 0.000846314s
[INFO] 10.244.0.113:53371 - 52304 "A IN registry.kube-system.svc.cluster.local. udp 56 false 512" NOERROR qr,aa,rd 110 0.000598381s
[INFO] 10.244.0.113:53371 - 52688 "AAAA IN registry.kube-system.svc.cluster.local. udp 56 false 512" NOERROR qr,aa,rd 149 0.000456321s
==== END logs for container coredns of pod kube-system/coredns-668d6bf9bc-fjbsf ====
==== START logs for container etcd of pod kube-system/etcd-minikube ====
{"level":"warn","ts":"2025-05-21T23:40:28.970507Z","caller":"embed/config.go:689","msg":"Running http and grpc server on single port. This is not recommended for production."}
{"level":"info","ts":"2025-05-21T23:40:28.972020Z","caller":"etcdmain/etcd.go:73","msg":"Running: ","args":["etcd","--advertise-client-urls=https://192.168.49.2:2379","--cert-file=/var/lib/minikube/certs/etcd/server.crt","--client-cert-auth=true","--data-dir=/var/lib/minikube/etcd","--experimental-initial-corrupt-check=true","--experimental-watch-progress-notify-interval=5s","--initial-advertise-peer-urls=https://192.168.49.2:2380","--initial-cluster=minikube=https://192.168.49.2:2380","--key-file=/var/lib/minikube/certs/etcd/server.key","--listen-client-urls=https://127.0.0.1:2379,https://192.168.49.2:2379","--listen-metrics-urls=http://127.0.0.1:2381","--listen-peer-urls=https://192.168.49.2:2380","--name=minikube","--peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt","--peer-client-cert-auth=true","--peer-key-file=/var/lib/minikube/certs/etcd/peer.key","--peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt","--proxy-refresh-interval=70000","--snapshot-count=10000","--trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt"]}
{"level":"info","ts":"2025-05-21T23:40:28.972167Z","caller":"etcdmain/etcd.go:116","msg":"server has been already initialized","data-dir":"/var/lib/minikube/etcd","dir-type":"member"}
{"level":"warn","ts":"2025-05-21T23:40:28.972210Z","caller":"embed/config.go:689","msg":"Running http and grpc server on single port. This is not recommended for production."}
{"level":"info","ts":"2025-05-21T23:40:28.972236Z","caller":"embed/etcd.go:128","msg":"configuring peer listeners","listen-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2025-05-21T23:40:28.972299Z","caller":"embed/etcd.go:497","msg":"starting with peer TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/peer.crt, key = /var/lib/minikube/certs/etcd/peer.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2025-05-21T23:40:28.979351Z","caller":"embed/etcd.go:136","msg":"configuring client listeners","listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"]}
{"level":"info","ts":"2025-05-21T23:40:28.979632Z","caller":"embed/etcd.go:311","msg":"starting an etcd server","etcd-version":"3.5.16","git-sha":"f20bbad","go-version":"go1.22.7","go-os":"linux","go-arch":"amd64","max-cpu-set":2,"max-cpu-available":2,"member-initialized":true,"name":"minikube","data-dir":"/var/lib/minikube/etcd","wal-dir":"","wal-dir-dedicated":"","member-dir":"/var/lib/minikube/etcd/member","force-new-cluster":false,"heartbeat-interval":"100ms","election-timeout":"1s","initial-election-tick-advance":true,"snapshot-count":10000,"max-wals":5,"max-snapshots":5,"snapshot-catchup-entries":5000,"initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"],"cors":["*"],"host-whitelist":["*"],"initial-cluster":"","initial-cluster-state":"new","initial-cluster-token":"","quota-backend-bytes":2147483648,"max-request-bytes":1572864,"max-concurrent-streams":4294967295,"pre-vote":true,"initial-corrupt-check":true,"corrupt-check-time-interval":"0s","compact-check-time-enabled":false,"compact-check-time-interval":"1m0s","auto-compaction-mode":"periodic","auto-compaction-retention":"0s","auto-compaction-interval":"0s","discovery-url":"","discovery-proxy":"","downgrade-check-interval":"5s"}
{"level":"info","ts":"2025-05-21T23:40:28.990369Z","caller":"etcdserver/backend.go:81","msg":"opened backend db","path":"/var/lib/minikube/etcd/member/snap/db","took":"10.310661ms"}
{"level":"info","ts":"2025-05-21T23:40:30.478194Z","caller":"etcdserver/server.go:511","msg":"recovered v2 store from snapshot","snapshot-index":50005,"snapshot-size":"8.2 kB"}
{"level":"info","ts":"2025-05-21T23:40:30.478273Z","caller":"etcdserver/server.go:524","msg":"recovered v3 backend from snapshot","backend-size-bytes":5308416,"backend-size":"5.3 MB","backend-size-in-use-bytes":1421312,"backend-size-in-use":"1.4 MB"}
{"level":"info","ts":"2025-05-21T23:40:32.710864Z","caller":"etcdserver/raft.go:540","msg":"restarting local member","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","commit-index":50319}
{"level":"info","ts":"2025-05-21T23:40:32.711941Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"info","ts":"2025-05-21T23:40:32.712050Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became follower at term 5"}
{"level":"info","ts":"2025-05-21T23:40:32.712355Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"newRaft aec36adc501070cc [peers: [aec36adc501070cc], term: 5, commit: 50319, applied: 50005, lastindex: 50319, lastterm: 5]"}
{"level":"info","ts":"2025-05-21T23:40:32.712800Z","caller":"api/capability.go:75","msg":"enabled capabilities for version","cluster-version":"3.5"}
{"level":"info","ts":"2025-05-21T23:40:32.712863Z","caller":"membership/cluster.go:278","msg":"recovered/added member from store","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","recovered-remote-peer-id":"aec36adc501070cc","recovered-remote-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2025-05-21T23:40:32.712886Z","caller":"membership/cluster.go:287","msg":"set cluster version from store","cluster-version":"3.5"}
{"level":"warn","ts":"2025-05-21T23:40:32.729336Z","caller":"auth/store.go:1241","msg":"simple token is not cryptographically signed"}
{"level":"info","ts":"2025-05-21T23:40:32.742841Z","caller":"mvcc/kvstore.go:346","msg":"restored last compact revision","meta-bucket-name":"meta","meta-bucket-name-key":"finishedCompactRev","restored-compact-revision":41347}
{"level":"info","ts":"2025-05-21T23:40:32.771220Z","caller":"mvcc/kvstore.go:423","msg":"kvstore restored","current-rev":41699}
{"level":"info","ts":"2025-05-21T23:40:32.793792Z","caller":"etcdserver/quota.go:94","msg":"enabled backend quota with default value","quota-name":"v3-applier","quota-size-bytes":2147483648,"quota-size":"2.1 GB"}
{"level":"info","ts":"2025-05-21T23:40:32.815114Z","caller":"etcdserver/corrupt.go:96","msg":"starting initial corruption check","local-member-id":"aec36adc501070cc","timeout":"7s"}
{"level":"info","ts":"2025-05-21T23:40:32.816285Z","caller":"etcdserver/corrupt.go:177","msg":"initial corruption checking passed; no corruption","local-member-id":"aec36adc501070cc"}
{"level":"info","ts":"2025-05-21T23:40:32.816751Z","caller":"etcdserver/server.go:864","msg":"starting etcd server","local-member-id":"aec36adc501070cc","local-server-version":"3.5.16","cluster-id":"fa54960ea34d58be","cluster-version":"3.5"}
{"level":"info","ts":"2025-05-21T23:40:32.818832Z","caller":"etcdserver/server.go:757","msg":"started as single-node; fast-forwarding election ticks","local-member-id":"aec36adc501070cc","forward-ticks":9,"forward-duration":"900ms","election-ticks":10,"election-timeout":"1s"}
{"level":"info","ts":"2025-05-21T23:40:32.819153Z","caller":"fileutil/purge.go:50","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap.db","max":5,"interval":"30s"}
{"level":"info","ts":"2025-05-21T23:40:32.819211Z","caller":"fileutil/purge.go:50","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap","max":5,"interval":"30s"}
{"level":"info","ts":"2025-05-21T23:40:32.819228Z","caller":"fileutil/purge.go:50","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/wal","suffix":"wal","max":5,"interval":"30s"}
{"level":"info","ts":"2025-05-21T23:40:32.820309Z","caller":"v3rpc/health.go:61","msg":"grpc service status changed","service":"","status":"SERVING"}
{"level":"info","ts":"2025-05-21T23:40:32.822353Z","caller":"embed/etcd.go:729","msg":"starting with client TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/server.crt, key = /var/lib/minikube/certs/etcd/server.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2025-05-21T23:40:32.823856Z","caller":"embed/etcd.go:280","msg":"now serving peer/client/metrics","local-member-id":"aec36adc501070cc","initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"]}
{"level":"info","ts":"2025-05-21T23:40:32.823946Z","caller":"embed/etcd.go:871","msg":"serving metrics","address":"http://127.0.0.1:2381"}
{"level":"info","ts":"2025-05-21T23:40:32.824307Z","caller":"embed/etcd.go:600","msg":"serving peer traffic","address":"192.168.49.2:2380"}
{"level":"info","ts":"2025-05-21T23:40:32.824339Z","caller":"embed/etcd.go:572","msg":"cmux::serve","address":"192.168.49.2:2380"}
{"level":"info","ts":"2025-05-21T23:40:33.219374Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc is starting a new election at term 5"}
{"level":"info","ts":"2025-05-21T23:40:33.219716Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became pre-candidate at term 5"}
{"level":"info","ts":"2025-05-21T23:40:33.220061Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgPreVoteResp from aec36adc501070cc at term 5"}
{"level":"info","ts":"2025-05-21T23:40:33.220177Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became candidate at term 6"}
{"level":"info","ts":"2025-05-21T23:40:33.220282Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgVoteResp from aec36adc501070cc at term 6"}
{"level":"info","ts":"2025-05-21T23:40:33.220368Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became leader at term 6"}
{"level":"info","ts":"2025-05-21T23:40:33.220448Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"raft.node: aec36adc501070cc elected leader aec36adc501070cc at term 6"}
{"level":"info","ts":"2025-05-21T23:40:33.239834Z","caller":"embed/serve.go:103","msg":"ready to serve client requests"}
{"level":"info","ts":"2025-05-21T23:40:33.240842Z","caller":"v3rpc/health.go:61","msg":"grpc service status changed","service":"","status":"SERVING"}
{"level":"info","ts":"2025-05-21T23:40:33.242368Z","caller":"embed/serve.go:250","msg":"serving client traffic securely","traffic":"grpc+http","address":"192.168.49.2:2379"}
{"level":"info","ts":"2025-05-21T23:40:33.242834Z","caller":"embed/serve.go:103","msg":"ready to serve client requests"}
{"level":"info","ts":"2025-05-21T23:40:33.243605Z","caller":"v3rpc/health.go:61","msg":"grpc service status changed","service":"","status":"SERVING"}
{"level":"info","ts":"2025-05-21T23:40:33.244495Z","caller":"embed/serve.go:250","msg":"serving client traffic securely","traffic":"grpc+http","address":"127.0.0.1:2379"}
{"level":"info","ts":"2025-05-21T23:40:33.239807Z","caller":"etcdserver/server.go:2140","msg":"published local member to cluster through raft","local-member-id":"aec36adc501070cc","local-member-attributes":"{Name:minikube ClientURLs:[https://192.168.49.2:2379]}","request-path":"/0/members/aec36adc501070cc/attributes","cluster-id":"fa54960ea34d58be","publish-timeout":"7s"}
{"level":"info","ts":"2025-05-21T23:40:33.249221Z","caller":"etcdmain/main.go:44","msg":"notifying init daemon"}
{"level":"info","ts":"2025-05-21T23:40:33.259599Z","caller":"etcdmain/main.go:50","msg":"successfully notified init daemon"}
{"level":"warn","ts":"2025-05-21T23:40:39.926245Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"121.789838ms","expected-duration":"100ms","prefix":"","request":"header:<ID:8128037407453366737 username:\"kube-apiserver-etcd-client\" auth_revision:1 > txn:<compare:<target:MOD key:\"/registry/pods/kube-system/kube-scheduler-minikube\" mod_revision:28880 > success:<request_put:<key:\"/registry/pods/kube-system/kube-scheduler-minikube\" value_size:4762 >> failure:<request_range:<key:\"/registry/pods/kube-system/kube-scheduler-minikube\" > >>","response":"size:18"}
{"level":"info","ts":"2025-05-21T23:40:39.926366Z","caller":"traceutil/trace.go:171","msg":"trace[439716681] linearizableReadLoop","detail":"{readStateIndex:50351; appliedIndex:50350; }","duration":"344.512656ms","start":"2025-05-21T23:40:39.581838Z","end":"2025-05-21T23:40:39.926350Z","steps":["trace[439716681] 'read index received'  (duration: 293.74601ms)","trace[439716681] 'applied index is now lower than readState.Index'  (duration: 50.765303ms)"],"step_count":2}
{"level":"info","ts":"2025-05-21T23:40:39.926707Z","caller":"traceutil/trace.go:171","msg":"trace[330158665] transaction","detail":"{read_only:false; response_revision:41726; number_of_response:1; }","duration":"379.594546ms","start":"2025-05-21T23:40:39.547087Z","end":"2025-05-21T23:40:39.926682Z","steps":["trace[330158665] 'process raft request'  (duration: 256.714592ms)","trace[330158665] 'compare'  (duration: 121.196049ms)"],"step_count":2}
{"level":"warn","ts":"2025-05-21T23:40:39.926829Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-05-21T23:40:39.547059Z","time spent":"379.695366ms","remote":"127.0.0.1:43584","response type":"/etcdserverpb.KV/Txn","request count":1,"request size":4820,"response count":0,"response size":42,"request content":"compare:<target:MOD key:\"/registry/pods/kube-system/kube-scheduler-minikube\" mod_revision:28880 > success:<request_put:<key:\"/registry/pods/kube-system/kube-scheduler-minikube\" value_size:4762 >> failure:<request_range:<key:\"/registry/pods/kube-system/kube-scheduler-minikube\" > >"}
{"level":"warn","ts":"2025-05-21T23:40:39.927209Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"345.348085ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/clusterroles/system:certificates.k8s.io:kubelet-serving-approver\" limit:1 ","response":"range_response_count:1 size:685"}
{"level":"info","ts":"2025-05-21T23:40:39.927274Z","caller":"traceutil/trace.go:171","msg":"trace[2139232639] range","detail":"{range_begin:/registry/clusterroles/system:certificates.k8s.io:kubelet-serving-approver; range_end:; response_count:1; response_revision:41726; }","duration":"345.449192ms","start":"2025-05-21T23:40:39.581802Z","end":"2025-05-21T23:40:39.927251Z","steps":["trace[2139232639] 'agreement among raft nodes before linearized reading'  (duration: 345.319978ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:39.927337Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-05-21T23:40:39.581782Z","time spent":"345.534375ms","remote":"127.0.0.1:43766","response type":"/etcdserverpb.KV/Range","request count":0,"request size":78,"response count":1,"response size":709,"request content":"key:\"/registry/clusterroles/system:certificates.k8s.io:kubelet-serving-approver\" limit:1 "}
{"level":"warn","ts":"2025-05-21T23:40:39.949456Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"222.951124ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/health\" ","response":"range_response_count:0 size:6"}
{"level":"info","ts":"2025-05-21T23:40:39.949529Z","caller":"traceutil/trace.go:171","msg":"trace[1687243573] range","detail":"{range_begin:/registry/health; range_end:; response_count:0; response_revision:41726; }","duration":"223.061633ms","start":"2025-05-21T23:40:39.726452Z","end":"2025-05-21T23:40:39.949513Z","steps":["trace[1687243573] 'agreement among raft nodes before linearized reading'  (duration: 222.952372ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:39.950075Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"262.684425ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/health\" ","response":"range_response_count:0 size:6"}
{"level":"info","ts":"2025-05-21T23:40:39.950123Z","caller":"traceutil/trace.go:171","msg":"trace[1884575860] range","detail":"{range_begin:/registry/health; range_end:; response_count:0; response_revision:41726; }","duration":"262.788218ms","start":"2025-05-21T23:40:39.687322Z","end":"2025-05-21T23:40:39.950110Z","steps":["trace[1884575860] 'agreement among raft nodes before linearized reading'  (duration: 262.70975ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:39.927677Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"255.018218ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/events/default/minikube.1841af410470bd51\" limit:1 ","response":"range_response_count:1 size:656"}
{"level":"info","ts":"2025-05-21T23:40:39.965199Z","caller":"traceutil/trace.go:171","msg":"trace[1807431942] range","detail":"{range_begin:/registry/events/default/minikube.1841af410470bd51; range_end:; response_count:1; response_revision:41726; }","duration":"292.576083ms","start":"2025-05-21T23:40:39.672593Z","end":"2025-05-21T23:40:39.965169Z","steps":["trace[1807431942] 'agreement among raft nodes before linearized reading'  (duration: 254.959798ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:40.331594Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"138.335443ms","expected-duration":"100ms","prefix":"","request":"header:<ID:8128037407453366742 username:\"kube-apiserver-etcd-client\" auth_revision:1 > txn:<compare:<target:MOD key:\"/registry/events/default/minikube.1841af410470bd51\" mod_revision:41722 > success:<request_put:<key:\"/registry/events/default/minikube.1841af410470bd51\" value_size:570 lease:8128037407453366647 >> failure:<request_range:<key:\"/registry/events/default/minikube.1841af410470bd51\" > >>","response":"size:18"}
{"level":"info","ts":"2025-05-21T23:40:40.331696Z","caller":"traceutil/trace.go:171","msg":"trace[316185434] linearizableReadLoop","detail":"{readStateIndex:50352; appliedIndex:50351; }","duration":"225.64399ms","start":"2025-05-21T23:40:40.106036Z","end":"2025-05-21T23:40:40.331680Z","steps":["trace[316185434] 'read index received'  (duration: 87.078994ms)","trace[316185434] 'applied index is now lower than readState.Index'  (duration: 138.563558ms)"],"step_count":2}
{"level":"info","ts":"2025-05-21T23:40:40.331793Z","caller":"traceutil/trace.go:171","msg":"trace[558054743] transaction","detail":"{read_only:false; response_revision:41727; number_of_response:1; }","duration":"298.296408ms","start":"2025-05-21T23:40:40.033481Z","end":"2025-05-21T23:40:40.331778Z","steps":["trace[558054743] 'process raft request'  (duration: 159.691889ms)","trace[558054743] 'compare'  (duration: 137.72717ms)"],"step_count":2}
{"level":"warn","ts":"2025-05-21T23:40:40.332055Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"226.00554ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/clusterroles/system:certificates.k8s.io:kube-apiserver-client-kubelet-approver\" limit:1 ","response":"range_response_count:1 size:727"}
{"level":"info","ts":"2025-05-21T23:40:40.332142Z","caller":"traceutil/trace.go:171","msg":"trace[1456673816] range","detail":"{range_begin:/registry/clusterroles/system:certificates.k8s.io:kube-apiserver-client-kubelet-approver; range_end:; response_count:1; response_revision:41727; }","duration":"226.133219ms","start":"2025-05-21T23:40:40.105994Z","end":"2025-05-21T23:40:40.332127Z","steps":["trace[1456673816] 'agreement among raft nodes before linearized reading'  (duration: 225.983285ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:40.332487Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"213.962945ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/pods/kube-system/kube-controller-manager-minikube\" limit:1 ","response":"range_response_count:1 size:7155"}
{"level":"info","ts":"2025-05-21T23:40:40.332544Z","caller":"traceutil/trace.go:171","msg":"trace[337116090] range","detail":"{range_begin:/registry/pods/kube-system/kube-controller-manager-minikube; range_end:; response_count:1; response_revision:41727; }","duration":"214.074124ms","start":"2025-05-21T23:40:40.118454Z","end":"2025-05-21T23:40:40.332528Z","steps":["trace[337116090] 'agreement among raft nodes before linearized reading'  (duration: 213.899825ms)"],"step_count":1}
{"level":"info","ts":"2025-05-21T23:40:40.702722Z","caller":"traceutil/trace.go:171","msg":"trace[112296296] transaction","detail":"{read_only:false; response_revision:41728; number_of_response:1; }","duration":"245.386175ms","start":"2025-05-21T23:40:40.457322Z","end":"2025-05-21T23:40:40.702708Z","steps":["trace[112296296] 'process raft request'  (duration: 153.291728ms)","trace[112296296] 'compare'  (duration: 91.87909ms)"],"step_count":2}
{"level":"info","ts":"2025-05-21T23:40:40.702658Z","caller":"traceutil/trace.go:171","msg":"trace[302309106] linearizableReadLoop","detail":"{readStateIndex:50353; appliedIndex:50352; }","duration":"243.034043ms","start":"2025-05-21T23:40:40.459603Z","end":"2025-05-21T23:40:40.702637Z","steps":["trace[302309106] 'read index received'  (duration: 151.022381ms)","trace[302309106] 'applied index is now lower than readState.Index'  (duration: 92.010511ms)"],"step_count":2}
{"level":"warn","ts":"2025-05-21T23:40:40.705235Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"245.542057ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/clusterroles/system:kube-scheduler\" limit:1 ","response":"range_response_count:1 size:1559"}
{"level":"info","ts":"2025-05-21T23:40:40.705321Z","caller":"traceutil/trace.go:171","msg":"trace[325862278] range","detail":"{range_begin:/registry/clusterroles/system:kube-scheduler; range_end:; response_count:1; response_revision:41728; }","duration":"245.739954ms","start":"2025-05-21T23:40:40.459565Z","end":"2025-05-21T23:40:40.705305Z","steps":["trace[325862278] 'agreement among raft nodes before linearized reading'  (duration: 245.469823ms)"],"step_count":1}
{"level":"info","ts":"2025-05-21T23:40:40.790057Z","caller":"traceutil/trace.go:171","msg":"trace[1866794265] transaction","detail":"{read_only:false; response_revision:41729; number_of_response:1; }","duration":"243.413242ms","start":"2025-05-21T23:40:40.546620Z","end":"2025-05-21T23:40:40.790033Z","steps":["trace[1866794265] 'process raft request'  (duration: 243.144838ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:40.804329Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"114.200276ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/health\" ","response":"range_response_count:0 size:6"}
{"level":"info","ts":"2025-05-21T23:40:40.804430Z","caller":"traceutil/trace.go:171","msg":"trace[1182117892] range","detail":"{range_begin:/registry/health; range_end:; response_count:0; response_revision:41729; }","duration":"114.338603ms","start":"2025-05-21T23:40:40.690070Z","end":"2025-05-21T23:40:40.804408Z","steps":["trace[1182117892] 'agreement among raft nodes before linearized reading'  (duration: 114.178404ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:41.286476Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"520.954187ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/health\" ","response":"range_response_count:0 size:6"}
{"level":"info","ts":"2025-05-21T23:40:41.286550Z","caller":"traceutil/trace.go:171","msg":"trace[936212489] range","detail":"{range_begin:/registry/health; range_end:; response_count:0; response_revision:41729; }","duration":"521.069589ms","start":"2025-05-21T23:40:40.765462Z","end":"2025-05-21T23:40:41.286532Z","steps":["trace[936212489] 'agreement among raft nodes before linearized reading'  (duration: 39.97638ms)","trace[936212489] 'range keys from in-memory index tree'  (duration: 480.994211ms)"],"step_count":2}
{"level":"warn","ts":"2025-05-21T23:40:41.286592Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-05-21T23:40:40.765436Z","time spent":"521.144987ms","remote":"127.0.0.1:43410","response type":"/etcdserverpb.KV/Range","request count":0,"request size":18,"response count":0,"response size":30,"request content":"key:\"/registry/health\" "}
{"level":"warn","ts":"2025-05-21T23:40:41.286808Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"551.819314ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/clusterroles/system:controller:attachdetach-controller\" limit:1 ","response":"range_response_count:1 size:953"}
{"level":"info","ts":"2025-05-21T23:40:41.286853Z","caller":"traceutil/trace.go:171","msg":"trace[991805781] range","detail":"{range_begin:/registry/clusterroles/system:controller:attachdetach-controller; range_end:; response_count:1; response_revision:41729; }","duration":"551.940566ms","start":"2025-05-21T23:40:40.734896Z","end":"2025-05-21T23:40:41.286837Z","steps":["trace[991805781] 'agreement among raft nodes before linearized reading'  (duration: 70.555355ms)","trace[991805781] 'range keys from in-memory index tree'  (duration: 481.31269ms)"],"step_count":2}
{"level":"warn","ts":"2025-05-21T23:40:41.286892Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-05-21T23:40:40.734881Z","time spent":"551.999082ms","remote":"127.0.0.1:43766","response type":"/etcdserverpb.KV/Range","request count":0,"request size":68,"response count":1,"response size":977,"request content":"key:\"/registry/clusterroles/system:controller:attachdetach-controller\" limit:1 "}
{"level":"warn","ts":"2025-05-21T23:40:41.300557Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"136.010074ms","expected-duration":"100ms","prefix":"","request":"header:<ID:8128037407453366754 username:\"kube-apiserver-etcd-client\" auth_revision:1 > txn:<compare:<target:MOD key:\"/registry/events/default/minikube.1841af4104709651\" mod_revision:41725 > success:<request_put:<key:\"/registry/events/default/minikube.1841af4104709651\" value_size:574 lease:8128037407453366647 >> failure:<request_range:<key:\"/registry/events/default/minikube.1841af4104709651\" > >>","response":"size:18"}
{"level":"info","ts":"2025-05-21T23:40:41.300672Z","caller":"traceutil/trace.go:171","msg":"trace[646201839] linearizableReadLoop","detail":"{readStateIndex:50355; appliedIndex:50354; }","duration":"442.040798ms","start":"2025-05-21T23:40:40.858598Z","end":"2025-05-21T23:40:41.300639Z","steps":["trace[646201839] 'read index received'  (duration: 305.761841ms)","trace[646201839] 'applied index is now lower than readState.Index'  (duration: 136.277135ms)"],"step_count":2}
{"level":"info","ts":"2025-05-21T23:40:41.300864Z","caller":"traceutil/trace.go:171","msg":"trace[433229322] transaction","detail":"{read_only:false; response_revision:41730; number_of_response:1; }","duration":"458.738544ms","start":"2025-05-21T23:40:40.842109Z","end":"2025-05-21T23:40:41.300848Z","steps":["trace[433229322] 'process raft request'  (duration: 322.344569ms)","trace[433229322] 'compare'  (duration: 135.486025ms)"],"step_count":2}
{"level":"warn","ts":"2025-05-21T23:40:41.300968Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-05-21T23:40:40.842033Z","time spent":"458.871403ms","remote":"127.0.0.1:43484","response type":"/etcdserverpb.KV/Txn","request count":1,"request size":642,"response count":0,"response size":42,"request content":"compare:<target:MOD key:\"/registry/events/default/minikube.1841af4104709651\" mod_revision:41725 > success:<request_put:<key:\"/registry/events/default/minikube.1841af4104709651\" value_size:574 lease:8128037407453366647 >> failure:<request_range:<key:\"/registry/events/default/minikube.1841af4104709651\" > >"}
{"level":"warn","ts":"2025-05-21T23:40:41.301377Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"442.777998ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/pods/ingress-nginx/ingress-nginx-admission-create-k6d5z\" limit:1 ","response":"range_response_count:1 size:4308"}
{"level":"info","ts":"2025-05-21T23:40:41.301436Z","caller":"traceutil/trace.go:171","msg":"trace[244468251] range","detail":"{range_begin:/registry/pods/ingress-nginx/ingress-nginx-admission-create-k6d5z; range_end:; response_count:1; response_revision:41730; }","duration":"442.908171ms","start":"2025-05-21T23:40:40.858511Z","end":"2025-05-21T23:40:41.301420Z","steps":["trace[244468251] 'agreement among raft nodes before linearized reading'  (duration: 442.658377ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:41.301490Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-05-21T23:40:40.846927Z","time spent":"454.541349ms","remote":"127.0.0.1:43584","response type":"/etcdserverpb.KV/Range","request count":0,"request size":69,"response count":1,"response size":4332,"request content":"key:\"/registry/pods/ingress-nginx/ingress-nginx-admission-create-k6d5z\" limit:1 "}
{"level":"warn","ts":"2025-05-21T23:40:41.301906Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"137.129735ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/serviceaccounts/kube-system/storage-provisioner\" limit:1 ","response":"range_response_count:1 size:722"}
{"level":"info","ts":"2025-05-21T23:40:41.301958Z","caller":"traceutil/trace.go:171","msg":"trace[851656275] range","detail":"{range_begin:/registry/serviceaccounts/kube-system/storage-provisioner; range_end:; response_count:1; response_revision:41730; }","duration":"137.222017ms","start":"2025-05-21T23:40:41.164720Z","end":"2025-05-21T23:40:41.301942Z","steps":["trace[851656275] 'agreement among raft nodes before linearized reading'  (duration: 136.990737ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:41.559020Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"166.560079ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/clusterroles/system:controller:daemon-set-controller\" limit:1 ","response":"range_response_count:1 size:961"}
{"level":"info","ts":"2025-05-21T23:40:41.559900Z","caller":"traceutil/trace.go:171","msg":"trace[667526611] range","detail":"{range_begin:/registry/clusterroles/system:controller:daemon-set-controller; range_end:; response_count:1; response_revision:41730; }","duration":"167.440307ms","start":"2025-05-21T23:40:41.392268Z","end":"2025-05-21T23:40:41.559708Z","steps":["trace[667526611] 'range keys from in-memory index tree'  (duration: 166.320933ms)"],"step_count":1}
{"level":"info","ts":"2025-05-21T23:40:41.620111Z","caller":"traceutil/trace.go:171","msg":"trace[1381782827] transaction","detail":"{read_only:false; response_revision:41731; number_of_response:1; }","duration":"227.647716ms","start":"2025-05-21T23:40:41.392429Z","end":"2025-05-21T23:40:41.620076Z","steps":["trace[1381782827] 'process raft request'  (duration: 227.425357ms)"],"step_count":1}
{"level":"info","ts":"2025-05-21T23:40:41.620600Z","caller":"traceutil/trace.go:171","msg":"trace[1576247927] linearizableReadLoop","detail":"{readStateIndex:50356; appliedIndex:50355; }","duration":"228.128886ms","start":"2025-05-21T23:40:41.392454Z","end":"2025-05-21T23:40:41.620583Z","steps":["trace[1576247927] 'read index received'  (duration: 68.971µs)","trace[1576247927] 'applied index is now lower than readState.Index'  (duration: 228.058284ms)"],"step_count":2}
{"level":"warn","ts":"2025-05-21T23:40:41.620914Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"228.46444ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/pods/ingress-nginx/ingress-nginx-controller-56d7c84fd4-m77km\" limit:1 ","response":"range_response_count:1 size:6194"}
{"level":"info","ts":"2025-05-21T23:40:41.621026Z","caller":"traceutil/trace.go:171","msg":"trace[284172970] range","detail":"{range_begin:/registry/pods/ingress-nginx/ingress-nginx-controller-56d7c84fd4-m77km; range_end:; response_count:1; response_revision:41731; }","duration":"228.614566ms","start":"2025-05-21T23:40:41.392390Z","end":"2025-05-21T23:40:41.621005Z","steps":["trace[284172970] 'agreement among raft nodes before linearized reading'  (duration: 228.292922ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:42.018128Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"331.946107ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/clusterroles/system:controller:disruption-controller\" limit:1 ","response":"range_response_count:1 size:975"}
{"level":"info","ts":"2025-05-21T23:40:42.018221Z","caller":"traceutil/trace.go:171","msg":"trace[915455112] range","detail":"{range_begin:/registry/clusterroles/system:controller:disruption-controller; range_end:; response_count:1; response_revision:41731; }","duration":"332.109855ms","start":"2025-05-21T23:40:41.686090Z","end":"2025-05-21T23:40:42.018200Z","steps":["trace[915455112] 'range keys from in-memory index tree'  (duration: 331.787252ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:42.018294Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-05-21T23:40:41.686056Z","time spent":"332.206357ms","remote":"127.0.0.1:43766","response type":"/etcdserverpb.KV/Range","request count":0,"request size":66,"response count":1,"response size":999,"request content":"key:\"/registry/clusterroles/system:controller:disruption-controller\" limit:1 "}
{"level":"warn","ts":"2025-05-21T23:40:42.018667Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"169.074138ms","expected-duration":"100ms","prefix":"","request":"header:<ID:8128037407453366766 username:\"kube-apiserver-etcd-client\" auth_revision:1 > txn:<compare:<target:MOD key:\"/registry/events/default/minikube.1841af410470d431\" mod_revision:41728 > success:<request_put:<key:\"/registry/events/default/minikube.1841af410470d431\" value_size:568 lease:8128037407453366647 >> failure:<request_range:<key:\"/registry/events/default/minikube.1841af410470d431\" > >>","response":"size:18"}
{"level":"info","ts":"2025-05-21T23:40:42.018853Z","caller":"traceutil/trace.go:171","msg":"trace[89989651] transaction","detail":"{read_only:false; response_revision:41732; number_of_response:1; }","duration":"290.154594ms","start":"2025-05-21T23:40:41.728676Z","end":"2025-05-21T23:40:42.018831Z","steps":["trace[89989651] 'process raft request'  (duration: 120.856947ms)","trace[89989651] 'compare'  (duration: 168.373677ms)"],"step_count":2}
{"level":"info","ts":"2025-05-21T23:40:42.203645Z","caller":"traceutil/trace.go:171","msg":"trace[66270235] linearizableReadLoop","detail":"{readStateIndex:50358; appliedIndex:50356; }","duration":"474.026066ms","start":"2025-05-21T23:40:41.729584Z","end":"2025-05-21T23:40:42.203610Z","steps":["trace[66270235] 'read index received'  (duration: 119.780837ms)","trace[66270235] 'applied index is now lower than readState.Index'  (duration: 354.241296ms)"],"step_count":2}
{"level":"info","ts":"2025-05-21T23:40:42.204181Z","caller":"traceutil/trace.go:171","msg":"trace[1490463941] transaction","detail":"{read_only:false; response_revision:41733; number_of_response:1; }","duration":"474.784466ms","start":"2025-05-21T23:40:41.729369Z","end":"2025-05-21T23:40:42.204154Z","steps":["trace[1490463941] 'process raft request'  (duration: 412.380038ms)","trace[1490463941] 'compare'  (duration: 61.505687ms)"],"step_count":2}
{"level":"warn","ts":"2025-05-21T23:40:42.204314Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-05-21T23:40:41.729343Z","time spent":"474.886724ms","remote":"127.0.0.1:43584","response type":"/etcdserverpb.KV/Txn","request count":1,"request size":6243,"response count":0,"response size":42,"request content":"compare:<target:MOD key:\"/registry/pods/ingress-nginx/ingress-nginx-controller-56d7c84fd4-m77km\" mod_revision:28997 > success:<request_put:<key:\"/registry/pods/ingress-nginx/ingress-nginx-controller-56d7c84fd4-m77km\" value_size:6165 >> failure:<request_range:<key:\"/registry/pods/ingress-nginx/ingress-nginx-controller-56d7c84fd4-m77km\" > >"}
{"level":"warn","ts":"2025-05-21T23:40:42.204587Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"474.980924ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/health\" ","response":"range_response_count:0 size:6"}
{"level":"info","ts":"2025-05-21T23:40:42.204643Z","caller":"traceutil/trace.go:171","msg":"trace[778501046] range","detail":"{range_begin:/registry/health; range_end:; response_count:0; response_revision:41733; }","duration":"475.070041ms","start":"2025-05-21T23:40:41.729557Z","end":"2025-05-21T23:40:42.204628Z","steps":["trace[778501046] 'agreement among raft nodes before linearized reading'  (duration: 474.965768ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:42.204685Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-05-21T23:40:41.729546Z","time spent":"475.127596ms","remote":"127.0.0.1:43402","response type":"/etcdserverpb.KV/Range","request count":0,"request size":18,"response count":0,"response size":30,"request content":"key:\"/registry/health\" "}
{"level":"warn","ts":"2025-05-21T23:40:42.204960Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"386.367001ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/health\" ","response":"range_response_count:0 size:6"}
{"level":"info","ts":"2025-05-21T23:40:42.205030Z","caller":"traceutil/trace.go:171","msg":"trace[459975941] range","detail":"{range_begin:/registry/health; range_end:; response_count:0; response_revision:41733; }","duration":"386.540246ms","start":"2025-05-21T23:40:41.818454Z","end":"2025-05-21T23:40:42.204994Z","steps":["trace[459975941] 'agreement among raft nodes before linearized reading'  (duration: 386.463216ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:42.205084Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-05-21T23:40:41.818428Z","time spent":"386.634349ms","remote":"127.0.0.1:43410","response type":"/etcdserverpb.KV/Range","request count":0,"request size":18,"response count":0,"response size":30,"request content":"key:\"/registry/health\" "}
{"level":"warn","ts":"2025-05-21T23:40:42.205481Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"125.403797ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/events/default/minikube.1841af4104709651\" limit:1 ","response":"range_response_count:1 size:660"}
{"level":"info","ts":"2025-05-21T23:40:42.205562Z","caller":"traceutil/trace.go:171","msg":"trace[263529496] range","detail":"{range_begin:/registry/events/default/minikube.1841af4104709651; range_end:; response_count:1; response_revision:41733; }","duration":"125.497613ms","start":"2025-05-21T23:40:42.080022Z","end":"2025-05-21T23:40:42.205519Z","steps":["trace[263529496] 'agreement among raft nodes before linearized reading'  (duration: 125.392189ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:42.205789Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"140.882692ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/clusterroles/system:controller:endpoint-controller\" limit:1 ","response":"range_response_count:1 size:757"}
{"level":"info","ts":"2025-05-21T23:40:42.205893Z","caller":"traceutil/trace.go:171","msg":"trace[768505018] range","detail":"{range_begin:/registry/clusterroles/system:controller:endpoint-controller; range_end:; response_count:1; response_revision:41733; }","duration":"141.021307ms","start":"2025-05-21T23:40:42.064857Z","end":"2025-05-21T23:40:42.205878Z","steps":["trace[768505018] 'agreement among raft nodes before linearized reading'  (duration: 140.878088ms)"],"step_count":1}
{"level":"info","ts":"2025-05-21T23:40:42.465637Z","caller":"traceutil/trace.go:171","msg":"trace[567851121] linearizableReadLoop","detail":"{readStateIndex:50359; appliedIndex:50358; }","duration":"212.528163ms","start":"2025-05-21T23:40:42.253087Z","end":"2025-05-21T23:40:42.465615Z","steps":["trace[567851121] 'read index received'  (duration: 148.789676ms)","trace[567851121] 'applied index is now lower than readState.Index'  (duration: 63.737528ms)"],"step_count":2}
{"level":"info","ts":"2025-05-21T23:40:42.465829Z","caller":"traceutil/trace.go:171","msg":"trace[1579213589] transaction","detail":"{read_only:false; response_revision:41734; number_of_response:1; }","duration":"231.520582ms","start":"2025-05-21T23:40:42.234288Z","end":"2025-05-21T23:40:42.465808Z","steps":["trace[1579213589] 'process raft request'  (duration: 167.648469ms)","trace[1579213589] 'compare'  (duration: 63.497614ms)"],"step_count":2}
{"level":"warn","ts":"2025-05-21T23:40:42.466286Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"213.176151ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/clusterroles/system:controller:endpointslice-controller\" limit:1 ","response":"range_response_count:1 size:794"}
{"level":"info","ts":"2025-05-21T23:40:42.466341Z","caller":"traceutil/trace.go:171","msg":"trace[220416595] range","detail":"{range_begin:/registry/clusterroles/system:controller:endpointslice-controller; range_end:; response_count:1; response_revision:41734; }","duration":"213.287139ms","start":"2025-05-21T23:40:42.253039Z","end":"2025-05-21T23:40:42.466326Z","steps":["trace[220416595] 'agreement among raft nodes before linearized reading'  (duration: 213.074469ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:42.466610Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"155.488268ms","expected-duration":"100ms","prefix":"read-only range ","request":"limit:1 keys_only:true ","response":"range_response_count:0 size:6"}
{"level":"info","ts":"2025-05-21T23:40:42.466657Z","caller":"traceutil/trace.go:171","msg":"trace[848354535] range","detail":"{range_begin:; range_end:; response_count:0; response_revision:41734; }","duration":"155.542562ms","start":"2025-05-21T23:40:42.311100Z","end":"2025-05-21T23:40:42.466642Z","steps":["trace[848354535] 'agreement among raft nodes before linearized reading'  (duration: 155.468794ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:42.467214Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"152.690362ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/pods/kube-system/kube-apiserver-minikube\" limit:1 ","response":"range_response_count:1 size:7555"}
{"level":"info","ts":"2025-05-21T23:40:42.467288Z","caller":"traceutil/trace.go:171","msg":"trace[323420767] range","detail":"{range_begin:/registry/pods/kube-system/kube-apiserver-minikube; range_end:; response_count:1; response_revision:41734; }","duration":"152.81804ms","start":"2025-05-21T23:40:42.314437Z","end":"2025-05-21T23:40:42.467255Z","steps":["trace[323420767] 'agreement among raft nodes before linearized reading'  (duration: 152.606425ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:43.017740Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"113.987126ms","expected-duration":"100ms","prefix":"","request":"header:<ID:8128037407453366775 username:\"kube-apiserver-etcd-client\" auth_revision:1 > txn:<compare:<target:MOD key:\"/registry/pods/kube-system/kube-apiserver-minikube\" mod_revision:28920 > success:<request_put:<key:\"/registry/pods/kube-system/kube-apiserver-minikube\" value_size:7669 >> failure:<request_range:<key:\"/registry/pods/kube-system/kube-apiserver-minikube\" > >>","response":"size:18"}
{"level":"info","ts":"2025-05-21T23:40:43.029625Z","caller":"traceutil/trace.go:171","msg":"trace[1066455991] transaction","detail":"{read_only:false; response_revision:41735; number_of_response:1; }","duration":"347.855716ms","start":"2025-05-21T23:40:42.681725Z","end":"2025-05-21T23:40:43.029581Z","steps":["trace[1066455991] 'process raft request'  (duration: 221.897078ms)","trace[1066455991] 'compare'  (duration: 113.678048ms)"],"step_count":2}
{"level":"warn","ts":"2025-05-21T23:40:43.029780Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-05-21T23:40:42.681675Z","time spent":"348.021957ms","remote":"127.0.0.1:43584","response type":"/etcdserverpb.KV/Txn","request count":1,"request size":7727,"response count":0,"response size":42,"request content":"compare:<target:MOD key:\"/registry/pods/kube-system/kube-apiserver-minikube\" mod_revision:28920 > success:<request_put:<key:\"/registry/pods/kube-system/kube-apiserver-minikube\" value_size:7669 >> failure:<request_range:<key:\"/registry/pods/kube-system/kube-apiserver-minikube\" > >"}
{"level":"warn","ts":"2025-05-21T23:40:43.041716Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"347.982339ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/clusterroles/system:controller:expand-controller\" limit:1 ","response":"range_response_count:1 size:802"}
{"level":"info","ts":"2025-05-21T23:40:43.041794Z","caller":"traceutil/trace.go:171","msg":"trace[1465361193] range","detail":"{range_begin:/registry/clusterroles/system:controller:expand-controller; range_end:; response_count:1; response_revision:41735; }","duration":"348.107812ms","start":"2025-05-21T23:40:42.693665Z","end":"2025-05-21T23:40:43.041773Z","steps":["trace[1465361193] 'agreement among raft nodes before linearized reading'  (duration: 347.925647ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:43.041843Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-05-21T23:40:42.693644Z","time spent":"348.185609ms","remote":"127.0.0.1:43766","response type":"/etcdserverpb.KV/Range","request count":0,"request size":62,"response count":1,"response size":826,"request content":"key:\"/registry/clusterroles/system:controller:expand-controller\" limit:1 "}
{"level":"info","ts":"2025-05-21T23:40:43.042813Z","caller":"traceutil/trace.go:171","msg":"trace[1756615475] transaction","detail":"{read_only:false; response_revision:41736; number_of_response:1; }","duration":"348.857291ms","start":"2025-05-21T23:40:42.693911Z","end":"2025-05-21T23:40:43.042769Z","steps":["trace[1756615475] 'process raft request'  (duration: 348.735559ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:43.042991Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-05-21T23:40:42.693891Z","time spent":"348.993604ms","remote":"127.0.0.1:43484","response type":"/etcdserverpb.KV/Txn","request count":1,"request size":638,"response count":0,"response size":42,"request content":"compare:<target:MOD key:\"/registry/events/default/minikube.1841af410470bd51\" mod_revision:41731 > success:<request_put:<key:\"/registry/events/default/minikube.1841af410470bd51\" value_size:570 lease:8128037407453366647 >> failure:<request_range:<key:\"/registry/events/default/minikube.1841af410470bd51\" > >"}
{"level":"info","ts":"2025-05-21T23:40:43.017884Z","caller":"traceutil/trace.go:171","msg":"trace[492743873] linearizableReadLoop","detail":"{readStateIndex:50360; appliedIndex:50359; }","duration":"324.159031ms","start":"2025-05-21T23:40:42.693703Z","end":"2025-05-21T23:40:43.017862Z","steps":["trace[492743873] 'read index received'  (duration: 209.947915ms)","trace[492743873] 'applied index is now lower than readState.Index'  (duration: 114.20891ms)"],"step_count":2}
{"level":"warn","ts":"2025-05-21T23:40:43.043757Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"307.749355ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/health\" ","response":"range_response_count:0 size:6"}
{"level":"info","ts":"2025-05-21T23:40:43.043805Z","caller":"traceutil/trace.go:171","msg":"trace[1224183382] range","detail":"{range_begin:/registry/health; range_end:; response_count:0; response_revision:41736; }","duration":"307.851805ms","start":"2025-05-21T23:40:42.735939Z","end":"2025-05-21T23:40:43.043790Z","steps":["trace[1224183382] 'agreement among raft nodes before linearized reading'  (duration: 307.733814ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:43.043866Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-05-21T23:40:42.735921Z","time spent":"307.93459ms","remote":"127.0.0.1:43402","response type":"/etcdserverpb.KV/Range","request count":0,"request size":18,"response count":0,"response size":30,"request content":"key:\"/registry/health\" "}
{"level":"warn","ts":"2025-05-21T23:40:43.044129Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"167.913132ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/health\" ","response":"range_response_count:0 size:6"}
{"level":"info","ts":"2025-05-21T23:40:43.044186Z","caller":"traceutil/trace.go:171","msg":"trace[1224854134] range","detail":"{range_begin:/registry/health; range_end:; response_count:0; response_revision:41736; }","duration":"168.000713ms","start":"2025-05-21T23:40:42.876174Z","end":"2025-05-21T23:40:43.044175Z","steps":["trace[1224854134] 'agreement among raft nodes before linearized reading'  (duration: 167.923684ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:43.309518Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"112.255257ms","expected-duration":"100ms","prefix":"read-only range ","request":"limit:1 serializable:true keys_only:true ","response":"range_response_count:0 size:6"}
{"level":"info","ts":"2025-05-21T23:40:43.309605Z","caller":"traceutil/trace.go:171","msg":"trace[308566788] range","detail":"{range_begin:; range_end:; response_count:0; response_revision:41736; }","duration":"112.362792ms","start":"2025-05-21T23:40:43.197223Z","end":"2025-05-21T23:40:43.309586Z","steps":["trace[308566788] 'range keys from in-memory index tree'  (duration: 112.236456ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:43.309996Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"195.473281ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/events/default/minikube.1841af410470d431\" limit:1 ","response":"range_response_count:1 size:654"}
{"level":"info","ts":"2025-05-21T23:40:43.310057Z","caller":"traceutil/trace.go:171","msg":"trace[1121735913] range","detail":"{range_begin:/registry/events/default/minikube.1841af410470d431; range_end:; response_count:1; response_revision:41736; }","duration":"195.870707ms","start":"2025-05-21T23:40:43.114170Z","end":"2025-05-21T23:40:43.310041Z","steps":["trace[1121735913] 'agreement among raft nodes before linearized reading'  (duration: 27.487436ms)","trace[1121735913] 'range keys from in-memory index tree'  (duration: 168.040523ms)"],"step_count":2}
{"level":"warn","ts":"2025-05-21T23:40:43.310398Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"195.495152ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/pods/kube-system/kube-proxy-sx592\" limit:1 ","response":"range_response_count:1 size:4941"}
{"level":"info","ts":"2025-05-21T23:40:43.310439Z","caller":"traceutil/trace.go:171","msg":"trace[498373452] range","detail":"{range_begin:/registry/pods/kube-system/kube-proxy-sx592; range_end:; response_count:1; response_revision:41736; }","duration":"195.577938ms","start":"2025-05-21T23:40:43.114848Z","end":"2025-05-21T23:40:43.310426Z","steps":["trace[498373452] 'agreement among raft nodes before linearized reading'  (duration: 26.911778ms)","trace[498373452] 'range keys from in-memory index tree'  (duration: 168.582895ms)"],"step_count":2}
{"level":"warn","ts":"2025-05-21T23:40:43.310718Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"128.757312ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/clusterroles/system:controller:horizontal-pod-autoscaler\" limit:1 ","response":"range_response_count:1 size:915"}
{"level":"info","ts":"2025-05-21T23:40:43.310770Z","caller":"traceutil/trace.go:171","msg":"trace[16070406] range","detail":"{range_begin:/registry/clusterroles/system:controller:horizontal-pod-autoscaler; range_end:; response_count:1; response_revision:41736; }","duration":"128.847867ms","start":"2025-05-21T23:40:43.181906Z","end":"2025-05-21T23:40:43.310754Z","steps":["trace[16070406] 'range keys from in-memory index tree'  (duration: 128.584068ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:43.945138Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"492.0077ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/clusterroles/system:controller:namespace-controller\" limit:1 ","response":"range_response_count:1 size:726"}
{"level":"info","ts":"2025-05-21T23:40:43.945315Z","caller":"traceutil/trace.go:171","msg":"trace[564177069] range","detail":"{range_begin:/registry/clusterroles/system:controller:namespace-controller; range_end:; response_count:1; response_revision:41737; }","duration":"492.139504ms","start":"2025-05-21T23:40:43.453062Z","end":"2025-05-21T23:40:43.945202Z","steps":["trace[564177069] 'range keys from in-memory index tree'  (duration: 491.888271ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:43.945396Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-05-21T23:40:43.453031Z","time spent":"492.33721ms","remote":"127.0.0.1:43766","response type":"/etcdserverpb.KV/Range","request count":0,"request size":65,"response count":1,"response size":750,"request content":"key:\"/registry/clusterroles/system:controller:namespace-controller\" limit:1 "}
{"level":"warn","ts":"2025-05-21T23:40:43.945789Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"477.586016ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/events/default/minikube.1841af4104709651\" limit:1 ","response":"range_response_count:1 size:660"}
{"level":"info","ts":"2025-05-21T23:40:43.945875Z","caller":"traceutil/trace.go:171","msg":"trace[2007637646] range","detail":"{range_begin:/registry/events/default/minikube.1841af4104709651; range_end:; response_count:1; response_revision:41737; }","duration":"477.7136ms","start":"2025-05-21T23:40:43.468144Z","end":"2025-05-21T23:40:43.945858Z","steps":["trace[2007637646] 'range keys from in-memory index tree'  (duration: 477.392628ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:43.945941Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-05-21T23:40:43.468095Z","time spent":"477.822669ms","remote":"127.0.0.1:43484","response type":"/etcdserverpb.KV/Range","request count":0,"request size":54,"response count":1,"response size":684,"request content":"key:\"/registry/events/default/minikube.1841af4104709651\" limit:1 "}
{"level":"info","ts":"2025-05-21T23:40:43.947118Z","caller":"traceutil/trace.go:171","msg":"trace[1416400193] transaction","detail":"{read_only:false; response_revision:41738; number_of_response:1; }","duration":"476.512113ms","start":"2025-05-21T23:40:43.470585Z","end":"2025-05-21T23:40:43.947097Z","steps":["trace[1416400193] 'process raft request'  (duration: 476.314119ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:43.947295Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-05-21T23:40:43.470558Z","time spent":"476.659649ms","remote":"127.0.0.1:43584","response type":"/etcdserverpb.KV/Txn","request count":1,"request size":5097,"response count":0,"response size":42,"request content":"compare:<target:MOD key:\"/registry/pods/kube-system/kube-proxy-sx592\" mod_revision:28830 > success:<request_put:<key:\"/registry/pods/kube-system/kube-proxy-sx592\" value_size:5046 >> failure:<request_range:<key:\"/registry/pods/kube-system/kube-proxy-sx592\" > >"}
{"level":"info","ts":"2025-05-21T23:40:44.110125Z","caller":"traceutil/trace.go:171","msg":"trace[721149435] linearizableReadLoop","detail":"{readStateIndex:50364; appliedIndex:50363; }","duration":"343.311648ms","start":"2025-05-21T23:40:43.766787Z","end":"2025-05-21T23:40:44.110099Z","steps":["trace[721149435] 'read index received'  (duration: 181.386383ms)","trace[721149435] 'applied index is now lower than readState.Index'  (duration: 161.923922ms)"],"step_count":2}
{"level":"info","ts":"2025-05-21T23:40:44.110522Z","caller":"traceutil/trace.go:171","msg":"trace[325209007] transaction","detail":"{read_only:false; response_revision:41739; number_of_response:1; }","duration":"562.623586ms","start":"2025-05-21T23:40:43.547876Z","end":"2025-05-21T23:40:44.110500Z","steps":["trace[325209007] 'process raft request'  (duration: 543.455141ms)","trace[325209007] 'compare'  (duration: 18.301551ms)"],"step_count":2}
{"level":"warn","ts":"2025-05-21T23:40:44.110661Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-05-21T23:40:43.547689Z","time spent":"562.88067ms","remote":"127.0.0.1:43996","response type":"/etcdserverpb.KV/Txn","request count":1,"request size":2431,"response count":0,"response size":42,"request content":"compare:<target:MOD key:\"/registry/apiregistration.k8s.io/apiservices/v1beta1.metrics.k8s.io\" mod_revision:28932 > success:<request_put:<key:\"/registry/apiregistration.k8s.io/apiservices/v1beta1.metrics.k8s.io\" value_size:2356 >> failure:<request_range:<key:\"/registry/apiregistration.k8s.io/apiservices/v1beta1.metrics.k8s.io\" > >"}
{"level":"warn","ts":"2025-05-21T23:40:44.110949Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"344.151682ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/health\" ","response":"range_response_count:0 size:6"}
{"level":"info","ts":"2025-05-21T23:40:44.111034Z","caller":"traceutil/trace.go:171","msg":"trace[1596505002] range","detail":"{range_begin:/registry/health; range_end:; response_count:0; response_revision:41739; }","duration":"344.271495ms","start":"2025-05-21T23:40:43.766741Z","end":"2025-05-21T23:40:44.111013Z","steps":["trace[1596505002] 'agreement among raft nodes before linearized reading'  (duration: 344.159164ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:44.111088Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-05-21T23:40:43.766722Z","time spent":"344.350251ms","remote":"127.0.0.1:43402","response type":"/etcdserverpb.KV/Range","request count":0,"request size":18,"response count":0,"response size":30,"request content":"key:\"/registry/health\" "}
{"level":"info","ts":"2025-05-21T23:40:44.317954Z","caller":"traceutil/trace.go:171","msg":"trace[250650183] linearizableReadLoop","detail":"{readStateIndex:50365; appliedIndex:50364; }","duration":"207.73574ms","start":"2025-05-21T23:40:44.110195Z","end":"2025-05-21T23:40:44.317931Z","steps":["trace[250650183] 'read index received'  (duration: 113.852924ms)","trace[250650183] 'applied index is now lower than readState.Index'  (duration: 93.880706ms)"],"step_count":2}
{"level":"warn","ts":"2025-05-21T23:40:44.318135Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"349.45108ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/pods/kube-system/coredns-668d6bf9bc-fjbsf\" limit:1 ","response":"range_response_count:1 size:5274"}
{"level":"info","ts":"2025-05-21T23:40:44.318186Z","caller":"traceutil/trace.go:171","msg":"trace[794260326] range","detail":"{range_begin:/registry/pods/kube-system/coredns-668d6bf9bc-fjbsf; range_end:; response_count:1; response_revision:41740; }","duration":"349.551516ms","start":"2025-05-21T23:40:43.968621Z","end":"2025-05-21T23:40:44.318173Z","steps":["trace[794260326] 'agreement among raft nodes before linearized reading'  (duration: 349.317358ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:44.318234Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"434.94507ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/clusterrolebindings/storage-provisioner\" limit:1 ","response":"range_response_count:1 size:1146"}
{"level":"info","ts":"2025-05-21T23:40:44.318272Z","caller":"traceutil/trace.go:171","msg":"trace[366261571] range","detail":"{range_begin:/registry/clusterrolebindings/storage-provisioner; range_end:; response_count:1; response_revision:41740; }","duration":"435.016343ms","start":"2025-05-21T23:40:43.883246Z","end":"2025-05-21T23:40:44.318262Z","steps":["trace[366261571] 'agreement among raft nodes before linearized reading'  (duration: 434.916483ms)"],"step_count":1}
{"level":"info","ts":"2025-05-21T23:40:44.318275Z","caller":"traceutil/trace.go:171","msg":"trace[1857189648] transaction","detail":"{read_only:false; response_revision:41740; number_of_response:1; }","duration":"366.42241ms","start":"2025-05-21T23:40:43.951842Z","end":"2025-05-21T23:40:44.318265Z","steps":["trace[1857189648] 'process raft request'  (duration: 272.266201ms)","trace[1857189648] 'compare'  (duration: 93.616619ms)"],"step_count":2}
{"level":"warn","ts":"2025-05-21T23:40:44.318317Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-05-21T23:40:43.883173Z","time spent":"435.123014ms","remote":"127.0.0.1:43782","response type":"/etcdserverpb.KV/Range","request count":0,"request size":53,"response count":1,"response size":1170,"request content":"key:\"/registry/clusterrolebindings/storage-provisioner\" limit:1 "}
{"level":"warn","ts":"2025-05-21T23:40:44.318356Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-05-21T23:40:43.951814Z","time spent":"366.487832ms","remote":"127.0.0.1:43484","response type":"/etcdserverpb.KV/Txn","request count":1,"request size":642,"response count":0,"response size":42,"request content":"compare:<target:MOD key:\"/registry/events/default/minikube.1841af4104709651\" mod_revision:41734 > success:<request_put:<key:\"/registry/events/default/minikube.1841af4104709651\" value_size:574 lease:8128037407453366647 >> failure:<request_range:<key:\"/registry/events/default/minikube.1841af4104709651\" > >"}
{"level":"warn","ts":"2025-05-21T23:40:44.318614Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"203.810882ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/health\" ","response":"range_response_count:0 size:6"}
{"level":"info","ts":"2025-05-21T23:40:44.318653Z","caller":"traceutil/trace.go:171","msg":"trace[84090016] range","detail":"{range_begin:/registry/health; range_end:; response_count:0; response_revision:41740; }","duration":"203.91669ms","start":"2025-05-21T23:40:44.114726Z","end":"2025-05-21T23:40:44.318643Z","steps":["trace[84090016] 'agreement among raft nodes before linearized reading'  (duration: 203.823736ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:44.318235Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-05-21T23:40:43.968599Z","time spent":"349.619144ms","remote":"127.0.0.1:43584","response type":"/etcdserverpb.KV/Range","request count":0,"request size":55,"response count":1,"response size":5298,"request content":"key:\"/registry/pods/kube-system/coredns-668d6bf9bc-fjbsf\" limit:1 "}
{"level":"warn","ts":"2025-05-21T23:40:44.318135Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"355.352708ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/clusterroles/system:controller:node-controller\" limit:1 ","response":"range_response_count:1 size:766"}
{"level":"info","ts":"2025-05-21T23:40:44.318825Z","caller":"traceutil/trace.go:171","msg":"trace[155576229] range","detail":"{range_begin:/registry/clusterroles/system:controller:node-controller; range_end:; response_count:1; response_revision:41740; }","duration":"356.090771ms","start":"2025-05-21T23:40:43.962722Z","end":"2025-05-21T23:40:44.318812Z","steps":["trace[155576229] 'agreement among raft nodes before linearized reading'  (duration: 355.350598ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:44.318914Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"121.554624ms","expected-duration":"100ms","prefix":"read-only range ","request":"limit:1 keys_only:true ","response":"range_response_count:0 size:6"}
{"level":"info","ts":"2025-05-21T23:40:44.318973Z","caller":"traceutil/trace.go:171","msg":"trace[281849334] range","detail":"{range_begin:; range_end:; response_count:0; response_revision:41740; }","duration":"121.629831ms","start":"2025-05-21T23:40:44.197325Z","end":"2025-05-21T23:40:44.318955Z","steps":["trace[281849334] 'agreement among raft nodes before linearized reading'  (duration: 121.534288ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:44.319271Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-05-21T23:40:43.962698Z","time spent":"356.157728ms","remote":"127.0.0.1:43766","response type":"/etcdserverpb.KV/Range","request count":0,"request size":60,"response count":1,"response size":790,"request content":"key:\"/registry/clusterroles/system:controller:node-controller\" limit:1 "}
{"level":"warn","ts":"2025-05-21T23:40:44.679616Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"180.022012ms","expected-duration":"100ms","prefix":"","request":"header:<ID:8128037407453366798 username:\"kube-apiserver-etcd-client\" auth_revision:1 > txn:<compare:<target:MOD key:\"/registry/events/default/minikube.1841af410470bd51\" mod_revision:41736 > success:<request_put:<key:\"/registry/events/default/minikube.1841af410470bd51\" value_size:570 lease:8128037407453366647 >> failure:<request_range:<key:\"/registry/events/default/minikube.1841af410470bd51\" > >>","response":"size:18"}
{"level":"info","ts":"2025-05-21T23:40:44.679937Z","caller":"traceutil/trace.go:171","msg":"trace[1336938958] transaction","detail":"{read_only:false; response_revision:41741; number_of_response:1; }","duration":"287.650225ms","start":"2025-05-21T23:40:44.392229Z","end":"2025-05-21T23:40:44.679879Z","steps":["trace[1336938958] 'process raft request'  (duration: 107.176397ms)","trace[1336938958] 'compare'  (duration: 179.752936ms)"],"step_count":2}
{"level":"info","ts":"2025-05-21T23:40:44.769067Z","caller":"traceutil/trace.go:171","msg":"trace[693320140] linearizableReadLoop","detail":"{readStateIndex:50367; appliedIndex:50365; }","duration":"367.039317ms","start":"2025-05-21T23:40:44.402007Z","end":"2025-05-21T23:40:44.769046Z","steps":["trace[693320140] 'read index received'  (duration: 97.499845ms)","trace[693320140] 'applied index is now lower than readState.Index'  (duration: 269.538705ms)"],"step_count":2}
{"level":"info","ts":"2025-05-21T23:40:44.769451Z","caller":"traceutil/trace.go:171","msg":"trace[1608112412] transaction","detail":"{read_only:false; response_revision:41742; number_of_response:1; }","duration":"368.094803ms","start":"2025-05-21T23:40:44.401340Z","end":"2025-05-21T23:40:44.769435Z","steps":["trace[1608112412] 'process raft request'  (duration: 367.539865ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:44.769560Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-05-21T23:40:44.401302Z","time spent":"368.185262ms","remote":"127.0.0.1:43584","response type":"/etcdserverpb.KV/Txn","request count":1,"request size":5317,"response count":0,"response size":42,"request content":"compare:<target:MOD key:\"/registry/pods/kube-system/coredns-668d6bf9bc-fjbsf\" mod_revision:28974 > success:<request_put:<key:\"/registry/pods/kube-system/coredns-668d6bf9bc-fjbsf\" value_size:5258 >> failure:<request_range:<key:\"/registry/pods/kube-system/coredns-668d6bf9bc-fjbsf\" > >"}
{"level":"warn","ts":"2025-05-21T23:40:44.769809Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"367.79762ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/clusterroles/system:controller:replicaset-controller\" limit:1 ","response":"range_response_count:1 size:844"}
{"level":"info","ts":"2025-05-21T23:40:44.769867Z","caller":"traceutil/trace.go:171","msg":"trace[1034837716] range","detail":"{range_begin:/registry/clusterroles/system:controller:replicaset-controller; range_end:; response_count:1; response_revision:41742; }","duration":"367.885299ms","start":"2025-05-21T23:40:44.401954Z","end":"2025-05-21T23:40:44.769839Z","steps":["trace[1034837716] 'agreement among raft nodes before linearized reading'  (duration: 367.80165ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:44.769904Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-05-21T23:40:44.401927Z","time spent":"367.965685ms","remote":"127.0.0.1:43766","response type":"/etcdserverpb.KV/Range","request count":0,"request size":66,"response count":1,"response size":868,"request content":"key:\"/registry/clusterroles/system:controller:replicaset-controller\" limit:1 "}
{"level":"warn","ts":"2025-05-21T23:40:45.272102Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"488.088406ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/health\" ","response":"range_response_count:0 size:6"}
{"level":"info","ts":"2025-05-21T23:40:45.272334Z","caller":"traceutil/trace.go:171","msg":"trace[1465525942] range","detail":"{range_begin:/registry/health; range_end:; response_count:0; response_revision:41742; }","duration":"488.21714ms","start":"2025-05-21T23:40:44.783957Z","end":"2025-05-21T23:40:45.272174Z","steps":["trace[1465525942] 'range keys from in-memory index tree'  (duration: 488.013103ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:45.272405Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-05-21T23:40:44.783936Z","time spent":"488.450915ms","remote":"127.0.0.1:43402","response type":"/etcdserverpb.KV/Range","request count":0,"request size":18,"response count":0,"response size":30,"request content":"key:\"/registry/health\" "}
{"level":"warn","ts":"2025-05-21T23:40:45.273524Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"113.698481ms","expected-duration":"100ms","prefix":"","request":"header:<ID:8128037407453366803 username:\"kube-apiserver-etcd-client\" auth_revision:1 > txn:<compare:<target:MOD key:\"/registry/events/default/minikube.1841af410470d431\" mod_revision:41737 > success:<request_put:<key:\"/registry/events/default/minikube.1841af410470d431\" value_size:568 lease:8128037407453366647 >> failure:<request_range:<key:\"/registry/events/default/minikube.1841af410470d431\" > >>","response":"size:18"}
{"level":"info","ts":"2025-05-21T23:40:45.273610Z","caller":"traceutil/trace.go:171","msg":"trace[687334561] linearizableReadLoop","detail":"{readStateIndex:50368; appliedIndex:50367; }","duration":"459.821753ms","start":"2025-05-21T23:40:44.813773Z","end":"2025-05-21T23:40:45.273594Z","steps":["trace[687334561] 'read index received'  (duration: 345.797887ms)","trace[687334561] 'applied index is now lower than readState.Index'  (duration: 114.022236ms)"],"step_count":2}
{"level":"info","ts":"2025-05-21T23:40:45.273735Z","caller":"traceutil/trace.go:171","msg":"trace[1041090143] transaction","detail":"{read_only:false; response_revision:41743; number_of_response:1; }","duration":"474.519034ms","start":"2025-05-21T23:40:44.799198Z","end":"2025-05-21T23:40:45.273717Z","steps":["trace[1041090143] 'process raft request'  (duration: 360.506296ms)","trace[1041090143] 'compare'  (duration: 113.402834ms)"],"step_count":2}
{"level":"warn","ts":"2025-05-21T23:40:45.273820Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-05-21T23:40:44.799104Z","time spent":"474.663022ms","remote":"127.0.0.1:43484","response type":"/etcdserverpb.KV/Txn","request count":1,"request size":636,"response count":0,"response size":42,"request content":"compare:<target:MOD key:\"/registry/events/default/minikube.1841af410470d431\" mod_revision:41737 > success:<request_put:<key:\"/registry/events/default/minikube.1841af410470d431\" value_size:568 lease:8128037407453366647 >> failure:<request_range:<key:\"/registry/events/default/minikube.1841af410470d431\" > >"}
{"level":"warn","ts":"2025-05-21T23:40:45.274200Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"460.415638ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/pods/kube-system/metrics-server-7fbb699795-6h8fd\" limit:1 ","response":"range_response_count:1 size:4511"}
{"level":"info","ts":"2025-05-21T23:40:45.274247Z","caller":"traceutil/trace.go:171","msg":"trace[412330787] range","detail":"{range_begin:/registry/pods/kube-system/metrics-server-7fbb699795-6h8fd; range_end:; response_count:1; response_revision:41743; }","duration":"460.512045ms","start":"2025-05-21T23:40:44.813722Z","end":"2025-05-21T23:40:45.274234Z","steps":["trace[412330787] 'agreement among raft nodes before linearized reading'  (duration: 460.285752ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:45.274301Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-05-21T23:40:44.813686Z","time spent":"460.602312ms","remote":"127.0.0.1:43584","response type":"/etcdserverpb.KV/Range","request count":0,"request size":62,"response count":1,"response size":4535,"request content":"key:\"/registry/pods/kube-system/metrics-server-7fbb699795-6h8fd\" limit:1 "}
{"level":"warn","ts":"2025-05-21T23:40:45.274759Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"460.282107ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/clusterroles/system:controller:replication-controller\" limit:1 ","response":"range_response_count:1 size:831"}
{"level":"info","ts":"2025-05-21T23:40:45.274814Z","caller":"traceutil/trace.go:171","msg":"trace[1044272522] range","detail":"{range_begin:/registry/clusterroles/system:controller:replication-controller; range_end:; response_count:1; response_revision:41743; }","duration":"460.398659ms","start":"2025-05-21T23:40:44.814395Z","end":"2025-05-21T23:40:45.274793Z","steps":["trace[1044272522] 'agreement among raft nodes before linearized reading'  (duration: 460.299758ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:45.274864Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-05-21T23:40:44.814373Z","time spent":"460.476936ms","remote":"127.0.0.1:43766","response type":"/etcdserverpb.KV/Range","request count":0,"request size":67,"response count":1,"response size":855,"request content":"key:\"/registry/clusterroles/system:controller:replication-controller\" limit:1 "}
{"level":"warn","ts":"2025-05-21T23:40:45.287612Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"174.935668ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/rolebindings/kube-system/system:persistent-volume-provisioner\" limit:1 ","response":"range_response_count:1 size:1211"}
{"level":"info","ts":"2025-05-21T23:40:45.287688Z","caller":"traceutil/trace.go:171","msg":"trace[961791363] range","detail":"{range_begin:/registry/rolebindings/kube-system/system:persistent-volume-provisioner; range_end:; response_count:1; response_revision:41743; }","duration":"175.059222ms","start":"2025-05-21T23:40:45.112608Z","end":"2025-05-21T23:40:45.287667Z","steps":["trace[961791363] 'agreement among raft nodes before linearized reading'  (duration: 174.78065ms)"],"step_count":1}
{"level":"info","ts":"2025-05-21T23:40:45.624881Z","caller":"traceutil/trace.go:171","msg":"trace[1403994384] transaction","detail":"{read_only:false; response_revision:41744; number_of_response:1; }","duration":"283.092824ms","start":"2025-05-21T23:40:45.341691Z","end":"2025-05-21T23:40:45.624784Z","steps":["trace[1403994384] 'process raft request'  (duration: 282.723984ms)"],"step_count":1}
{"level":"info","ts":"2025-05-21T23:40:45.625497Z","caller":"traceutil/trace.go:171","msg":"trace[124368854] linearizableReadLoop","detail":"{readStateIndex:50369; appliedIndex:50369; }","duration":"282.948261ms","start":"2025-05-21T23:40:45.342533Z","end":"2025-05-21T23:40:45.625482Z","steps":["trace[124368854] 'read index received'  (duration: 282.942985ms)","trace[124368854] 'applied index is now lower than readState.Index'  (duration: 4.125µs)"],"step_count":2}
{"level":"warn","ts":"2025-05-21T23:40:45.625619Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"283.069226ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/clusterroles/system:controller:route-controller\" limit:1 ","response":"range_response_count:1 size:678"}
{"level":"info","ts":"2025-05-21T23:40:45.625655Z","caller":"traceutil/trace.go:171","msg":"trace[1611090066] range","detail":"{range_begin:/registry/clusterroles/system:controller:route-controller; range_end:; response_count:1; response_revision:41744; }","duration":"283.119203ms","start":"2025-05-21T23:40:45.342526Z","end":"2025-05-21T23:40:45.625645Z","steps":["trace[1611090066] 'agreement among raft nodes before linearized reading'  (duration: 283.038625ms)"],"step_count":1}
{"level":"info","ts":"2025-05-21T23:40:45.793527Z","caller":"traceutil/trace.go:171","msg":"trace[1095951549] transaction","detail":"{read_only:false; response_revision:41745; number_of_response:1; }","duration":"450.674239ms","start":"2025-05-21T23:40:45.342715Z","end":"2025-05-21T23:40:45.793389Z","steps":["trace[1095951549] 'process raft request'  (duration: 387.565706ms)","trace[1095951549] 'compare'  (duration: 48.132199ms)"],"step_count":2}
{"level":"warn","ts":"2025-05-21T23:40:45.795201Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-05-21T23:40:45.342691Z","time spent":"452.39498ms","remote":"127.0.0.1:43484","response type":"/etcdserverpb.KV/Txn","request count":1,"request size":642,"response count":0,"response size":42,"request content":"compare:<target:MOD key:\"/registry/events/default/minikube.1841af4104709651\" mod_revision:41740 > success:<request_put:<key:\"/registry/events/default/minikube.1841af4104709651\" value_size:574 lease:8128037407453366647 >> failure:<request_range:<key:\"/registry/events/default/minikube.1841af4104709651\" > >"}
{"level":"info","ts":"2025-05-21T23:40:45.793750Z","caller":"traceutil/trace.go:171","msg":"trace[453997239] linearizableReadLoop","detail":"{readStateIndex:50370; appliedIndex:50369; }","duration":"168.188826ms","start":"2025-05-21T23:40:45.625542Z","end":"2025-05-21T23:40:45.793731Z","steps":["trace[453997239] 'read index received'  (duration: 104.668094ms)","trace[453997239] 'applied index is now lower than readState.Index'  (duration: 63.51843ms)"],"step_count":2}
{"level":"warn","ts":"2025-05-21T23:40:45.793885Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"293.653152ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/services/endpoints/kube-system/k8s.io-minikube-hostpath\" limit:1 ","response":"range_response_count:1 size:1112"}
{"level":"info","ts":"2025-05-21T23:40:45.795752Z","caller":"traceutil/trace.go:171","msg":"trace[1858901784] range","detail":"{range_begin:/registry/services/endpoints/kube-system/k8s.io-minikube-hostpath; range_end:; response_count:1; response_revision:41745; }","duration":"295.568049ms","start":"2025-05-21T23:40:45.500164Z","end":"2025-05-21T23:40:45.795732Z","steps":["trace[1858901784] 'agreement among raft nodes before linearized reading'  (duration: 293.632528ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:45.796751Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"140.699855ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/clusterroles/system:controller:service-account-controller\" limit:1 ","response":"range_response_count:1 size:678"}
{"level":"warn","ts":"2025-05-21T23:40:45.797609Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"127.357735ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/pods/kube-system/etcd-minikube\" limit:1 ","response":"range_response_count:1 size:5683"}
{"level":"info","ts":"2025-05-21T23:40:45.797676Z","caller":"traceutil/trace.go:171","msg":"trace[1198716514] range","detail":"{range_begin:/registry/pods/kube-system/etcd-minikube; range_end:; response_count:1; response_revision:41745; }","duration":"127.463063ms","start":"2025-05-21T23:40:45.670193Z","end":"2025-05-21T23:40:45.797656Z","steps":["trace[1198716514] 'agreement among raft nodes before linearized reading'  (duration: 127.336152ms)"],"step_count":1}
{"level":"info","ts":"2025-05-21T23:40:45.808741Z","caller":"traceutil/trace.go:171","msg":"trace[885904183] range","detail":"{range_begin:/registry/clusterroles/system:controller:service-account-controller; range_end:; response_count:1; response_revision:41745; }","duration":"141.112246ms","start":"2025-05-21T23:40:45.655692Z","end":"2025-05-21T23:40:45.796804Z","steps":["trace[885904183] 'agreement among raft nodes before linearized reading'  (duration: 140.652083ms)"],"step_count":1}
{"level":"info","ts":"2025-05-21T23:40:46.087288Z","caller":"traceutil/trace.go:171","msg":"trace[1450950302] transaction","detail":"{read_only:false; response_revision:41746; number_of_response:1; }","duration":"134.798227ms","start":"2025-05-21T23:40:45.952462Z","end":"2025-05-21T23:40:46.087261Z","steps":["trace[1450950302] 'process raft request'  (duration: 134.41423ms)"],"step_count":1}
{"level":"info","ts":"2025-05-21T23:40:46.113506Z","caller":"traceutil/trace.go:171","msg":"trace[1264438569] linearizableReadLoop","detail":"{readStateIndex:50372; appliedIndex:50371; }","duration":"145.661014ms","start":"2025-05-21T23:40:45.967804Z","end":"2025-05-21T23:40:46.113465Z","steps":["trace[1264438569] 'read index received'  (duration: 119.616513ms)","trace[1264438569] 'applied index is now lower than readState.Index'  (duration: 26.043638ms)"],"step_count":2}
{"level":"info","ts":"2025-05-21T23:40:46.113631Z","caller":"traceutil/trace.go:171","msg":"trace[698231333] transaction","detail":"{read_only:false; response_revision:41747; number_of_response:1; }","duration":"145.83963ms","start":"2025-05-21T23:40:45.967777Z","end":"2025-05-21T23:40:46.113617Z","steps":["trace[698231333] 'process raft request'  (duration: 145.574967ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:46.114019Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"146.19715ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/clusterroles/system:controller:ttl-controller\" limit:1 ","response":"range_response_count:1 size:664"}
{"level":"info","ts":"2025-05-21T23:40:46.114073Z","caller":"traceutil/trace.go:171","msg":"trace[1175397632] range","detail":"{range_begin:/registry/clusterroles/system:controller:ttl-controller; range_end:; response_count:1; response_revision:41747; }","duration":"146.287513ms","start":"2025-05-21T23:40:45.967773Z","end":"2025-05-21T23:40:46.114061Z","steps":["trace[1175397632] 'agreement among raft nodes before linearized reading'  (duration: 146.15264ms)"],"step_count":1}
{"level":"warn","ts":"2025-05-21T23:40:46.431000Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"120.130778ms","expected-duration":"100ms","prefix":"","request":"header:<ID:8128037407453366825 username:\"kube-apiserver-etcd-client\" auth_revision:1 > txn:<compare:<target:MOD key:\"/registry/pods/kube-system/kube-scheduler-minikube\" mod_revision:41726 > success:<request_put:<key:\"/registry/pods/kube-system/kube-scheduler-minikube\" value_size:4570 >> failure:<request_range:<key:\"/registry/pods/kube-system/kube-scheduler-minikube\" > >>","response":"size:18"}
{"level":"info","ts":"2025-05-21T23:40:46.431080Z","caller":"traceutil/trace.go:171","msg":"trace[1259125523] linearizableReadLoop","detail":"{readStateIndex:50374; appliedIndex:50373; }","duration":"215.046634ms","start":"2025-05-21T23:40:46.216020Z","end":"2025-05-21T23:40:46.431066Z","steps":["trace[1259125523] 'read index received'  (duration: 94.796331ms)","trace[1259125523] 'applied index is now lower than readState.Index'  (duration: 120.249248ms)"],"step_count":2}
{"level":"info","ts":"2025-05-21T23:40:46.431332Z","caller":"traceutil/trace.go:171","msg":"trace[764055728] transaction","detail":"{read_only:false; response_revision:41749; number_of_response:1; }","duration":"221.217337ms","start":"2025-05-21T23:40:46.210099Z","end":"2025-05-21T23:40:46.431316Z","steps":["trace[764055728] 'process raft request'  (duration: 100.706784ms)","trace[764055728] 'compare'  (duration: 119.975184ms)"],"step_count":2}
{"level":"warn","ts":"2025-05-21T23:40:46.431524Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"215.492119ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/clusterroles/system:controller:ttl-after-finished-controller\" limit:1 ","response":"range_response_count:1 size:696"}
{"level":"info","ts":"2025-05-21T23:40:46.431559Z","caller":"traceutil/trace.go:171","msg":"trace[1072084695] range","detail":"{range_begin:/registry/clusterroles/system:controller:ttl-after-finished-controller; range_end:; response_count:1; response_revision:41749; }","duration":"215.561091ms","start":"2025-05-21T23:40:46.215986Z","end":"2025-05-21T23:40:46.431548Z","steps":["trace[1072084695] 'agreement among raft nodes before linearized reading'  (duration: 215.489817ms)"],"step_count":1}
{"level":"info","ts":"2025-05-21T23:40:46.432279Z","caller":"traceutil/trace.go:171","msg":"trace[391323281] transaction","detail":"{read_only:false; response_revision:41750; number_of_response:1; }","duration":"202.009371ms","start":"2025-05-21T23:40:46.230254Z","end":"2025-05-21T23:40:46.432263Z","steps":["trace[391323281] 'process raft request'  (duration: 201.739912ms)"],"step_count":1}
{"level":"info","ts":"2025-05-21T23:40:48.139572Z","caller":"traceutil/trace.go:171","msg":"trace[837330515] transaction","detail":"{read_only:false; response_revision:41780; number_of_response:1; }","duration":"193.220049ms","start":"2025-05-21T23:40:47.946326Z","end":"2025-05-21T23:40:48.139546Z","steps":["trace[837330515] 'process raft request'  (duration: 169.147073ms)","trace[837330515] 'compare'  (duration: 23.962988ms)"],"step_count":2}
{"level":"info","ts":"2025-05-21T23:40:51.022952Z","caller":"traceutil/trace.go:171","msg":"trace[2092923993] transaction","detail":"{read_only:false; response_revision:41789; number_of_response:1; }","duration":"125.147851ms","start":"2025-05-21T23:40:50.897777Z","end":"2025-05-21T23:40:51.022925Z","steps":["trace[2092923993] 'process raft request'  (duration: 124.980904ms)"],"step_count":1}
{"level":"info","ts":"2025-05-21T23:40:51.380608Z","caller":"traceutil/trace.go:171","msg":"trace[1523066380] linearizableReadLoop","detail":"{readStateIndex:50432; appliedIndex:50429; }","duration":"101.278548ms","start":"2025-05-21T23:40:51.279249Z","end":"2025-05-21T23:40:51.380527Z","steps":["trace[1523066380] 'read index received'  (duration: 70.9009ms)","trace[1523066380] 'applied index is now lower than readState.Index'  (duration: 30.376305ms)"],"step_count":2}
{"level":"warn","ts":"2025-05-21T23:40:51.380895Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"101.620881ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/serviceaccounts/kube-system/deployment-controller\" limit:1 ","response":"range_response_count:1 size:208"}
{"level":"info","ts":"2025-05-21T23:40:51.380963Z","caller":"traceutil/trace.go:171","msg":"trace[583919934] range","detail":"{range_begin:/registry/serviceaccounts/kube-system/deployment-controller; range_end:; response_count:1; response_revision:41809; }","duration":"101.841815ms","start":"2025-05-21T23:40:51.279097Z","end":"2025-05-21T23:40:51.380939Z","steps":["trace[583919934] 'agreement among raft nodes before linearized reading'  (duration: 101.622128ms)"],"step_count":1}
{"level":"info","ts":"2025-05-21T23:40:51.381467Z","caller":"traceutil/trace.go:171","msg":"trace[1899466862] transaction","detail":"{read_only:false; response_revision:41802; number_of_response:1; }","duration":"136.850924ms","start":"2025-05-21T23:40:51.244576Z","end":"2025-05-21T23:40:51.381427Z","steps":["trace[1899466862] 'process raft request'  (duration: 101.336562ms)","trace[1899466862] 'compare'  (duration: 32.537028ms)"],"step_count":2}
{"level":"info","ts":"2025-05-21T23:40:51.381822Z","caller":"traceutil/trace.go:171","msg":"trace[8731412] transaction","detail":"{read_only:false; response_revision:41803; number_of_response:1; }","duration":"102.952909ms","start":"2025-05-21T23:40:51.278841Z","end":"2025-05-21T23:40:51.381794Z","steps":["trace[8731412] 'process raft request'  (duration: 100.914161ms)"],"step_count":1}
{"level":"info","ts":"2025-05-21T23:40:51.382043Z","caller":"traceutil/trace.go:171","msg":"trace[154460956] transaction","detail":"{read_only:false; response_revision:41804; number_of_response:1; }","duration":"103.062609ms","start":"2025-05-21T23:40:51.278959Z","end":"2025-05-21T23:40:51.382021Z","steps":["trace[154460956] 'process raft request'  (duration: 100.938613ms)"],"step_count":1}
{"level":"info","ts":"2025-05-21T23:40:51.382389Z","caller":"traceutil/trace.go:171","msg":"trace[344646172] transaction","detail":"{read_only:false; response_revision:41805; number_of_response:1; }","duration":"103.091185ms","start":"2025-05-21T23:40:51.279277Z","end":"2025-05-21T23:40:51.382368Z","steps":["trace[344646172] 'process raft request'  (duration: 100.724871ms)"],"step_count":1}
{"level":"info","ts":"2025-05-21T23:40:51.382604Z","caller":"traceutil/trace.go:171","msg":"trace[1480038637] transaction","detail":"{read_only:false; response_revision:41806; number_of_response:1; }","duration":"103.163583ms","start":"2025-05-21T23:40:51.279411Z","end":"2025-05-21T23:40:51.382574Z","steps":["trace[1480038637] 'process raft request'  (duration: 100.726118ms)"],"step_count":1}
{"level":"info","ts":"2025-05-21T23:40:51.382817Z","caller":"traceutil/trace.go:171","msg":"trace[772188699] transaction","detail":"{read_only:false; response_revision:41807; number_of_response:1; }","duration":"103.21009ms","start":"2025-05-21T23:40:51.279589Z","end":"2025-05-21T23:40:51.382799Z","steps":["trace[772188699] 'process raft request'  (duration: 100.634349ms)"],"step_count":1}
{"level":"info","ts":"2025-05-21T23:40:51.421987Z","caller":"traceutil/trace.go:171","msg":"trace[2081517660] transaction","detail":"{read_only:false; response_revision:41809; number_of_response:1; }","duration":"142.215572ms","start":"2025-05-21T23:40:51.279678Z","end":"2025-05-21T23:40:51.421893Z","steps":["trace[2081517660] 'process raft request'  (duration: 100.68172ms)"],"step_count":1}
{"level":"info","ts":"2025-05-21T23:40:51.570595Z","caller":"traceutil/trace.go:171","msg":"trace[2471400] transaction","detail":"{read_only:false; response_revision:41808; number_of_response:1; }","duration":"290.924051ms","start":"2025-05-21T23:40:51.279615Z","end":"2025-05-21T23:40:51.570539Z","steps":["trace[2471400] 'process raft request'  (duration: 100.686706ms)"],"step_count":1}
{"level":"info","ts":"2025-05-21T23:40:56.421121Z","caller":"traceutil/trace.go:171","msg":"trace[1538177082] transaction","detail":"{read_only:false; response_revision:41841; number_of_response:1; }","duration":"159.234432ms","start":"2025-05-21T23:40:56.261848Z","end":"2025-05-21T23:40:56.421083Z","steps":["trace[1538177082] 'process raft request'  (duration: 92.972794ms)","trace[1538177082] 'compare'  (duration: 65.658895ms)"],"step_count":2}
{"level":"warn","ts":"2025-05-21T23:43:24.962163Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"166.110917ms","expected-duration":"100ms","prefix":"read-only range ","request":"limit:1 serializable:true keys_only:true ","response":"range_response_count:0 size:6"}
{"level":"info","ts":"2025-05-21T23:43:24.962291Z","caller":"traceutil/trace.go:171","msg":"trace[35495172] range","detail":"{range_begin:; range_end:; response_count:0; response_revision:42054; }","duration":"166.260135ms","start":"2025-05-21T23:43:24.796011Z","end":"2025-05-21T23:43:24.962271Z","steps":["trace[35495172] 'range keys from in-memory index tree'  (duration: 166.095756ms)"],"step_count":1}
==== END logs for container etcd of pod kube-system/etcd-minikube ====
==== START logs for container kube-apiserver of pod kube-system/kube-apiserver-minikube ====
W0521 23:40:29.642350       1 registry.go:256] calling componentGlobalsRegistry.AddFlags more than once, the registry will be set by the latest flags
I0521 23:40:29.663560       1 options.go:238] external host was not specified, using 192.168.49.2
I0521 23:40:29.667152       1 server.go:143] Version: v1.32.0
I0521 23:40:29.667206       1 server.go:145] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0521 23:40:32.692676       1 shared_informer.go:313] Waiting for caches to sync for node_authorizer
I0521 23:40:32.718867       1 shared_informer.go:313] Waiting for caches to sync for *generic.policySource[*k8s.io/api/admissionregistration/v1.ValidatingAdmissionPolicy,*k8s.io/api/admissionregistration/v1.ValidatingAdmissionPolicyBinding,k8s.io/apiserver/pkg/admission/plugin/policy/validating.Validator]
I0521 23:40:32.758896       1 plugins.go:157] Loaded 13 mutating admission controller(s) successfully in the following order: NamespaceLifecycle,LimitRanger,ServiceAccount,NodeRestriction,TaintNodesByCondition,Priority,DefaultTolerationSeconds,DefaultStorageClass,StorageObjectInUseProtection,RuntimeClass,DefaultIngressClass,MutatingAdmissionPolicy,MutatingAdmissionWebhook.
I0521 23:40:32.760782       1 plugins.go:160] Loaded 13 validating admission controller(s) successfully in the following order: LimitRanger,ServiceAccount,PodSecurity,Priority,PersistentVolumeClaimResize,RuntimeClass,CertificateApproval,CertificateSigning,ClusterTrustBundleAttest,CertificateSubjectRestriction,ValidatingAdmissionPolicy,ValidatingAdmissionWebhook,ResourceQuota.
I0521 23:40:32.761600       1 instance.go:233] Using reconciler: lease
I0521 23:40:33.509665       1 handler.go:286] Adding GroupVersion apiextensions.k8s.io v1 to ResourceManager
W0521 23:40:33.509712       1 genericapiserver.go:767] Skipping API apiextensions.k8s.io/v1beta1 because it has no resources.
I0521 23:40:34.620159       1 handler.go:286] Adding GroupVersion  v1 to ResourceManager
I0521 23:40:34.625572       1 apis.go:106] API group "internal.apiserver.k8s.io" is not enabled, skipping.
I0521 23:40:35.627306       1 apis.go:106] API group "storagemigration.k8s.io" is not enabled, skipping.
I0521 23:40:36.038064       1 apis.go:106] API group "resource.k8s.io" is not enabled, skipping.
I0521 23:40:36.081414       1 handler.go:286] Adding GroupVersion authentication.k8s.io v1 to ResourceManager
W0521 23:40:36.081975       1 genericapiserver.go:767] Skipping API authentication.k8s.io/v1beta1 because it has no resources.
W0521 23:40:36.082274       1 genericapiserver.go:767] Skipping API authentication.k8s.io/v1alpha1 because it has no resources.
I0521 23:40:36.083752       1 handler.go:286] Adding GroupVersion authorization.k8s.io v1 to ResourceManager
W0521 23:40:36.084119       1 genericapiserver.go:767] Skipping API authorization.k8s.io/v1beta1 because it has no resources.
I0521 23:40:36.086309       1 handler.go:286] Adding GroupVersion autoscaling v2 to ResourceManager
I0521 23:40:36.088493       1 handler.go:286] Adding GroupVersion autoscaling v1 to ResourceManager
W0521 23:40:36.088898       1 genericapiserver.go:767] Skipping API autoscaling/v2beta1 because it has no resources.
W0521 23:40:36.089087       1 genericapiserver.go:767] Skipping API autoscaling/v2beta2 because it has no resources.
I0521 23:40:36.092414       1 handler.go:286] Adding GroupVersion batch v1 to ResourceManager
W0521 23:40:36.092508       1 genericapiserver.go:767] Skipping API batch/v1beta1 because it has no resources.
I0521 23:40:36.094680       1 handler.go:286] Adding GroupVersion certificates.k8s.io v1 to ResourceManager
W0521 23:40:36.094805       1 genericapiserver.go:767] Skipping API certificates.k8s.io/v1beta1 because it has no resources.
W0521 23:40:36.094821       1 genericapiserver.go:767] Skipping API certificates.k8s.io/v1alpha1 because it has no resources.
I0521 23:40:36.096554       1 handler.go:286] Adding GroupVersion coordination.k8s.io v1 to ResourceManager
W0521 23:40:36.096626       1 genericapiserver.go:767] Skipping API coordination.k8s.io/v1beta1 because it has no resources.
W0521 23:40:36.096640       1 genericapiserver.go:767] Skipping API coordination.k8s.io/v1alpha2 because it has no resources.
I0521 23:40:36.097730       1 handler.go:286] Adding GroupVersion discovery.k8s.io v1 to ResourceManager
W0521 23:40:36.097792       1 genericapiserver.go:767] Skipping API discovery.k8s.io/v1beta1 because it has no resources.
I0521 23:40:36.100979       1 handler.go:286] Adding GroupVersion networking.k8s.io v1 to ResourceManager
W0521 23:40:36.101063       1 genericapiserver.go:767] Skipping API networking.k8s.io/v1beta1 because it has no resources.
W0521 23:40:36.101080       1 genericapiserver.go:767] Skipping API networking.k8s.io/v1alpha1 because it has no resources.
I0521 23:40:36.102109       1 handler.go:286] Adding GroupVersion node.k8s.io v1 to ResourceManager
W0521 23:40:36.102185       1 genericapiserver.go:767] Skipping API node.k8s.io/v1beta1 because it has no resources.
W0521 23:40:36.102197       1 genericapiserver.go:767] Skipping API node.k8s.io/v1alpha1 because it has no resources.
I0521 23:40:36.103213       1 handler.go:286] Adding GroupVersion policy v1 to ResourceManager
W0521 23:40:36.103273       1 genericapiserver.go:767] Skipping API policy/v1beta1 because it has no resources.
I0521 23:40:36.105369       1 handler.go:286] Adding GroupVersion rbac.authorization.k8s.io v1 to ResourceManager
W0521 23:40:36.105421       1 genericapiserver.go:767] Skipping API rbac.authorization.k8s.io/v1beta1 because it has no resources.
W0521 23:40:36.105431       1 genericapiserver.go:767] Skipping API rbac.authorization.k8s.io/v1alpha1 because it has no resources.
I0521 23:40:36.106118       1 handler.go:286] Adding GroupVersion scheduling.k8s.io v1 to ResourceManager
W0521 23:40:36.106180       1 genericapiserver.go:767] Skipping API scheduling.k8s.io/v1beta1 because it has no resources.
W0521 23:40:36.106193       1 genericapiserver.go:767] Skipping API scheduling.k8s.io/v1alpha1 because it has no resources.
I0521 23:40:36.111891       1 handler.go:286] Adding GroupVersion storage.k8s.io v1 to ResourceManager
W0521 23:40:36.111991       1 genericapiserver.go:767] Skipping API storage.k8s.io/v1beta1 because it has no resources.
W0521 23:40:36.112005       1 genericapiserver.go:767] Skipping API storage.k8s.io/v1alpha1 because it has no resources.
I0521 23:40:36.113754       1 handler.go:286] Adding GroupVersion flowcontrol.apiserver.k8s.io v1 to ResourceManager
W0521 23:40:36.113808       1 genericapiserver.go:767] Skipping API flowcontrol.apiserver.k8s.io/v1beta3 because it has no resources.
W0521 23:40:36.113817       1 genericapiserver.go:767] Skipping API flowcontrol.apiserver.k8s.io/v1beta2 because it has no resources.
W0521 23:40:36.113821       1 genericapiserver.go:767] Skipping API flowcontrol.apiserver.k8s.io/v1beta1 because it has no resources.
I0521 23:40:36.117954       1 handler.go:286] Adding GroupVersion apps v1 to ResourceManager
W0521 23:40:36.118014       1 genericapiserver.go:767] Skipping API apps/v1beta2 because it has no resources.
W0521 23:40:36.118023       1 genericapiserver.go:767] Skipping API apps/v1beta1 because it has no resources.
I0521 23:40:36.122055       1 handler.go:286] Adding GroupVersion admissionregistration.k8s.io v1 to ResourceManager
W0521 23:40:36.122120       1 genericapiserver.go:767] Skipping API admissionregistration.k8s.io/v1beta1 because it has no resources.
W0521 23:40:36.122130       1 genericapiserver.go:767] Skipping API admissionregistration.k8s.io/v1alpha1 because it has no resources.
I0521 23:40:36.122690       1 handler.go:286] Adding GroupVersion events.k8s.io v1 to ResourceManager
W0521 23:40:36.122738       1 genericapiserver.go:767] Skipping API events.k8s.io/v1beta1 because it has no resources.
I0521 23:40:36.137297       1 handler.go:286] Adding GroupVersion apiregistration.k8s.io v1 to ResourceManager
W0521 23:40:36.137377       1 genericapiserver.go:767] Skipping API apiregistration.k8s.io/v1beta1 because it has no resources.
I0521 23:40:37.628952       1 dynamic_cafile_content.go:161] "Starting controller" name="request-header::/var/lib/minikube/certs/front-proxy-ca.crt"
I0521 23:40:37.629562       1 dynamic_cafile_content.go:161] "Starting controller" name="client-ca-bundle::/var/lib/minikube/certs/ca.crt"
I0521 23:40:37.629740       1 secure_serving.go:213] Serving securely on [::]:8443
I0521 23:40:37.629992       1 dynamic_serving_content.go:135] "Starting controller" name="serving-cert::/var/lib/minikube/certs/apiserver.crt::/var/lib/minikube/certs/apiserver.key"
I0521 23:40:37.679345       1 tlsconfig.go:243] "Starting DynamicServingCertificateController"
I0521 23:40:37.680946       1 local_available_controller.go:156] Starting LocalAvailability controller
I0521 23:40:37.681153       1 cache.go:32] Waiting for caches to sync for LocalAvailability controller
I0521 23:40:37.681307       1 dynamic_serving_content.go:135] "Starting controller" name="aggregator-proxy-cert::/var/lib/minikube/certs/front-proxy-client.crt::/var/lib/minikube/certs/front-proxy-client.key"
I0521 23:40:37.681791       1 aggregator.go:169] waiting for initial CRD sync...
I0521 23:40:37.681970       1 apiservice_controller.go:100] Starting APIServiceRegistrationController
I0521 23:40:37.682052       1 cache.go:32] Waiting for caches to sync for APIServiceRegistrationController controller
I0521 23:40:37.682149       1 controller.go:78] Starting OpenAPI AggregationController
I0521 23:40:37.682529       1 customresource_discovery_controller.go:292] Starting DiscoveryController
I0521 23:40:37.682924       1 cluster_authentication_trust_controller.go:462] Starting cluster_authentication_trust_controller controller
I0521 23:40:37.683025       1 shared_informer.go:313] Waiting for caches to sync for cluster_authentication_trust_controller
I0521 23:40:37.683397       1 controller.go:119] Starting legacy_token_tracking_controller
I0521 23:40:37.683512       1 shared_informer.go:313] Waiting for caches to sync for configmaps
I0521 23:40:37.684557       1 remote_available_controller.go:411] Starting RemoteAvailability controller
I0521 23:40:37.684685       1 cache.go:32] Waiting for caches to sync for RemoteAvailability controller
I0521 23:40:37.684851       1 system_namespaces_controller.go:66] Starting system namespaces controller
I0521 23:40:37.685035       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0521 23:40:37.685132       1 apf_controller.go:377] Starting API Priority and Fairness config controller
I0521 23:40:37.690010       1 controller.go:80] Starting OpenAPI V3 AggregationController
I0521 23:40:37.859023       1 crdregistration_controller.go:114] Starting crd-autoregister controller
I0521 23:40:37.874151       1 shared_informer.go:313] Waiting for caches to sync for crd-autoregister
I0521 23:40:37.875209       1 controller.go:142] Starting OpenAPI controller
I0521 23:40:37.875380       1 controller.go:90] Starting OpenAPI V3 controller
I0521 23:40:37.875447       1 naming_controller.go:294] Starting NamingConditionController
I0521 23:40:37.875486       1 establishing_controller.go:81] Starting EstablishingController
I0521 23:40:37.875564       1 nonstructuralschema_controller.go:195] Starting NonStructuralSchemaConditionController
I0521 23:40:37.875606       1 apiapproval_controller.go:189] Starting KubernetesAPIApprovalPolicyConformantConditionController
I0521 23:40:37.875635       1 crd_finalizer.go:269] Starting CRDFinalizer
I0521 23:40:37.875699       1 dynamic_cafile_content.go:161] "Starting controller" name="client-ca-bundle::/var/lib/minikube/certs/ca.crt"
I0521 23:40:37.875883       1 dynamic_cafile_content.go:161] "Starting controller" name="request-header::/var/lib/minikube/certs/front-proxy-ca.crt"
I0521 23:40:38.481319       1 cache.go:39] Caches are synced for LocalAvailability controller
I0521 23:40:38.483997       1 shared_informer.go:320] Caches are synced for configmaps
I0521 23:40:38.484095       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I0521 23:40:38.493933       1 shared_informer.go:320] Caches are synced for node_authorizer
I0521 23:40:38.505133       1 shared_informer.go:320] Caches are synced for cluster_authentication_trust_controller
I0521 23:40:38.505247       1 cache.go:39] Caches are synced for RemoteAvailability controller
I0521 23:40:38.505466       1 shared_informer.go:320] Caches are synced for crd-autoregister
I0521 23:40:38.507527       1 apf_controller.go:382] Running API Priority and Fairness config worker
I0521 23:40:38.507560       1 apf_controller.go:385] Running API Priority and Fairness periodic rebalancing process
I0521 23:40:38.516741       1 aggregator.go:171] initial CRD sync complete...
I0521 23:40:38.516784       1 autoregister_controller.go:144] Starting autoregister controller
I0521 23:40:38.516796       1 cache.go:32] Waiting for caches to sync for autoregister controller
I0521 23:40:38.516837       1 cache.go:39] Caches are synced for autoregister controller
I0521 23:40:38.517748       1 handler_discovery.go:451] Starting ResourceDiscoveryManager
I0521 23:40:38.522017       1 shared_informer.go:320] Caches are synced for *generic.policySource[*k8s.io/api/admissionregistration/v1.ValidatingAdmissionPolicy,*k8s.io/api/admissionregistration/v1.ValidatingAdmissionPolicyBinding,k8s.io/apiserver/pkg/admission/plugin/policy/validating.Validator]
I0521 23:40:38.522039       1 policy_source.go:240] refreshing policies
E0521 23:40:38.562722       1 controller.go:97] Error removing old endpoints from kubernetes service: no API server IP addresses were listed in storage, refusing to erase all endpoints for the kubernetes Service
I0521 23:40:38.599958       1 controller.go:615] quota admission added evaluator for: leases.coordination.k8s.io
E0521 23:40:38.671429       1 controller.go:195] "Failed to update lease" err="Operation cannot be fulfilled on leases.coordination.k8s.io \"apiserver-eqt674mfxb4j56mrjjkoe7b7ii\": StorageError: invalid object, Code: 4, Key: /registry/leases/kube-system/apiserver-eqt674mfxb4j56mrjjkoe7b7ii, ResourceVersion: 0, AdditionalErrorMsg: Precondition failed: UID in precondition: 59c46676-9bc7-444c-b0a5-f5bdb4e3d6b9, UID in object meta: "
I0521 23:40:38.677188       1 controller.go:615] quota admission added evaluator for: serviceaccounts
I0521 23:40:38.809882       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.
I0521 23:40:43.518518       1 handler.go:286] Adding GroupVersion metrics.k8s.io v1beta1 to ResourceManager
E0521 23:40:44.113983       1 remote_available_controller.go:448] "Unhandled Error" err="v1beta1.metrics.k8s.io failed with: failing or missing response from https://10.102.117.190:443/apis/metrics.k8s.io/v1beta1: Get \"https://10.102.117.190:443/apis/metrics.k8s.io/v1beta1\": context deadline exceeded" logger="UnhandledError"
E0521 23:40:49.267687       1 remote_available_controller.go:448] "Unhandled Error" err="v1beta1.metrics.k8s.io failed with: failing or missing response from https://10.102.117.190:443/apis/metrics.k8s.io/v1beta1: Get \"https://10.102.117.190:443/apis/metrics.k8s.io/v1beta1\": context deadline exceeded (Client.Timeout exceeded while awaiting headers)" logger="UnhandledError"
I0521 23:40:50.886314       1 controller.go:615] quota admission added evaluator for: daemonsets.apps
I0521 23:40:51.110753       1 controller.go:615] quota admission added evaluator for: endpointslices.discovery.k8s.io
I0521 23:40:51.136615       1 controller.go:615] quota admission added evaluator for: replicasets.apps
I0521 23:40:51.239852       1 controller.go:615] quota admission added evaluator for: endpoints
I0521 23:40:51.594658       1 controller.go:615] quota admission added evaluator for: deployments.apps
E0521 23:40:54.283302       1 remote_available_controller.go:448] "Unhandled Error" err="v1beta1.metrics.k8s.io failed with: failing or missing response from https://10.102.117.190:443/apis/metrics.k8s.io/v1beta1: Get \"https://10.102.117.190:443/apis/metrics.k8s.io/v1beta1\": context deadline exceeded" logger="UnhandledError"
W0521 23:40:56.825940       1 aggregator.go:166] spec for apiservice v1beta1.metrics.k8s.io is not yet available
E0521 23:41:09.881825       1 controller.go:146] "Unhandled Error" err=<
	Error updating APIService "v1beta1.metrics.k8s.io" with err: failed to download v1beta1.metrics.k8s.io: failed to retrieve openAPI spec, http error: ResponseCode: 503, Body: error trying to reach service: dial tcp 10.102.117.190:443: i/o timeout
	, Header: map[Content-Type:[text/plain; charset=utf-8] X-Content-Type-Options:[nosniff]]
 > logger="UnhandledError"
E0521 23:41:09.882249       1 controller.go:102] "Unhandled Error" err=<
	loading OpenAPI spec for "v1beta1.metrics.k8s.io" failed with: failed to download v1beta1.metrics.k8s.io: failed to retrieve openAPI spec, http error: ResponseCode: 503, Body: error trying to reach service: dial tcp 10.102.117.190:443: connect: connection refused
	, Header: map[Content-Type:[text/plain; charset=utf-8] X-Content-Type-Options:[nosniff]]
 > logger="UnhandledError"
I0521 23:41:09.883470       1 controller.go:109] OpenAPI AggregationController: action for item v1beta1.metrics.k8s.io: Rate Limited Requeue.
E0521 23:41:10.875468       1 controller.go:113] "Unhandled Error" err="loading OpenAPI spec for \"v1beta1.metrics.k8s.io\" failed with: Error, could not get list of group versions for APIService" logger="UnhandledError"
W0521 23:41:10.875630       1 handler_proxy.go:99] no RequestInfo found in the context
E0521 23:41:10.875676       1 controller.go:146] "Unhandled Error" err=<
	Error updating APIService "v1beta1.metrics.k8s.io" with err: failed to download v1beta1.metrics.k8s.io: failed to retrieve openAPI spec, http error: ResponseCode: 503, Body: service unavailable
	, Header: map[Content-Type:[text/plain; charset=utf-8] X-Content-Type-Options:[nosniff]]
 > logger="UnhandledError"
I0521 23:41:10.877309       1 controller.go:126] OpenAPI AggregationController: action for item v1beta1.metrics.k8s.io: Rate Limited Requeue.
W0521 23:41:10.884126       1 handler_proxy.go:99] no RequestInfo found in the context
E0521 23:41:10.884276       1 controller.go:102] "Unhandled Error" err=<
	loading OpenAPI spec for "v1beta1.metrics.k8s.io" failed with: failed to download v1beta1.metrics.k8s.io: failed to retrieve openAPI spec, http error: ResponseCode: 503, Body: service unavailable
	, Header: map[Content-Type:[text/plain; charset=utf-8] X-Content-Type-Options:[nosniff]]
 > logger="UnhandledError"
I0521 23:41:10.886314       1 controller.go:109] OpenAPI AggregationController: action for item v1beta1.metrics.k8s.io: Rate Limited Requeue.
E0521 23:41:33.010396       1 remote_available_controller.go:448] "Unhandled Error" err="v1beta1.metrics.k8s.io failed with: failing or missing response from https://10.102.117.190:443/apis/metrics.k8s.io/v1beta1: Get \"https://10.102.117.190:443/apis/metrics.k8s.io/v1beta1\": dial tcp 10.102.117.190:443: connect: connection refused" logger="UnhandledError"
W0521 23:41:33.012459       1 handler_proxy.go:99] no RequestInfo found in the context
E0521 23:41:33.012613       1 controller.go:146] "Unhandled Error" err=<
	Error updating APIService "v1beta1.metrics.k8s.io" with err: failed to download v1beta1.metrics.k8s.io: failed to retrieve openAPI spec, http error: ResponseCode: 503, Body: service unavailable
	, Header: map[Content-Type:[text/plain; charset=utf-8] X-Content-Type-Options:[nosniff]]
 > logger="UnhandledError"
E0521 23:41:33.016312       1 remote_available_controller.go:448] "Unhandled Error" err="v1beta1.metrics.k8s.io failed with: failing or missing response from https://10.102.117.190:443/apis/metrics.k8s.io/v1beta1: Get \"https://10.102.117.190:443/apis/metrics.k8s.io/v1beta1\": dial tcp 10.102.117.190:443: connect: connection refused" logger="UnhandledError"
E0521 23:41:33.019538       1 remote_available_controller.go:448] "Unhandled Error" err="v1beta1.metrics.k8s.io failed with: failing or missing response from https://10.102.117.190:443/apis/metrics.k8s.io/v1beta1: Get \"https://10.102.117.190:443/apis/metrics.k8s.io/v1beta1\": dial tcp 10.102.117.190:443: connect: connection refused" logger="UnhandledError"
E0521 23:41:33.041293       1 remote_available_controller.go:448] "Unhandled Error" err="v1beta1.metrics.k8s.io failed with: failing or missing response from https://10.102.117.190:443/apis/metrics.k8s.io/v1beta1: Get \"https://10.102.117.190:443/apis/metrics.k8s.io/v1beta1\": dial tcp 10.102.117.190:443: connect: connection refused" logger="UnhandledError"
W0521 23:41:35.378931       1 handler_proxy.go:99] no RequestInfo found in the context
E0521 23:41:35.379014       1 controller.go:113] "Unhandled Error" err="loading OpenAPI spec for \"v1beta1.metrics.k8s.io\" failed with: Error, could not get list of group versions for APIService" logger="UnhandledError"
W0521 23:41:35.379099       1 handler_proxy.go:99] no RequestInfo found in the context
E0521 23:41:35.379202       1 controller.go:102] "Unhandled Error" err=<
	loading OpenAPI spec for "v1beta1.metrics.k8s.io" failed with: failed to download v1beta1.metrics.k8s.io: failed to retrieve openAPI spec, http error: ResponseCode: 503, Body: service unavailable
	, Header: map[Content-Type:[text/plain; charset=utf-8] X-Content-Type-Options:[nosniff]]
 > logger="UnhandledError"
I0521 23:41:35.380390       1 controller.go:109] OpenAPI AggregationController: action for item v1beta1.metrics.k8s.io: Rate Limited Requeue.
I0521 23:41:35.380507       1 controller.go:126] OpenAPI AggregationController: action for item v1beta1.metrics.k8s.io: Rate Limited Requeue.
E0521 23:41:39.464566       1 remote_available_controller.go:448] "Unhandled Error" err="v1beta1.metrics.k8s.io failed with: failing or missing response from https://10.102.117.190:443/apis/metrics.k8s.io/v1beta1: Get \"https://10.102.117.190:443/apis/metrics.k8s.io/v1beta1\": context deadline exceeded" logger="UnhandledError"
W0521 23:41:39.464934       1 handler_proxy.go:99] no RequestInfo found in the context
E0521 23:41:39.465188       1 controller.go:146] "Unhandled Error" err=<
	Error updating APIService "v1beta1.metrics.k8s.io" with err: failed to download v1beta1.metrics.k8s.io: failed to retrieve openAPI spec, http error: ResponseCode: 503, Body: service unavailable
	, Header: map[Content-Type:[text/plain; charset=utf-8] X-Content-Type-Options:[nosniff]]
 > logger="UnhandledError"
I0521 23:41:39.551762       1 handler.go:286] Adding GroupVersion metrics.k8s.io v1beta1 to ResourceManager
E0521 23:41:39.581604       1 remote_available_controller.go:448] "Unhandled Error" err="v1beta1.metrics.k8s.io failed with: Operation cannot be fulfilled on apiservices.apiregistration.k8s.io \"v1beta1.metrics.k8s.io\": the object has been modified; please apply your changes to the latest version and try again" logger="UnhandledError"
==== END logs for container kube-apiserver of pod kube-system/kube-apiserver-minikube ====
==== START logs for container kube-controller-manager of pod kube-system/kube-controller-manager-minikube ====
I0521 23:40:32.678345       1 serving.go:386] Generated self-signed cert in-memory
I0521 23:40:34.145487       1 controllermanager.go:185] "Starting" version="v1.32.0"
I0521 23:40:34.145787       1 controllermanager.go:187] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0521 23:40:34.153125       1 secure_serving.go:213] Serving securely on 127.0.0.1:10257
I0521 23:40:34.153610       1 dynamic_cafile_content.go:161] "Starting controller" name="request-header::/var/lib/minikube/certs/front-proxy-ca.crt"
I0521 23:40:34.153651       1 dynamic_cafile_content.go:161] "Starting controller" name="client-ca-bundle::/var/lib/minikube/certs/ca.crt"
I0521 23:40:34.153680       1 tlsconfig.go:243] "Starting DynamicServingCertificateController"
I0521 23:40:48.204568       1 shared_informer.go:313] Waiting for caches to sync for tokens
I0521 23:40:48.204755       1 controllermanager.go:765] "Started controller" controller="serviceaccount-token-controller"
I0521 23:40:48.302201       1 controllermanager.go:765] "Started controller" controller="legacy-serviceaccount-token-cleaner-controller"
I0521 23:40:48.302629       1 legacy_serviceaccount_token_cleaner.go:103] "Starting legacy service account token cleaner controller" logger="legacy-serviceaccount-token-cleaner-controller"
I0521 23:40:48.302659       1 shared_informer.go:313] Waiting for caches to sync for legacy-service-account-token-cleaner
I0521 23:40:48.376858       1 controllermanager.go:765] "Started controller" controller="endpointslice-controller"
I0521 23:40:48.377245       1 endpointslice_controller.go:281] "Starting endpoint slice controller" logger="endpointslice-controller"
I0521 23:40:48.377266       1 shared_informer.go:313] Waiting for caches to sync for endpoint_slice
I0521 23:40:48.384049       1 controllermanager.go:765] "Started controller" controller="pod-garbage-collector-controller"
I0521 23:40:48.384508       1 gc_controller.go:99] "Starting GC controller" logger="pod-garbage-collector-controller"
I0521 23:40:48.384532       1 shared_informer.go:313] Waiting for caches to sync for GC
I0521 23:40:48.414634       1 shared_informer.go:320] Caches are synced for tokens
I0521 23:40:48.434851       1 controllermanager.go:765] "Started controller" controller="daemonset-controller"
I0521 23:40:48.435510       1 daemon_controller.go:294] "Starting daemon sets controller" logger="daemonset-controller"
I0521 23:40:48.435542       1 shared_informer.go:313] Waiting for caches to sync for daemon sets
I0521 23:40:48.481984       1 controllermanager.go:765] "Started controller" controller="persistentvolume-protection-controller"
I0521 23:40:48.482037       1 controllermanager.go:723] "Skipping a cloud provider controller" controller="node-route-controller"
I0521 23:40:48.482497       1 pv_protection_controller.go:81] "Starting PV protection controller" logger="persistentvolume-protection-controller"
I0521 23:40:48.482629       1 shared_informer.go:313] Waiting for caches to sync for PV protection
I0521 23:40:48.531406       1 controllermanager.go:765] "Started controller" controller="root-ca-certificate-publisher-controller"
I0521 23:40:48.531523       1 publisher.go:107] "Starting root CA cert publisher controller" logger="root-ca-certificate-publisher-controller"
I0521 23:40:48.531537       1 shared_informer.go:313] Waiting for caches to sync for crt configmap
I0521 23:40:48.531474       1 controllermanager.go:717] "Controller is disabled by a feature gate" controller="kube-apiserver-serving-clustertrustbundle-publisher-controller" requiredFeatureGates=["ClusterTrustBundle"]
I0521 23:40:48.532352       1 controllermanager.go:743] "Warning: skipping controller" controller="storage-version-migrator-controller"
I0521 23:40:48.623244       1 controllermanager.go:765] "Started controller" controller="endpoints-controller"
I0521 23:40:48.623836       1 endpoints_controller.go:182] "Starting endpoint controller" logger="endpoints-controller"
I0521 23:40:48.623862       1 shared_informer.go:313] Waiting for caches to sync for endpoint
I0521 23:40:48.689932       1 controllermanager.go:765] "Started controller" controller="job-controller"
I0521 23:40:48.690243       1 job_controller.go:243] "Starting job controller" logger="job-controller"
I0521 23:40:48.690271       1 shared_informer.go:313] Waiting for caches to sync for job
I0521 23:40:48.701921       1 controllermanager.go:765] "Started controller" controller="statefulset-controller"
I0521 23:40:48.702320       1 stateful_set.go:166] "Starting stateful set controller" logger="statefulset-controller"
I0521 23:40:48.702344       1 shared_informer.go:313] Waiting for caches to sync for stateful set
I0521 23:40:48.707854       1 controllermanager.go:765] "Started controller" controller="ephemeral-volume-controller"
I0521 23:40:48.707890       1 controllermanager.go:717] "Controller is disabled by a feature gate" controller="resourceclaim-controller" requiredFeatureGates=["DynamicResourceAllocation"]
I0521 23:40:48.708190       1 controller.go:173] "Starting ephemeral volume controller" logger="ephemeral-volume-controller"
I0521 23:40:48.708234       1 shared_informer.go:313] Waiting for caches to sync for ephemeral
I0521 23:40:48.725922       1 controllermanager.go:765] "Started controller" controller="taint-eviction-controller"
I0521 23:40:48.726354       1 taint_eviction.go:281] "Starting" logger="taint-eviction-controller" controller="taint-eviction-controller"
I0521 23:40:48.726519       1 taint_eviction.go:287] "Sending events to api server" logger="taint-eviction-controller"
I0521 23:40:48.726600       1 shared_informer.go:313] Waiting for caches to sync for taint-eviction-controller
I0521 23:40:48.808825       1 controllermanager.go:765] "Started controller" controller="endpointslice-mirroring-controller"
I0521 23:40:48.815069       1 endpointslicemirroring_controller.go:227] "Starting EndpointSliceMirroring controller" logger="endpointslice-mirroring-controller"
I0521 23:40:48.815202       1 shared_informer.go:313] Waiting for caches to sync for endpoint_slice_mirroring
I0521 23:40:48.848157       1 controllermanager.go:765] "Started controller" controller="replicationcontroller-controller"
I0521 23:40:48.848654       1 replica_set.go:217] "Starting controller" logger="replicationcontroller-controller" name="replicationcontroller"
I0521 23:40:48.848683       1 shared_informer.go:313] Waiting for caches to sync for ReplicationController
I0521 23:40:48.888638       1 controllermanager.go:765] "Started controller" controller="serviceaccount-controller"
I0521 23:40:48.889012       1 serviceaccounts_controller.go:114] "Starting service account controller" logger="serviceaccount-controller"
I0521 23:40:48.889034       1 shared_informer.go:313] Waiting for caches to sync for service account
I0521 23:40:48.910971       1 controllermanager.go:765] "Started controller" controller="persistentvolumeclaim-protection-controller"
I0521 23:40:48.911012       1 controllermanager.go:717] "Controller is disabled by a feature gate" controller="selinux-warning-controller" requiredFeatureGates=["SELinuxChangePolicy"]
I0521 23:40:48.911298       1 pvc_protection_controller.go:168] "Starting PVC protection controller" logger="persistentvolumeclaim-protection-controller"
I0521 23:40:48.911328       1 shared_informer.go:313] Waiting for caches to sync for PVC protection
I0521 23:40:48.915985       1 controllermanager.go:765] "Started controller" controller="deployment-controller"
I0521 23:40:48.916669       1 deployment_controller.go:173] "Starting controller" logger="deployment-controller" controller="deployment"
I0521 23:40:48.916697       1 shared_informer.go:313] Waiting for caches to sync for deployment
I0521 23:40:48.923807       1 controllermanager.go:765] "Started controller" controller="certificatesigningrequest-approving-controller"
I0521 23:40:48.923986       1 certificate_controller.go:120] "Starting certificate controller" logger="certificatesigningrequest-approving-controller" name="csrapproving"
I0521 23:40:48.924009       1 shared_informer.go:313] Waiting for caches to sync for certificate-csrapproving
I0521 23:40:48.947568       1 controllermanager.go:765] "Started controller" controller="ttl-controller"
I0521 23:40:48.949654       1 ttl_controller.go:127] "Starting TTL controller" logger="ttl-controller"
I0521 23:40:48.949684       1 shared_informer.go:313] Waiting for caches to sync for TTL
I0521 23:40:49.054436       1 controllermanager.go:765] "Started controller" controller="persistentvolume-binder-controller"
I0521 23:40:49.054942       1 pv_controller_base.go:308] "Starting persistent volume controller" logger="persistentvolume-binder-controller"
I0521 23:40:49.054963       1 shared_informer.go:313] Waiting for caches to sync for persistent volume
E0521 23:40:49.272873       1 namespaced_resources_deleter.go:162] "Unhandled Error" err="unable to get all supported resources from server: unable to retrieve the complete list of server APIs: metrics.k8s.io/v1beta1: stale GroupVersion discovery: metrics.k8s.io/v1beta1" logger="UnhandledError"
I0521 23:40:49.274783       1 controllermanager.go:765] "Started controller" controller="namespace-controller"
I0521 23:40:49.275115       1 namespace_controller.go:202] "Starting namespace controller" logger="namespace-controller"
I0521 23:40:49.275134       1 shared_informer.go:313] Waiting for caches to sync for namespace
I0521 23:40:49.289000       1 controllermanager.go:765] "Started controller" controller="persistentvolume-expander-controller"
I0521 23:40:49.289268       1 expand_controller.go:329] "Starting expand controller" logger="persistentvolume-expander-controller"
I0521 23:40:49.289287       1 shared_informer.go:313] Waiting for caches to sync for expand
I0521 23:40:49.303739       1 certificate_controller.go:120] "Starting certificate controller" logger="certificatesigningrequest-signing-controller" name="csrsigning-kubelet-serving"
I0521 23:40:49.303819       1 shared_informer.go:313] Waiting for caches to sync for certificate-csrsigning-kubelet-serving
I0521 23:40:49.303895       1 dynamic_serving_content.go:135] "Starting controller" name="csr-controller::/var/lib/minikube/certs/ca.crt::/var/lib/minikube/certs/ca.key"
I0521 23:40:49.304405       1 certificate_controller.go:120] "Starting certificate controller" logger="certificatesigningrequest-signing-controller" name="csrsigning-kubelet-client"
I0521 23:40:49.304442       1 shared_informer.go:313] Waiting for caches to sync for certificate-csrsigning-kubelet-client
I0521 23:40:49.304488       1 dynamic_serving_content.go:135] "Starting controller" name="csr-controller::/var/lib/minikube/certs/ca.crt::/var/lib/minikube/certs/ca.key"
I0521 23:40:49.305119       1 certificate_controller.go:120] "Starting certificate controller" logger="certificatesigningrequest-signing-controller" name="csrsigning-kube-apiserver-client"
I0521 23:40:49.305188       1 shared_informer.go:313] Waiting for caches to sync for certificate-csrsigning-kube-apiserver-client
I0521 23:40:49.305214       1 dynamic_serving_content.go:135] "Starting controller" name="csr-controller::/var/lib/minikube/certs/ca.crt::/var/lib/minikube/certs/ca.key"
I0521 23:40:49.306824       1 controllermanager.go:765] "Started controller" controller="certificatesigningrequest-signing-controller"
I0521 23:40:49.306887       1 certificate_controller.go:120] "Starting certificate controller" logger="certificatesigningrequest-signing-controller" name="csrsigning-legacy-unknown"
I0521 23:40:49.306915       1 shared_informer.go:313] Waiting for caches to sync for certificate-csrsigning-legacy-unknown
I0521 23:40:49.306949       1 dynamic_serving_content.go:135] "Starting controller" name="csr-controller::/var/lib/minikube/certs/ca.crt::/var/lib/minikube/certs/ca.key"
I0521 23:40:49.320219       1 controllermanager.go:765] "Started controller" controller="clusterrole-aggregation-controller"
I0521 23:40:49.320255       1 controllermanager.go:717] "Controller is disabled by a feature gate" controller="service-cidr-controller" requiredFeatureGates=["MultiCIDRServiceAllocator"]
I0521 23:40:49.320626       1 clusterroleaggregation_controller.go:194] "Starting ClusterRoleAggregator controller" logger="clusterrole-aggregation-controller"
I0521 23:40:49.320650       1 shared_informer.go:313] Waiting for caches to sync for ClusterRoleAggregator
I0521 23:40:49.331408       1 controllermanager.go:765] "Started controller" controller="ttl-after-finished-controller"
I0521 23:40:49.331451       1 ttlafterfinished_controller.go:112] "Starting TTL after finished controller" logger="ttl-after-finished-controller"
I0521 23:40:49.331473       1 shared_informer.go:313] Waiting for caches to sync for TTL after finished
E0521 23:40:49.424045       1 resource_quota_controller.go:175] "Unhandled Error" err="initial discovery check failure, continuing and counting on future sync update: unable to retrieve the complete list of server APIs: metrics.k8s.io/v1beta1: stale GroupVersion discovery: metrics.k8s.io/v1beta1" logger="UnhandledError"
I0521 23:40:49.425940       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="podtemplates"
I0521 23:40:49.426251       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="horizontalpodautoscalers.autoscaling"
I0521 23:40:49.426307       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="cronjobs.batch"
I0521 23:40:49.426335       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="poddisruptionbudgets.policy"
I0521 23:40:49.426357       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="statefulsets.apps"
I0521 23:40:49.426380       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="jobs.batch"
I0521 23:40:49.426433       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="ingresses.networking.k8s.io"
I0521 23:40:49.426471       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="leases.coordination.k8s.io"
I0521 23:40:49.426489       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="controllerrevisions.apps"
I0521 23:40:49.426517       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="deployments.apps"
I0521 23:40:49.426577       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="roles.rbac.authorization.k8s.io"
I0521 23:40:49.426613       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="endpointslices.discovery.k8s.io"
I0521 23:40:49.426655       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="csistoragecapacities.storage.k8s.io"
W0521 23:40:49.427732       1 shared_informer.go:597] resyncPeriod 18h52m8.940697856s is smaller than resyncCheckPeriod 22h51m46.856534117s and the informer has already started. Changing it to 22h51m46.856534117s
I0521 23:40:49.427859       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="limitranges"
I0521 23:40:49.427881       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="daemonsets.apps"
I0521 23:40:49.427895       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="replicasets.apps"
I0521 23:40:49.427920       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="networkpolicies.networking.k8s.io"
I0521 23:40:49.427935       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="endpoints"
W0521 23:40:49.427949       1 shared_informer.go:597] resyncPeriod 17h59m6.36541074s is smaller than resyncCheckPeriod 22h51m46.856534117s and the informer has already started. Changing it to 22h51m46.856534117s
I0521 23:40:49.427996       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="serviceaccounts"
I0521 23:40:49.428091       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="rolebindings.rbac.authorization.k8s.io"
I0521 23:40:49.428117       1 controllermanager.go:765] "Started controller" controller="resourcequota-controller"
I0521 23:40:49.428374       1 resource_quota_controller.go:300] "Starting resource quota controller" logger="resourcequota-controller"
I0521 23:40:49.428394       1 shared_informer.go:313] Waiting for caches to sync for resource quota
I0521 23:40:49.428578       1 resource_quota_monitor.go:308] "QuotaMonitor running" logger="resourcequota-controller"
E0521 23:40:49.443419       1 resource_quota_controller.go:446] "Unhandled Error" err="unable to retrieve the complete list of server APIs: metrics.k8s.io/v1beta1: stale GroupVersion discovery: metrics.k8s.io/v1beta1" logger="UnhandledError"
I0521 23:40:49.668332       1 horizontal.go:201] "Starting HPA controller" logger="horizontal-pod-autoscaler-controller"
I0521 23:40:49.668429       1 shared_informer.go:313] Waiting for caches to sync for HPA
I0521 23:40:49.668496       1 controllermanager.go:765] "Started controller" controller="horizontal-pod-autoscaler-controller"
I0521 23:40:49.717795       1 node_lifecycle_controller.go:432] "Controller will reconcile labels" logger="node-lifecycle-controller"
I0521 23:40:49.717868       1 controllermanager.go:765] "Started controller" controller="node-lifecycle-controller"
I0521 23:40:49.717883       1 controllermanager.go:723] "Skipping a cloud provider controller" controller="service-lb-controller"
I0521 23:40:49.718140       1 node_lifecycle_controller.go:466] "Sending events to api server" logger="node-lifecycle-controller"
I0521 23:40:49.718164       1 node_lifecycle_controller.go:477] "Starting node controller" logger="node-lifecycle-controller"
I0521 23:40:49.718172       1 shared_informer.go:313] Waiting for caches to sync for taint
I0521 23:40:49.737187       1 controllermanager.go:765] "Started controller" controller="certificatesigningrequest-cleaner-controller"
I0521 23:40:49.737542       1 cleaner.go:83] "Starting CSR cleaner controller" logger="certificatesigningrequest-cleaner-controller"
I0521 23:40:49.802493       1 controllermanager.go:765] "Started controller" controller="bootstrap-signer-controller"
I0521 23:40:49.802867       1 shared_informer.go:313] Waiting for caches to sync for bootstrap_signer
I0521 23:40:49.852404       1 controllermanager.go:765] "Started controller" controller="token-cleaner-controller"
I0521 23:40:49.853345       1 tokencleaner.go:117] "Starting token cleaner controller" logger="token-cleaner-controller"
I0521 23:40:49.853565       1 shared_informer.go:313] Waiting for caches to sync for token_cleaner
I0521 23:40:49.853594       1 shared_informer.go:320] Caches are synced for token_cleaner
W0521 23:40:49.915912       1 type.go:183] The watchlist request for nodes ended with an error, falling back to the standard LIST semantics, err = nodes is forbidden: User "system:serviceaccount:kube-system:node-controller" cannot watch resource "nodes" in API group "" at the cluster scope
I0521 23:40:49.926778       1 range_allocator.go:112] "No Secondary Service CIDR provided. Skipping filtering out secondary service addresses" logger="node-ipam-controller"
I0521 23:40:49.926862       1 controllermanager.go:765] "Started controller" controller="node-ipam-controller"
I0521 23:40:49.927169       1 node_ipam_controller.go:141] "Starting ipam controller" logger="node-ipam-controller"
I0521 23:40:49.927190       1 shared_informer.go:313] Waiting for caches to sync for node
I0521 23:40:49.945591       1 controllermanager.go:765] "Started controller" controller="garbage-collector-controller"
I0521 23:40:49.945855       1 garbagecollector.go:144] "Starting controller" logger="garbage-collector-controller" controller="garbagecollector"
I0521 23:40:49.945877       1 shared_informer.go:313] Waiting for caches to sync for garbage collector
I0521 23:40:49.946098       1 graph_builder.go:351] "Running" logger="garbage-collector-controller" component="GraphBuilder"
I0521 23:40:49.960418       1 controllermanager.go:765] "Started controller" controller="replicaset-controller"
I0521 23:40:49.960938       1 replica_set.go:217] "Starting controller" logger="replicaset-controller" name="replicaset"
I0521 23:40:49.960959       1 shared_informer.go:313] Waiting for caches to sync for ReplicaSet
I0521 23:40:49.985944       1 controllermanager.go:765] "Started controller" controller="disruption-controller"
I0521 23:40:49.986171       1 disruption.go:452] "Sending events to api server." logger="disruption-controller"
I0521 23:40:49.986205       1 disruption.go:463] "Starting disruption controller" logger="disruption-controller"
I0521 23:40:49.986214       1 shared_informer.go:313] Waiting for caches to sync for disruption
I0521 23:40:49.995568       1 controllermanager.go:765] "Started controller" controller="cronjob-controller"
I0521 23:40:50.007079       1 cronjob_controllerv2.go:145] "Starting cronjob controller v2" logger="cronjob-controller"
I0521 23:40:50.046027       1 shared_informer.go:313] Waiting for caches to sync for cronjob
I0521 23:40:50.016360       1 garbagecollector.go:787] "failed to discover some groups" logger="garbage-collector-controller" groups="map[\"metrics.k8s.io/v1beta1\":\"stale GroupVersion discovery: metrics.k8s.io/v1beta1\"]"
I0521 23:40:50.134609       1 controllermanager.go:765] "Started controller" controller="validatingadmissionpolicy-status-controller"
I0521 23:40:50.134696       1 controllermanager.go:723] "Skipping a cloud provider controller" controller="cloud-node-lifecycle-controller"
I0521 23:40:50.135147       1 shared_informer.go:313] Waiting for caches to sync for validatingadmissionpolicy-status
I0521 23:40:50.161871       1 controllermanager.go:765] "Started controller" controller="persistentvolume-attach-detach-controller"
I0521 23:40:50.161913       1 controllermanager.go:717] "Controller is disabled by a feature gate" controller="volumeattributesclass-protection-controller" requiredFeatureGates=["VolumeAttributesClass"]
I0521 23:40:50.161936       1 controllermanager.go:717] "Controller is disabled by a feature gate" controller="storageversion-garbage-collector-controller" requiredFeatureGates=["APIServerIdentity","StorageVersionAPI"]
I0521 23:40:50.186863       1 attach_detach_controller.go:338] "Starting attach detach controller" logger="persistentvolume-attach-detach-controller"
I0521 23:40:50.187056       1 shared_informer.go:313] Waiting for caches to sync for attach detach
I0521 23:40:50.233071       1 shared_informer.go:313] Waiting for caches to sync for resource quota
I0521 23:40:50.327577       1 job_controller.go:598] "enqueueing job" logger="job-controller" key="ingress-nginx/ingress-nginx-admission-create" delay="0s"
I0521 23:40:50.327667       1 job_controller.go:598] "enqueueing job" logger="job-controller" key="ingress-nginx/ingress-nginx-admission-patch" delay="0s"
I0521 23:40:50.332845       1 shared_informer.go:320] Caches are synced for TTL after finished
I0521 23:40:50.341103       1 shared_informer.go:320] Caches are synced for validatingadmissionpolicy-status
I0521 23:40:50.391497       1 shared_informer.go:320] Caches are synced for expand
I0521 23:40:50.397244       1 actual_state_of_world.go:541] "Failed to update statusUpdateNeeded field in actual state of world" logger="persistentvolume-attach-detach-controller" err="Failed to set statusUpdateNeeded to needed true, because nodeName=\"minikube\" does not exist"
I0521 23:40:50.414058       1 shared_informer.go:313] Waiting for caches to sync for garbage collector
I0521 23:40:50.433248       1 shared_informer.go:320] Caches are synced for node
I0521 23:40:50.433542       1 range_allocator.go:177] "Sending events to api server" logger="node-ipam-controller"
I0521 23:40:50.433629       1 range_allocator.go:183] "Starting range CIDR allocator" logger="node-ipam-controller"
I0521 23:40:50.433674       1 shared_informer.go:313] Waiting for caches to sync for cidrallocator
I0521 23:40:50.433695       1 shared_informer.go:320] Caches are synced for cidrallocator
I0521 23:40:50.433871       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="minikube"
I0521 23:40:50.454425       1 shared_informer.go:320] Caches are synced for TTL
I0521 23:40:50.470705       1 shared_informer.go:320] Caches are synced for cronjob
I0521 23:40:50.532448       1 shared_informer.go:320] Caches are synced for certificate-csrsigning-kubelet-serving
I0521 23:40:50.532514       1 shared_informer.go:320] Caches are synced for certificate-csrsigning-kubelet-client
I0521 23:40:50.532535       1 shared_informer.go:320] Caches are synced for certificate-csrsigning-kube-apiserver-client
I0521 23:40:50.532551       1 shared_informer.go:320] Caches are synced for certificate-csrsigning-legacy-unknown
I0521 23:40:50.532598       1 shared_informer.go:320] Caches are synced for ClusterRoleAggregator
I0521 23:40:50.534834       1 shared_informer.go:320] Caches are synced for certificate-csrapproving
I0521 23:40:50.622161       1 shared_informer.go:320] Caches are synced for endpoint_slice_mirroring
I0521 23:40:50.628979       1 shared_informer.go:320] Caches are synced for namespace
I0521 23:40:50.629011       1 shared_informer.go:320] Caches are synced for bootstrap_signer
I0521 23:40:50.629027       1 shared_informer.go:320] Caches are synced for PV protection
I0521 23:40:50.642401       1 shared_informer.go:320] Caches are synced for crt configmap
I0521 23:40:50.723961       1 shared_informer.go:320] Caches are synced for service account
I0521 23:40:50.728850       1 job_controller.go:598] "enqueueing job" logger="job-controller" key="ingress-nginx/ingress-nginx-admission-create" delay="1s"
I0521 23:40:50.729405       1 job_controller.go:598] "enqueueing job" logger="job-controller" key="ingress-nginx/ingress-nginx-admission-patch" delay="1s"
I0521 23:40:50.733988       1 shared_informer.go:320] Caches are synced for resource quota
I0521 23:40:50.736011       1 shared_informer.go:320] Caches are synced for daemon sets
I0521 23:40:50.756615       1 shared_informer.go:320] Caches are synced for garbage collector
I0521 23:40:50.757706       1 garbagecollector.go:154] "Garbage collector: all resource monitors have synced" logger="garbage-collector-controller"
I0521 23:40:50.757770       1 garbagecollector.go:157] "Proceeding to collect garbage" logger="garbage-collector-controller"
I0521 23:40:50.770825       1 shared_informer.go:320] Caches are synced for HPA
I0521 23:40:50.771281       1 shared_informer.go:320] Caches are synced for persistent volume
I0521 23:40:50.772834       1 shared_informer.go:320] Caches are synced for ReplicationController
I0521 23:40:50.772508       1 shared_informer.go:320] Caches are synced for ReplicaSet
I0521 23:40:50.808564       1 shared_informer.go:320] Caches are synced for ephemeral
I0521 23:40:50.809426       1 shared_informer.go:320] Caches are synced for job
I0521 23:40:50.809514       1 shared_informer.go:320] Caches are synced for GC
I0521 23:40:50.809591       1 shared_informer.go:320] Caches are synced for disruption
I0521 23:40:50.809621       1 shared_informer.go:320] Caches are synced for attach detach
I0521 23:40:50.818419       1 shared_informer.go:320] Caches are synced for taint
I0521 23:40:50.818530       1 node_lifecycle_controller.go:1234] "Initializing eviction metric for zone" logger="node-lifecycle-controller" zone=""
I0521 23:40:50.818608       1 node_lifecycle_controller.go:886] "Missing timestamp for Node. Assuming now as a timestamp" logger="node-lifecycle-controller" node="minikube"
I0521 23:40:50.818687       1 node_lifecycle_controller.go:1080] "Controller detected that zone is now in new state" logger="node-lifecycle-controller" zone="" newState="Normal"
I0521 23:40:50.818747       1 shared_informer.go:320] Caches are synced for endpoint_slice
I0521 23:40:50.818799       1 shared_informer.go:320] Caches are synced for stateful set
I0521 23:40:50.818817       1 shared_informer.go:320] Caches are synced for legacy-service-account-token-cleaner
I0521 23:40:50.819257       1 shared_informer.go:320] Caches are synced for garbage collector
I0521 23:40:50.819284       1 shared_informer.go:320] Caches are synced for deployment
I0521 23:40:50.827967       1 shared_informer.go:320] Caches are synced for taint-eviction-controller
I0521 23:40:50.828372       1 shared_informer.go:320] Caches are synced for PVC protection
I0521 23:40:50.828676       1 shared_informer.go:320] Caches are synced for resource quota
I0521 23:40:50.845248       1 shared_informer.go:320] Caches are synced for endpoint
I0521 23:40:51.217272       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubernetes-dashboard/dashboard-metrics-scraper-5d59dccf9b" duration="408.486599ms"
I0521 23:40:51.259793       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/metrics-server-7fbb699795" duration="451.5714ms"
I0521 23:40:51.259911       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubernetes-dashboard/dashboard-metrics-scraper-5d59dccf9b" duration="71.822µs"
I0521 23:40:51.259956       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/metrics-server-7fbb699795" duration="30.11µs"
I0521 23:40:51.260114       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubernetes-dashboard/kubernetes-dashboard-7779f9b69b" duration="441.955021ms"
I0521 23:40:51.260210       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubernetes-dashboard/kubernetes-dashboard-7779f9b69b" duration="32.699µs"
I0521 23:40:51.260366       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/registry-6c86875c6f" duration="451.738252ms"
I0521 23:40:51.260432       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/registry-6c86875c6f" duration="50.439µs"
I0521 23:40:51.338089       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-668d6bf9bc" duration="564.480241ms"
I0521 23:40:51.338373       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-668d6bf9bc" duration="144.413µs"
I0521 23:40:51.631030       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="ingress-nginx/ingress-nginx-controller-56d7c84fd4" duration="413.704438ms"
I0521 23:40:51.631190       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="ingress-nginx/ingress-nginx-controller-56d7c84fd4" duration="106.248µs"
I0521 23:40:55.100418       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/metrics-server-7fbb699795" duration="116.536µs"
I0521 23:41:01.796365       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/registry-6c86875c6f" duration="54.70229ms"
I0521 23:41:01.804248       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/registry-6c86875c6f" duration="182.676µs"
I0521 23:41:01.871659       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-668d6bf9bc" duration="105.305µs"
I0521 23:41:03.116011       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubernetes-dashboard/kubernetes-dashboard-7779f9b69b" duration="15.237627ms"
I0521 23:41:03.117735       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubernetes-dashboard/kubernetes-dashboard-7779f9b69b" duration="47.228µs"
I0521 23:41:03.229633       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubernetes-dashboard/dashboard-metrics-scraper-5d59dccf9b" duration="37.862435ms"
I0521 23:41:03.229814       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubernetes-dashboard/dashboard-metrics-scraper-5d59dccf9b" duration="94.745µs"
I0521 23:41:03.507892       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="ingress-nginx/ingress-nginx-controller-56d7c84fd4" duration="168.756µs"
E0521 23:41:22.103997       1 resource_quota_controller.go:446] "Unhandled Error" err="unable to retrieve the complete list of server APIs: metrics.k8s.io/v1beta1: stale GroupVersion discovery: metrics.k8s.io/v1beta1" logger="UnhandledError"
I0521 23:41:22.190791       1 garbagecollector.go:787] "failed to discover some groups" logger="garbage-collector-controller" groups="map[\"metrics.k8s.io/v1beta1\":\"stale GroupVersion discovery: metrics.k8s.io/v1beta1\"]"
I0521 23:41:31.702142       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/metrics-server-7fbb699795" duration="104.913µs"
I0521 23:41:32.981850       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/metrics-server-7fbb699795" duration="30.89216ms"
I0521 23:41:32.982005       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/metrics-server-7fbb699795" duration="87.731µs"
I0521 23:41:33.063842       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubernetes-dashboard/kubernetes-dashboard-7779f9b69b" duration="45.336721ms"
I0521 23:41:33.064542       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubernetes-dashboard/kubernetes-dashboard-7779f9b69b" duration="118.927µs"
I0521 23:41:35.927824       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-668d6bf9bc" duration="18.446221ms"
I0521 23:41:35.928232       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-668d6bf9bc" duration="334.416µs"
I0521 23:41:35.987181       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="ingress-nginx/ingress-nginx-controller-56d7c84fd4" duration="52.534526ms"
I0521 23:41:35.990168       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="ingress-nginx/ingress-nginx-controller-56d7c84fd4" duration="126.798µs"
I0521 23:41:43.458839       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubernetes-dashboard/kubernetes-dashboard-7779f9b69b" duration="51.545µs"
I0521 23:41:43.940936       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubernetes-dashboard/kubernetes-dashboard-7779f9b69b" duration="47.146354ms"
I0521 23:41:43.941077       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubernetes-dashboard/kubernetes-dashboard-7779f9b69b" duration="80.629µs"
==== END logs for container kube-controller-manager of pod kube-system/kube-controller-manager-minikube ====
==== START logs for container minikube-ingress-dns of pod kube-system/kube-ingress-dns-minikube ====
yarn run v1.22.18
$ node src/index.js
Listening to 192.168.49.2 on port 53
==== END logs for container minikube-ingress-dns of pod kube-system/kube-ingress-dns-minikube ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-sx592 ====
I0521 23:41:00.291176       1 server_linux.go:66] "Using iptables proxy"
I0521 23:41:02.145623       1 server.go:698] "Successfully retrieved node IP(s)" IPs=["192.168.49.2"]
E0521 23:41:02.145703       1 server.go:234] "Kube-proxy configuration may be incomplete or incorrect" err="nodePortAddresses is unset; NodePort connections will be accepted on all local IPs. Consider using `--nodeport-addresses primary`"
I0521 23:41:02.210576       1 server.go:243] "kube-proxy running in dual-stack mode" primary ipFamily="IPv4"
I0521 23:41:02.210906       1 server_linux.go:170] "Using iptables Proxier"
I0521 23:41:02.223404       1 proxier.go:255] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses" ipFamily="IPv4"
E0521 23:41:02.255420       1 proxier.go:283] "Failed to create nfacct runner, nfacct based metrics won't be available" err="nfacct sub-system not available" ipFamily="IPv4"
E0521 23:41:02.277155       1 proxier.go:283] "Failed to create nfacct runner, nfacct based metrics won't be available" err="nfacct sub-system not available" ipFamily="IPv6"
I0521 23:41:02.277702       1 server.go:497] "Version info" version="v1.32.0"
I0521 23:41:02.277935       1 server.go:499] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
E0521 23:41:02.297569       1 metrics.go:340] "failed to initialize nfacct client" err="nfacct sub-system not available"
E0521 23:41:02.322589       1 metrics.go:340] "failed to initialize nfacct client" err="nfacct sub-system not available"
I0521 23:41:02.325358       1 config.go:199] "Starting service config controller"
I0521 23:41:02.325619       1 shared_informer.go:313] Waiting for caches to sync for service config
I0521 23:41:02.326054       1 config.go:105] "Starting endpoint slice config controller"
I0521 23:41:02.326339       1 shared_informer.go:313] Waiting for caches to sync for endpoint slice config
I0521 23:41:02.332763       1 config.go:329] "Starting node config controller"
I0521 23:41:02.332835       1 shared_informer.go:313] Waiting for caches to sync for node config
I0521 23:41:02.429416       1 shared_informer.go:320] Caches are synced for service config
I0521 23:41:02.429934       1 shared_informer.go:320] Caches are synced for endpoint slice config
I0521 23:41:02.442530       1 shared_informer.go:320] Caches are synced for node config
==== END logs for container kube-proxy of pod kube-system/kube-proxy-sx592 ====
==== START logs for container kube-scheduler of pod kube-system/kube-scheduler-minikube ====
I0521 23:40:33.291480       1 serving.go:386] Generated self-signed cert in-memory
W0521 23:40:37.980223       1 requestheader_controller.go:204] Unable to get configmap/extension-apiserver-authentication in kube-system.  Usually fixed by 'kubectl create rolebinding -n kube-system ROLEBINDING_NAME --role=extension-apiserver-authentication-reader --serviceaccount=YOUR_NS:YOUR_SA'
W0521 23:40:37.980368       1 authentication.go:397] Error looking up in-cluster authentication configuration: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot get resource "configmaps" in API group "" in the namespace "kube-system"
W0521 23:40:37.980502       1 authentication.go:398] Continuing without authentication configuration. This may treat all requests as anonymous.
W0521 23:40:37.980540       1 authentication.go:399] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false
I0521 23:40:38.330892       1 server.go:166] "Starting Kubernetes Scheduler" version="v1.32.0"
I0521 23:40:38.330964       1 server.go:168] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0521 23:40:38.355810       1 secure_serving.go:213] Serving securely on 127.0.0.1:10259
I0521 23:40:38.355982       1 configmap_cafile_content.go:205] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I0521 23:40:38.356028       1 shared_informer.go:313] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I0521 23:40:38.356057       1 tlsconfig.go:243] "Starting DynamicServingCertificateController"
W0521 23:40:38.441737       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E0521 23:40:38.441840       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"statefulsets\" in API group \"apps\" at the cluster scope" logger="UnhandledError"
W0521 23:40:38.442075       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E0521 23:40:38.442111       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csinodes\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError"
W0521 23:40:38.442292       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0521 23:40:38.442394       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csidrivers\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError"
W0521 23:40:38.442567       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0521 23:40:38.442628       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csistoragecapacities\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError"
W0521 23:40:38.442841       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0521 23:40:38.442905       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumeclaims\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0521 23:40:38.443056       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0521 23:40:38.443093       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"storageclasses\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError"
W0521 23:40:38.443704       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0521 23:40:38.443749       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumes\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0521 23:40:38.444134       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W0521 23:40:38.444360       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0521 23:40:38.444429       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User \"system:kube-scheduler\" cannot list resource \"pods\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0521 23:40:38.444525       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.VolumeAttachment: volumeattachments.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "volumeattachments" in API group "storage.k8s.io" at the cluster scope
E0521 23:40:38.444555       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.VolumeAttachment: failed to list *v1.VolumeAttachment: volumeattachments.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"volumeattachments\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError"
W0521 23:40:38.444585       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0521 23:40:38.444604       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User \"system:kube-scheduler\" cannot list resource \"nodes\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0521 23:40:38.444624       1 reflector.go:569] runtime/asm_amd64.s:1700: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0521 23:40:38.444641       1 reflector.go:166] "Unhandled Error" err="runtime/asm_amd64.s:1700: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps \"extension-apiserver-authentication\" is forbidden: User \"system:kube-scheduler\" cannot list resource \"configmaps\" in API group \"\" in the namespace \"kube-system\"" logger="UnhandledError"
W0521 23:40:38.444726       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0521 23:40:38.444749       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicationcontrollers\" in API group \"\" at the cluster scope" logger="UnhandledError"
E0521 23:40:38.444814       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User \"system:kube-scheduler\" cannot list resource \"poddisruptionbudgets\" in API group \"policy\" at the cluster scope" logger="UnhandledError"
W0521 23:40:38.444921       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0521 23:40:38.444949       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicasets\" in API group \"apps\" at the cluster scope" logger="UnhandledError"
W0521 23:40:38.445023       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0521 23:40:38.445048       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User \"system:kube-scheduler\" cannot list resource \"services\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0521 23:40:38.445272       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0521 23:40:38.445306       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User \"system:kube-scheduler\" cannot list resource \"namespaces\" in API group \"\" at the cluster scope" logger="UnhandledError"
I0521 23:40:39.766232       1 shared_informer.go:320] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
==== END logs for container kube-scheduler of pod kube-system/kube-scheduler-minikube ====
==== START logs for container metrics-server of pod kube-system/metrics-server-7fbb699795-6h8fd ====
I0521 23:41:32.565091       1 handler.go:275] Adding GroupVersion metrics.k8s.io v1beta1 to ResourceManager
I0521 23:41:32.683690       1 secure_serving.go:213] Serving securely on [::]:4443
I0521 23:41:32.684168       1 dynamic_serving_content.go:132] "Starting controller" name="serving-cert::/tmp/apiserver.crt::/tmp/apiserver.key"
I0521 23:41:32.686484       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I0521 23:41:32.686518       1 requestheader_controller.go:169] Starting RequestHeaderAuthRequestController
I0521 23:41:32.687369       1 shared_informer.go:311] Waiting for caches to sync for RequestHeaderAuthRequestController
I0521 23:41:32.686579       1 configmap_cafile_content.go:202] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I0521 23:41:32.687668       1 shared_informer.go:311] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I0521 23:41:32.686593       1 configmap_cafile_content.go:202] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::requestheader-client-ca-file"
I0521 23:41:32.687913       1 shared_informer.go:311] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::requestheader-client-ca-file
I0521 23:41:32.702231       1 server.go:191] "Failed probe" probe="metric-storage-ready" err="no metrics to serve"
I0521 23:41:32.788255       1 shared_informer.go:318] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::requestheader-client-ca-file
I0521 23:41:32.788329       1 shared_informer.go:318] Caches are synced for RequestHeaderAuthRequestController
I0521 23:41:32.790799       1 shared_informer.go:318] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
==== END logs for container metrics-server of pod kube-system/metrics-server-7fbb699795-6h8fd ====
==== START logs for container registry of pod kube-system/registry-6c86875c6f-776j6 ====
time="2025-05-21T23:40:58Z" level=warning msg="Ignoring unrecognized environment variable REGISTRY_PORT" 
time="2025-05-21T23:40:58Z" level=warning msg="Ignoring unrecognized environment variable REGISTRY_PORT_443_TCP" 
time="2025-05-21T23:40:58Z" level=warning msg="Ignoring unrecognized environment variable REGISTRY_PORT_443_TCP_ADDR" 
time="2025-05-21T23:40:58Z" level=warning msg="Ignoring unrecognized environment variable REGISTRY_PORT_443_TCP_PORT" 
time="2025-05-21T23:40:58Z" level=warning msg="Ignoring unrecognized environment variable REGISTRY_PORT_443_TCP_PROTO" 
time="2025-05-21T23:40:58Z" level=warning msg="Ignoring unrecognized environment variable REGISTRY_PORT_80_TCP" 
time="2025-05-21T23:40:58Z" level=warning msg="Ignoring unrecognized environment variable REGISTRY_PORT_80_TCP_ADDR" 
time="2025-05-21T23:40:58Z" level=warning msg="Ignoring unrecognized environment variable REGISTRY_PORT_80_TCP_PORT" 
time="2025-05-21T23:40:58Z" level=warning msg="Ignoring unrecognized environment variable REGISTRY_PORT_80_TCP_PROTO" 
time="2025-05-21T23:40:58Z" level=warning msg="Ignoring unrecognized environment variable REGISTRY_SERVICE_HOST" 
time="2025-05-21T23:40:58Z" level=warning msg="Ignoring unrecognized environment variable REGISTRY_SERVICE_PORT" 
time="2025-05-21T23:40:58Z" level=warning msg="Ignoring unrecognized environment variable REGISTRY_SERVICE_PORT_HTTP" 
time="2025-05-21T23:40:58Z" level=warning msg="Ignoring unrecognized environment variable REGISTRY_SERVICE_PORT_HTTPS" 
time="2025-05-21T23:40:58.473021061Z" level=warning msg="No HTTP secret provided - generated random secret. This may cause problems with uploads if multiple registries are behind a load-balancer. To provide a shared secret, fill in http.secret in the configuration file or set the REGISTRY_HTTP_SECRET environment variable." go.version=go1.20.8 instance.id=151907f6-55fc-4f3e-ba2e-4ce1ce94bab0 service=registry version=2.8.3 
time="2025-05-21T23:40:58.473071361Z" level=info msg="redis not configured" go.version=go1.20.8 instance.id=151907f6-55fc-4f3e-ba2e-4ce1ce94bab0 service=registry version=2.8.3 
time="2025-05-21T23:40:58.479419701Z" level=info msg="Starting upload purge in 20m0s" go.version=go1.20.8 instance.id=151907f6-55fc-4f3e-ba2e-4ce1ce94bab0 service=registry version=2.8.3 
time="2025-05-21T23:40:58.483371754Z" level=info msg="using inmemory blob descriptor cache" go.version=go1.20.8 instance.id=151907f6-55fc-4f3e-ba2e-4ce1ce94bab0 service=registry version=2.8.3 
time="2025-05-21T23:40:58.483911045Z" level=info msg="listening on [::]:5000" go.version=go1.20.8 instance.id=151907f6-55fc-4f3e-ba2e-4ce1ce94bab0 service=registry version=2.8.3 
10.244.0.113 - - [21/May/2025:23:41:39 +0000] "GET / HTTP/1.1" 200 0 "" "curl/8.10.1"
==== END logs for container registry of pod kube-system/registry-6c86875c6f-776j6 ====
==== START logs for container registry-proxy of pod kube-system/registry-proxy-jxnpg ====
waiting for the registry (registry.kube-system.svc.cluster.local:80) to come online...
waiting for the registry (registry.kube-system.svc.cluster.local:80) to come online...
waiting for the registry (registry.kube-system.svc.cluster.local:80) to come online...
waiting for the registry (registry.kube-system.svc.cluster.local:80) to come online...
waiting for the registry (registry.kube-system.svc.cluster.local:80) to come online...
waiting for the registry (registry.kube-system.svc.cluster.local:80) to come online...
waiting for the registry (registry.kube-system.svc.cluster.local:80) to come online...
waiting for the registry (registry.kube-system.svc.cluster.local:80) to come online...
waiting for the registry (registry.kube-system.svc.cluster.local:80) to come online...
waiting for the registry (registry.kube-system.svc.cluster.local:80) to come online...
waiting for the registry (registry.kube-system.svc.cluster.local:80) to come online...
starting proxy...
==== END logs for container registry-proxy of pod kube-system/registry-proxy-jxnpg ====
==== START logs for container storage-provisioner of pod kube-system/storage-provisioner ====
I0521 23:41:38.636914       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...
I0521 23:41:38.657810       1 storage_provisioner.go:141] Storage provisioner initialized, now starting service!
I0521 23:41:38.658761       1 leaderelection.go:243] attempting to acquire leader lease kube-system/k8s.io-minikube-hostpath...
I0521 23:41:56.134065       1 leaderelection.go:253] successfully acquired lease kube-system/k8s.io-minikube-hostpath
I0521 23:41:56.134485       1 controller.go:835] Starting provisioner controller k8s.io/minikube-hostpath_minikube_2b4be814-5ab0-45d6-915f-efd3d63f6baa!
I0521 23:41:56.139001       1 event.go:282] Event(v1.ObjectReference{Kind:"Endpoints", Namespace:"kube-system", Name:"k8s.io-minikube-hostpath", UID:"cdc895f7-fd15-471d-a95a-e9d716349567", APIVersion:"v1", ResourceVersion:"41975", FieldPath:""}): type: 'Normal' reason: 'LeaderElection' minikube_2b4be814-5ab0-45d6-915f-efd3d63f6baa became leader
I0521 23:41:56.237774       1 controller.go:884] Started provisioner controller k8s.io/minikube-hostpath_minikube_2b4be814-5ab0-45d6-915f-efd3d63f6baa!
==== END logs for container storage-provisioner of pod kube-system/storage-provisioner ====
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "42139"
    },
    "items": [
        {
            "metadata": {
                "name": "minikube.1841af40ebd0a0b0",
                "namespace": "default",
                "uid": "394f923f-f42d-464a-9f0f-fe2ec082be35",
                "resourceVersion": "41701",
                "creationTimestamp": "2025-05-21T23:40:38Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "minikube",
                "uid": "minikube"
            },
            "reason": "PossibleMemoryBackedVolumesOnDisk",
            "message": "The tmpfs noswap option is not supported. Memory-backed volumes (e.g. secrets, emptyDirs, etc.) might be swapped to disk and should no longer be considered secure.",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:23Z",
            "lastTimestamp": "2025-05-21T23:40:23Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "minikube.1841af40ed9fbf31",
                "namespace": "default",
                "uid": "a9719587-e456-4248-9e9d-0b52dbab00e5",
                "resourceVersion": "41703",
                "creationTimestamp": "2025-05-21T23:40:38Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "minikube",
                "uid": "minikube"
            },
            "reason": "Starting",
            "message": "Starting kubelet.",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:23Z",
            "lastTimestamp": "2025-05-21T23:40:23Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "minikube.1841af40edc33b0c",
                "namespace": "default",
                "uid": "b836f0e5-8873-4a6f-a084-147fddcf03ec",
                "resourceVersion": "41706",
                "creationTimestamp": "2025-05-21T23:40:38Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "minikube",
                "uid": "minikube"
            },
            "reason": "CgroupV1",
            "message": "cgroup v1 support is in maintenance mode, please migrate to cgroup v2",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:23Z",
            "lastTimestamp": "2025-05-21T23:40:23Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "minikube.1841af4104709651",
                "namespace": "default",
                "uid": "22df4e5b-da3e-42f0-a104-c6abce7d1355",
                "resourceVersion": "41745",
                "creationTimestamp": "2025-05-21T23:40:38Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "minikube",
                "uid": "minikube"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node minikube status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:24Z",
            "lastTimestamp": "2025-05-21T23:40:24Z",
            "count": 8,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "minikube.1841af410470bd51",
                "namespace": "default",
                "uid": "b7668040-7805-40a8-89ae-2448f625f001",
                "resourceVersion": "41747",
                "creationTimestamp": "2025-05-21T23:40:38Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "minikube",
                "uid": "minikube"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node minikube status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:24Z",
            "lastTimestamp": "2025-05-21T23:40:24Z",
            "count": 8,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "minikube.1841af410470d431",
                "namespace": "default",
                "uid": "afc655f1-fea6-49b9-8933-9274ccee80cd",
                "resourceVersion": "41743",
                "creationTimestamp": "2025-05-21T23:40:38Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "minikube",
                "uid": "minikube"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node minikube status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:24Z",
            "lastTimestamp": "2025-05-21T23:40:24Z",
            "count": 7,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "minikube.1841af410d680dd3",
                "namespace": "default",
                "uid": "9995147f-6746-4d0d-805f-10241bf19625",
                "resourceVersion": "41714",
                "creationTimestamp": "2025-05-21T23:40:39Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "minikube",
                "uid": "minikube"
            },
            "reason": "NodeAllocatableEnforced",
            "message": "Updated Node Allocatable limit across pods",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2025-05-21T23:40:24Z",
            "lastTimestamp": "2025-05-21T23:40:24Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "minikube.1841af47384c10b1",
                "namespace": "default",
                "uid": "20376af9-8dc8-4b2e-aa0c-79429f8b0ef4",
                "resourceVersion": "41790",
                "creationTimestamp": "2025-05-21T23:40:50Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "minikube",
                "uid": "2303f334-d287-4949-981f-a70c2fc35815",
                "apiVersion": "v1"
            },
            "reason": "RegisteredNode",
            "message": "Node minikube event: Registered Node minikube in Controller",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2025-05-21T23:40:50Z",
            "lastTimestamp": "2025-05-21T23:40:50Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "node-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "minikube.1841af49e626c991",
                "namespace": "default",
                "uid": "0163a8b6-caa0-4f8c-88f8-bdc3181f6be2",
                "resourceVersion": "41868",
                "creationTimestamp": "2025-05-21T23:41:02Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "minikube",
                "uid": "minikube"
            },
            "reason": "Starting",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Normal",
            "eventTime": "2025-05-21T23:41:02.325236Z",
            "action": "StartKubeProxy",
            "reportingComponent": "kube-proxy",
            "reportingInstance": "kube-proxy-minikube"
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "42139"
    },
    "items": null
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "42139"
    },
    "items": [
        {
            "metadata": {
                "name": "kubernetes",
                "namespace": "default",
                "uid": "94d084c0-03dc-40f6-aa5f-aedd328d0688",
                "resourceVersion": "234",
                "creationTimestamp": "2025-05-13T00:36:52Z",
                "labels": {
                    "component": "apiserver",
                    "provider": "kubernetes"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 8443
                    }
                ],
                "clusterIP": "10.96.0.1",
                "clusterIPs": [
                    "10.96.0.1"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "42139"
    },
    "items": null
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "42139"
    },
    "items": null
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "42139"
    },
    "items": null
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "42139"
    },
    "items": null
}
